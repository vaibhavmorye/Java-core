/*****************************************************************************************
* Service      :svc_insta_acc.pc
* Description	 :This service will be opened an One-In-One (Insta) account, Fetching customer
								details from CVLKRA,OTP Generation and confirmation.

* Input        :
*
* Output       : Success/Failure
*
* Author       : 3i-infotech
*
* Version      : 1.0		22-Jul-2014	Intial Release (CR-ISEC10-49310)	-	Vinod
* 						 : 1.1		22-Jul-2014	Insta changes - Handled Invalid status - Vinod
* 						 : 1.2		27-Jul-2015	Insta changes - Remove KRA token Logic - Vinod
*							 : 1.3		06-Aug-2015	Insta Campaign - Add adcampaign field - Amit
*							 : 1.4		07-Sep-2015	Bug Fix (Vinod)
*							 : 1.5		28-Sep-2015	Bug Fix - Intialise (Vinod)
*							 : 1.6		29-Sep-2015	Handled mobile no and email for OTP generation (Vinod)
*              : 1.7    06-Jan-2016 Bug fix - User id (Vinod)
*							 : 1.8    16-Oct-2015 Changes for Mobile Account Opening (Shoaib) 
*							 : 1.9		10-May-2016 Changes for CR-ISEC03-76936 KRA & Display issues in TS (Vinod)
*							 : 2.0		23-May-2016 Changes for UIDAI (Vinod)
*              : 2.1    17-Apr-2017 Index changes on IPO_INFO_PERSONAL_DTLS (Shoaib)
*							 : 2.2		23-Mar-2017 Changes for CKYC (Vinod)
*							 : 2.3		09-Aug-2017 Changes for core fix (Vinod)
*							 : 2.4    09-Aug-2017 Changes for updating UIDAI tran ID (Shoaib)
*							 : 2.5    12-Oct-2017 Changes for Bug fix (Vinod)
*							 : 2.6    31-Oct-2017 Changes for EKRA issue (Vinod)
*							 : 2.7    03-Nov-2017 Changes for EKRA failure (Vinod)
*							 : 2.8    03-Nov-2017 Changes for CR 100234 (Shoaib)
*              : 2.9    01-Dec-2017 Changes for comment UID no in pan update details (Vinod)
*							 : 3.0    23-Nov-2017 Changes for CERSAI (Shoaib)
*              : 3.1    18-Apr-2018 Changes for Aadhar ref (vaibhav)
*							 : 3.2 		05-Mar-2018 Changes for CR-ISEC03-106163 Aadhar at account level (Rajvi)
*							 : 3.3    21-May-2018 Changes for Optimisation (Rajvi)
*              : 3.4    29-May-2018 Changes for Aadhaar Storage and aadhaar key (vaibhav)
*****************************************************************************************/

#include <stdio.h>
#include <atmi.h>
#include <fml32.h>
#include <userlog.h>
#include <fml_def.h>
#include <eba.h>
#include <string.h>
#include <stdlib.h>
#include <fn_read_debug_lvl.h>
#include <fn_onln_regnpwd.h>
#include <sqlca.h>
#include <oraca.h>

char 	c_ServiceName[33];
char	c_kra_agency[5][10]={"CVLKRA","NDML","DOTEX","CAMS","KARVY"};	/*KRA Agencies*/
/*char  c_kra_fld_stts[5][3]={"03","04","05","13","14"}; *Intermediate Status**Commented in Ver 1.2**/
char  c_kra_fld_stts_I1[][3]={"03","04","05","11","12","13","14","22"}; /*Ver 1.2*/
char  c_mbl_acc_opn ; 	/** Ver 1.8 **/  
varchar v_aadhar_ref[33]; /** Ver 2.8 **/
varchar vc_cersai_no[30];  /** Ver 3.0 **/

void encrypt(char *, char *);
void error(FBFR32 *, char *);
int fn_inv_mob_chk( char *c_mobl_no);
int fn_crt_urn(char *c_servicename, char c_flg, char *c_usrid, char *c_encurnno , char *c_plnurnno, char *c_err_msg);
int fn_valid_pan_dob(char *c_pan_no, char *c_dob, char *c_pan_exist);
int	fn_upd_kra_dtls(FBFR32  *ptr_fml_Ibuffer,char *c_pan_no, char *c_dob, char *c_res_stts,char *c_err_msg);
/**int fn_validate_kra_otp_dtls(FBFR32 *ptr_fml_Ibuffer,char *c_pan_no,char *c_dob,char *c_agent_cd,char *c_ip_add,char *c_token,char *c_ret_cd,int *i_kra_agency,char *c_err_msg,char c_pan_exist);**Commented in Ver 2.2**/
int fn_validate_kra_otp_dtls(FBFR32 *ptr_fml_Ibuffer,char *c_pan_no,char *c_dob,char *c_uid_no, char *c_agent_cd,char *c_ip_add,char *c_token,char *c_ret_cd,int *i_kra_agency,char *c_err_msg,char c_pan_exist); /**Ver 2.2**/
int fn_kra_fld_lead_cap(char *c_websvc_stts_cd,char *c_lead_cd);
/*int fn_sp_ikd_info_kra_dtls_eba(char c_type, char *c_pan_no, char *c_stts_cd, int i_kra_provider, char *c_websvc_cd, char *c_websvc_kra_date,char *c_err_msg); ***Ver 2.0**/
int fn_sp_ikd_info_kra_dtls_eba(char c_type, char *c_pan_no, char *c_stts_cd, int i_kra_provider, char *c_websvc_cd, char *c_websvc_kra_date, int i_kyc_mode, char *c_ipv_flg, char *c_err_msg); 	/**VEer 2.0**/
int fn_actv_accnt(char *c_ServiceName, char *c_user_id, char *c_pan_no, char *c_dob, char *c_ip_add, char c_pan_exist);
int	fn_pan_format(char *c_pan_no);
/*int	fn_chk_mob_email_unq(char *c_mob_no, char *c_email, int *i_mob_no, int *i_email);**Ver 1.6**/
int	fn_chk_mob_email_unq(char *c_pan_no,char *c_mob_no, char *c_email, int *i_mob_no, int *i_email);	/**Ver 1.6**/
int	fn_validate_userid(char *c_Servicename, char *c_user_id, int i_type);	/*Ver 1.6*/
int fn_update_stts(char*,char*,char); /*** Ver 1.8 ***/
int fn_upd_uidai_dtls(FBFR32 **ptr_fml_temp_buffer, char *c_pan_no, char *c_uid_no,char *c_dob,
											char c_kra_status, char *c_err_msg);/*Ver 2.0*/
int	fn_upd_kra_upld_dtls(FBFR32 **ptr_fml_temp_buffer, char *c_pan_no, char *c_uid_no, 
												 char *c_ipv_nm, char *c_ipv_desgn, char *c_err_msg);/*Ver 2.0*/
int fn_chk_mbl_email_ICIS(char *c_servicename, char *c_serial_no,char c_mbl_email_flg, char *c_value,
                          char *c_relation, char c_agent_flg, int i_chk_flg, char *c_err_msg);	/*Ver 2.0*/
int fn_send_sms(char*,char*);	/*Ver 2.0*/
int fn_aadhar_vault(char*,char*); /*** Ver 2.8 ***/

void SVC_INSTA_ACC(TPSVCINFO *rqst)
{
	FBFR32 	*ptr_fml_Ibuffer=NULL;			/**Ver 1.5**added NULL**/
	FBFR32	*ptr_fml_Sbuffer=NULL;			/**Ver 1.5**added NULL**/
  FBFR32	*ptr_fml_temp_buffer=NULL;	/**Ver 1.5**added NULL**/

	int		i,j,k;
	int 	i_err[10];
  int 	i_ferr[10];
	int		i_retcd = 0;
	int		i_agent_cd;
	int		i_dob_minor;
	int		i_pan_exist;
	int		i_uid_exist;			/**Ver 2.0**/
	int		i_otp = 0;
	/*int		i_token_valid = 0; **Ver 1.2**/
	int		i_valid_otp = 0;
	int		i_valid_dob = 0;
	int 	i_valid_sub_dt = 0;
	int		i_valid_mob = 0;
	int		i_trnsctn;
	int 	i_kra_agency = 0;
	int		i_seq_reset=0;
	int		i_user_exist;
	int		i_buf_len;
	int		i_add_len=0;
	int		i_mask;
	int		i_sssn_exp;
	int		i_mob_no = 0;
	int		i_email = 0;
	int   i_usr_valid = 1; /*** Ver 1.8 ***/
	int   i_ret_cd;			/*** Ver 2.8 **/

	long	l_sssn_id = 0;	 /*** Ver 2.0 ***/
	long	l_bufferlength = 0;
	long	l_modf_ack=0;		 /*** Ver 2.0 ***/

	char  c_sms_msg[160+1];
  char  c_dept_cd[20];
  char  c_app_id[20];
	char	c_dob[11+1];
	char	c_rqst_typ;
	char	c_ret_cd = '\0';
	char	c_kra_status = 'N';
	char  c_sms_urn_no[10];
	char	c_mail_id[100];
	char	c_success_flg;
	char	c_otp_typ = 'K';
	char	c_otp_opn;
	char	c_kra_add[366+1];
	char	c_kra_add1[3][120+1];
	char	c_mob_no[15+1];
	char	c_lead_cd[3];
	char	c_res_stts;
	char  c_sucess_flg = 'N';
	char	c_occ_cd[50];
	char	c_income_cd = 'X';
	char	c_pep_flg = 'X';
	char	c_usr_passwd[50+1];
	char	c_serial_no[15];
	char  c_act_deact_flg1; 					/*** Ver 1.8 ***/
	char	c_app_status[20];						/** Ver 2.0**/
	char	c_lead_err[3];							/** Ver 2.0**/
	char	c_kyc_mode;									/** Ver 2.0**/
	char	c_ipv_flag;									/** Ver 2.0**/
	char	c_bnk_status;									/** Ver 2.0**/

	/*varchar	vc_error_msg[256];**commented in Ver 2.0**/
	varchar	vc_error_msg[500];	/**Added in Ver 2.0**/
	varchar	vc_ip_add[16];
	varchar	vc_passwd[50];

	EXEC SQL INCLUDE "table/icd_info_client_dtls.h";
	EXEC SQL INCLUDE "table/iam_info_agent_master.h";
	EXEC SQL INCLUDE "table/uac_usr_accnts.h";
	EXEC SQL INCLUDE "table/opd_onln_pwdrgn_dtls.h";
	EXEC SQL INCLUDE "table/ikkd_info_kra_kyc_dtls.h";
	EXEC SQL INCLUDE "table/ikd_info_kra_dtls.h";
	EXEC SQL INCLUDE "table/iksm_info_kra_status_master.h";
	EXEC SQL INCLUDE "table/usr_user_master.h";
	EXEC SQL INCLUDE "table/mar_mbl_accopn_rqst.h"; /*** Ver 1.8 ****/

  EXEC SQL BEGIN DECLARE SECTION;
  int         sql_cui_seq_no;
  int         sql_cui_recd_id;
  #define     LEN_CUI_USR_ID                 9
  varchar     sql_cui_usr_id[8+1];
  #define     LEN_CUI_URN_NO                 16
  varchar     sql_cui_urn_no[15+1];
  #define     LEN_CUI_STMT_DT                23
  varchar     sql_cui_stmt_dt[22+1];
  #define     LEN_CUI_FILE_PWD               31
  varchar     sql_cui_file_pwd[30+1];
  #define     LEN_CUI_USR_NM                 101
  varchar     sql_cui_usr_nm[100+1];
  #define     LEN_CUI_EMAIL_ID               101
  varchar     sql_cui_email_id[100+1];
  #define     LEN_CUI_FILE_NM                101
  varchar     sql_cui_file_nm[100+1];
  EXEC SQL END DECLARE SECTION;

	ptr_fml_Ibuffer = (FBFR32 *)rqst->data;
  strcpy(c_ServiceName, rqst->name);
  INITDBGLVL(c_ServiceName);

	MEMSET(sql_icd_pan_no);
	MEMSET(c_dob);
	MEMSET(sql_iam_agent_cd);
	MEMSET(c_sms_urn_no);
	MEMSET(sql_opd_urn_no);
	MEMSET(c_mail_id);
	MEMSET(c_sms_msg);
	MEMSET(c_dept_cd);
	MEMSET(c_app_id);
	MEMSET(vc_error_msg);
	MEMSET(sql_ikd_websvc_status_code);
	MEMSET(sql_ikd_websvc_kra_date);
	MEMSET(sql_ikkd_user_dob);
	MEMSET(vc_ip_add);
	MEMSET(c_kra_add);
	MEMSET(sql_ikkd_cor_city);
	MEMSET(sql_ikkd_cor_pincd);
	MEMSET(c_mob_no);
	MEMSET(c_lead_cd);
	MEMSET(c_occ_cd);
	MEMSET(sql_ikkd_pep_remark);
	MEMSET(c_serial_no);
	MEMSET(sql_ikd_token);
	/**** Ver 1.8 ****/
	MEMSET(sql_mar_employer_name_others);
	MEMSET(sql_mar_org_cd);
	MEMSET(sql_mar_client_desg_others);
	MEMSET(sql_mar_desg_cd);
	MEMSET(sql_mar_mobile);
	/**** Ver 1.8 ****/
	
	MEMSET(sql_ikkd_uid_no);		/*Ver 2.0*/
	MEMSET(c_app_status);				/*Ver 2.0*/
	MEMSET(c_lead_err);					/*Ver 2.0*/
	MEMSET(c_err_msg);					/*Ver 2.2*/

	MEMSET(sql_ikkd_uidai_trn_cd);	/** Ver 2.4 **/
	MEMSET(v_aadhar_ref);		/** Ver 2.8 **/
	MEMSET(vc_cersai_no);    /** Ver 3.0 **/

	i_ret_cd = 0;		/** Ver 2.8 **/
	sql_ikkd_pan_exist='';
	sql_icd_print_flg='';
	sql_uac_act_deact_flg='*';
	c_mbl_acc_opn = 'A'; /** Ver 1.8 **/

	i_err[0] = Fget32(ptr_fml_Ibuffer,FML_FML_NAME,0,(char *)sql_icd_pan_no.arr, 0);
	i_ferr[0] = Ferror32;
  i_err[1] = Fget32(ptr_fml_Ibuffer,FML_USR_DT_BRTH, 0, (char *)sql_ikkd_user_dob.arr, 0);
	i_ferr[1] = Ferror32;
  i_err[2] = Fget32(ptr_fml_Ibuffer,FML_DLR_CD, 0, (char *)sql_iam_agent_cd.arr, 0);
	i_ferr[2] = Ferror32;
  i_err[3] = Fget32(ptr_fml_Ibuffer,FML_RQST_TYP, 0, (char *)&c_rqst_typ, 0 );
	i_ferr[3] = Ferror32;
  i_err[4] = Fget32(ptr_fml_Ibuffer,FML_IP_ID, 0, (char *)vc_ip_add.arr, 0 );
	i_ferr[4] = Ferror32;
	/*** Ver 1.8 Changes ***/
	i_err[5] = Fget32(ptr_fml_Ibuffer,FML_DAM_TRNSCTN, 0, (char *)&c_mbl_acc_opn, 0 );
  i_ferr[5] = Ferror32;
	/*** Ver 1.8 changes ended ***/	
	i_err[6] = Fget32(ptr_fml_Ibuffer,FML_DP_ACCOUNT_NO, 0, (char *)sql_ikkd_uid_no.arr, 0); /*Ver 2.0*/
	i_ferr[6] = Ferror32;				/*Ver 2.0*/
	/**added in ver 3.4 **/
	i_err[7]  = Fget32(ptr_fml_Ibuffer, FML_USR_ANSWR1, 0, (char *)v_aadhar_ref.arr, 0);
  i_ferr[7] = Ferror32;
	/** added in ver 3.4 **/

	/** commented in ver 3.4  for(i=0; i<7; i++) **/
	for(i = 0; i < 8; i++) /** ver 3.4 **/
	{
		if(i_err[i] == -1)
    {
			if((i == 2 && i_ferr[i] == FNOTPRES) || (i == 4 && i_ferr[i] == FNOTPRES && c_rqst_typ != 'C'))
			{
				if(i==2)
				{
					strcpy(sql_iam_agent_cd.arr,"Insta");
				}

				if(i==4)
				{
					strcpy(vc_ip_add.arr,"*");
				}
			}
			/**** Ver 1.8 added below condition *****/
			else if(i == 5 && i_ferr[i] == FNOTPRES)
			{
				userlog("Account opening from ASP");
				i_usr_valid = 0;
			}
			/****** Ver 1.8 ended ******/ 
			else
			/***********Ver 2.0 start***********/
			if(i==6 && i_ferr[i] == FNOTPRES && (c_mbl_acc_opn == 'M' || c_rqst_typ == 'K'))	/**Ver 2.2**/
			{
				strcpy(sql_ikkd_uid_no.arr,"*");
			}
			else /***********Ver 2.0 end***********/
			 /** ver 3.4 started **/
			if (i == 7 && i_ferr[i] == FNOTPRES && (c_rqst_typ == 'H' || c_rqst_typ == 'C' || c_rqst_typ == 'T' || c_rqst_typ == 'K'|| c_rqst_typ == 'J' || c_rqst_typ == 'I' )) 
			{
				strcpy( v_aadhar_ref.arr, "*");	
			}
			else
			/** ver 3.4 ended**/
			{
      	userlog("Fget failed at i :%d:",i);
      	errlog(c_ServiceName, "S31005", Fstrerror32(i_ferr[i]), DEF_USR, DEF_SSSN, c_err_msg);
      	Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
      	tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
			}
    }
	}

	/*************Ver 2.0 start*************/
	if(strcmp(sql_ikkd_uid_no.arr,"*") != 0 && strlen(sql_ikkd_uid_no.arr) == 0)
	{
		strcpy(sql_ikkd_uid_no.arr,"*");
	}
	/*************Ver 2.0 end*************/

	/*************Ver 2.2 start*************/
	if(c_mbl_acc_opn != 'M' && strlen(sql_ikkd_uid_no.arr) != 12 && strcmp(sql_ikkd_uid_no.arr,"*") != 0)
	{
		userlog("sql_ikkd_uid_no.arr :%s:-:%d:",sql_ikkd_uid_no.arr,strlen(sql_ikkd_uid_no.arr));
		errlog(c_ServiceName, "S31010", Fstrerror32(i_ferr[i]), DEF_USR, DEF_SSSN, c_err_msg);
		strcpy(c_err_msg,"Please enter valid aadhaar number...");
    Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
    tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
	}
	/*************Ver 2.2 end *************/

	SETLEN(sql_icd_pan_no);
	SETLEN(sql_iam_agent_cd);
	SETLEN(sql_ikkd_user_dob);
	SETLEN(vc_ip_add);
	SETLEN(sql_ikkd_uid_no);		/*Ver 2.0*/

	if(DEBUG_MSG_LVL_3)
	{
		userlog("Pan No :%s:",sql_icd_pan_no.arr);
		userlog("Date of birth :%s:",sql_ikkd_user_dob.arr);
		userlog("UID no :%s:",sql_ikkd_uid_no.arr);					/*Ver 2.0*/
		userlog("Agent Code :%s:",sql_iam_agent_cd.arr);
		userlog("Request type :%c:",c_rqst_typ);
		userlog("vc_ip_add :%s:",vc_ip_add.arr);
		userlog("Call Source A - ASP , M - Mobile  :%c:",c_mbl_acc_opn); /**** Ver 1.8 ****/
	}

	/*********Ver 2.0 added start******/
	if(c_mbl_acc_opn == 'M' && (c_rqst_typ == 'D' || c_rqst_typ == 'I' || c_rqst_typ == 'H' || c_rqst_typ == 'J'))
	{
		i_err[0] = Fget32(ptr_fml_Ibuffer,FML_USR_ID,0,(char *)sql_mar_emp_no.arr, 0);
  	i_ferr[0] = Ferror32;
  	i_err[1] = Fget32(ptr_fml_Ibuffer,FML_SSSN_ID, 0, (char *)&l_sssn_id, 0);
  	i_ferr[1] = Ferror32;

		for(i=0; i<2; i++)
  	{
    	if(i_err[i] == -1)
    	{
				userlog("Fget failed at i :%d:",i);
        errlog(c_ServiceName, "S31015", Fstrerror32(i_ferr[i]), DEF_USR, DEF_SSSN, c_err_msg);
        Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
        tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
			}
		}

		SETLEN(sql_mar_emp_no);

		userlog("sql_mar_emp_no :%s:",sql_mar_emp_no.arr);
		userlog("l_sssn_id :%ld:",l_sssn_id);

		if(chk_mbl_sssn(c_ServiceName,sql_mar_emp_no.arr,l_sssn_id,c_err_msg) == -1)
		{
      Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
			errlog(c_ServiceName, "S31020", "", DEF_USR, DEF_SSSN, c_err_msg);
      tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
		}
	}
	/*********Ver 2.0 added end******/

	i_retcd = fn_pan_format(sql_icd_pan_no.arr);

	if(i_retcd == -1)
	{
		errlog(c_ServiceName, "S31025", SQLMSG , DEF_USR, DEF_SSSN, c_err_msg);
		sprintf(c_err_msg,"Invalid PAN format");		/*** Ver 1.8 ****/
    Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
    tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
	}

	if(i_retcd != 10)
	{
		userlog("Invalid Pan format <i_retcd :%d:>",i_retcd);
		errlog(c_ServiceName, "S31030", "" , DEF_USR, DEF_SSSN, c_err_msg);
		sprintf(c_err_msg,"Invalid PAN format");
    Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
    tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
	}

	if(c_rqst_typ == 'C')	/*Check status of Pan*/
	{
		if(strcmp(sql_iam_agent_cd.arr,"Insta") != 0)
		{
			i_agent_cd = 0;

			EXEC SQL
				SELECT	1 
				INTO 		:i_agent_cd 
				FROM 		IAM_INFO_AGENT_MASTER 
				WHERE 	IAM_AGENT_CD = :sql_iam_agent_cd;

			if(SQLCODE != 0 && SQLCODE != NO_DATA_FOUND)
			{
				errlog(c_ServiceName, "S31035", SQLMSG, DEF_USR, DEF_SSSN, c_err_msg);
				Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
      	tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
			}

			if(i_agent_cd == 0)
			{
				errlog(c_ServiceName, "S31040", "", DEF_USR, DEF_SSSN, c_err_msg);
				sprintf(c_err_msg,"Invalid Agent Code. Please enter the Valid Agent Code");	
				userlog("%s",c_err_msg);
        Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
        tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
			}
		}

		i_dob_minor = 0;

		EXEC SQL
			SELECT	COUNT(*) 
			INTO 		:i_dob_minor
			FROM 		DUAL 
			WHERE 	TRUNC(SYSDATE) >= ADD_MONTHS(TO_DATE(:sql_ikkd_user_dob,'DD-Mon-YYYY'),12*18);

		if(SQLCODE != 0)
		{
			errlog(c_ServiceName, "S31045", SQLMSG, DEF_USR, DEF_SSSN, c_err_msg);
      Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
      tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
		}

		if(i_dob_minor == 0)
		{
			errlog(c_ServiceName, "S31050", "", DEF_USR, DEF_SSSN, c_err_msg);
      sprintf(c_err_msg,"Minor account cannot be opened");
			userlog("%s",c_err_msg);
      Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
      tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
		}

		if(sql_icd_pan_no.arr[3] != 'P')
		{
			errlog(c_ServiceName, "B91129", "", DEF_USR, DEF_SSSN, c_err_msg);
/*      sprintf(c_err_msg,"This account can be opened only by Individuals who are Resident Indians.  Check your PAN and retry. ");*/
			userlog("%s",c_err_msg);
      Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
      tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);	
		}

		i_pan_exist = 0;

		EXEC	SQL
			SELECT	COUNT(1) 
			INTO 		:i_pan_exist 
			FROM 		IPBM_PAN_BARR_MASTER 
			WHERE 	IPBM_PAN_NO = :sql_icd_pan_no
			AND			IPBM_RESTRICTION_REMARKS = 'A';

		if(SQLCODE != 0)
		{
			errlog(c_ServiceName, "S31055", SQLMSG, DEF_USR, DEF_SSSN, c_err_msg);
      Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
      tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);			
		}

		if(i_pan_exist > 0)
		{
			errlog(c_ServiceName, "S31060", "", DEF_USR, DEF_SSSN, c_err_msg);
			/**** Ver 1.8 ****/
			if(c_mbl_acc_opn == 'M')
			{
				sprintf(c_err_msg,"SEBI");
			}
			else
			{
			/***** Ver 1.8 ****/
      	sprintf(c_err_msg,"We are unable to verify your input data. Please try after some time.");
			}
			userlog("%s",c_err_msg);
      Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
      tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
		}

		/*************************Added in Ver 1.1 start*************************/
		EXEC SQL	/*Find latest account status*/
			SELECT	Serial_no,
							Uac_actdact_flg
			INTO		:c_serial_no,
							:sql_uac_act_deact_flg
			FROM		(SELECT ICD_SERIAL_NO Serial_no,
											NVL(UAC_ACT_DEACT_FLG,'*') Uac_actdact_flg
		 					 FROM   ICD_INFO_CLIENT_DTLS,
											UAC_USR_ACCNTS
		 					 WHERE  ICD_USER_ID = UAC_USR_ID
		 					 AND    ICD_PAN_NO = :sql_icd_pan_no
		 					 ORDER by UAC_LST_UPDT_DATE DESC
							)
			WHERE	ROWNUM = 1;

		if(SQLCODE != 0) 
		{
			if(SQLCODE == NO_DATA_FOUND)
			{
				strcpy(c_serial_no,"NA");
			}
			else
			{
				errlog(c_ServiceName, "S31065", SQLMSG, DEF_USR, DEF_SSSN, c_err_msg);
     		Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
     		tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
			}
		}
	
		rtrim(c_serial_no);	
		/*************************Added in Ver 1.1 end*************************/

		i_pan_exist = 0;
		MEMSET(sql_icd_product_cd);
		MEMSET(sql_icd_cust_type);
		MEMSET(sql_icd_user_id);
		MEMSET(sql_icd_inward_status);
		
		EXEC SQL
			SELECT	1,
							NVL(ICD_PRODUCT_CD,'*'),   
							NVL(ICD_CUST_TYPE,'*'),
							NVL(ICD_USER_ID,'*'),
							NVL(ICD_EBA_UPLOAD_FLG,'N'),
							NVL(ICD_PRINT_FLG,'N'),
							NVL(UAC_ACT_DEACT_FLG,'*'),
							NVL(ICD_INWARD_STATUS,'*')		/*Ver 1.1*/
			INTO 		:i_pan_exist,
							:sql_icd_product_cd,
							:sql_icd_cust_type,
							:sql_icd_user_id,
							:sql_icd_eba_upload_flg,
							:sql_icd_print_flg,
							:sql_uac_act_deact_flg,
							:sql_icd_inward_status				/*Ver 1.1*/
			FROM 		ICD_INFO_CLIENT_DTLS,
							UAC_USR_ACCNTS 
			WHERE		ICD_USER_ID = UAC_USR_ID (+) 
			AND			ICD_PAN_NO = :sql_icd_pan_no
			AND			DECODE(:c_serial_no,'NA',1,ICD_SERIAL_NO) = DECODE(:c_serial_no,'NA',1,:c_serial_no) /*Ver 1.1*/
			AND			ROWNUM = 1;

		if(SQLCODE != 0 && SQLCODE != NO_DATA_FOUND)
		{
			errlog(c_ServiceName, "S31070", SQLMSG, DEF_USR, DEF_SSSN, c_err_msg);
      Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
      tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
		}

		/********************Added in Ver 1.1 start********************/
		SETNULL(sql_icd_inward_status);

		if(DEBUG_MSG_LVL_3)
		{
			userlog("sql_icd_inward_status :%s:",sql_icd_inward_status.arr);
		}

		if(strcmp(sql_icd_inward_status.arr,"I") == 0)	/*If Inward status is I allow account opeining*/
		{
			i_pan_exist = 0;
			MEMSET(sql_icd_product_cd);
    	MEMSET(sql_icd_cust_type);
    	MEMSET(sql_icd_user_id);
    	MEMSET(sql_icd_inward_status);

			EXEC SQL
				SELECT  1,
              	NVL(ICD_PRODUCT_CD,'*'),
              	NVL(ICD_CUST_TYPE,'*'),
              	NVL(ICD_USER_ID,'*'),
              	NVL(ICD_EBA_UPLOAD_FLG,'N'),
              	NVL(ICD_PRINT_FLG,'N'),
              	NVL(UAC_ACT_DEACT_FLG,'*'),
              	NVL(ICD_INWARD_STATUS,'*')
      	INTO    :i_pan_exist,
              	:sql_icd_product_cd,
              	:sql_icd_cust_type,
              	:sql_icd_user_id,
              	:sql_icd_eba_upload_flg,
              	:sql_icd_print_flg,
              	:sql_uac_act_deact_flg,
              	:sql_icd_inward_status
      	FROM    ICD_INFO_CLIENT_DTLS,
              	UAC_USR_ACCNTS
      	WHERE   ICD_USER_ID = UAC_USR_ID (+)
      	AND     ICD_PAN_NO = :sql_icd_pan_no
				AND			ICD_INWARD_STATUS <> 'I'
      	AND     ROWNUM = 1;

		 if(SQLCODE != 0 && SQLCODE != NO_DATA_FOUND)
    	{
      	errlog(c_ServiceName, "S31075", SQLMSG, DEF_USR, DEF_SSSN, c_err_msg);
      	Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
      	tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
    	}	
		}
	
		if(DEBUG_MSG_LVL_3)
		{
			userlog("Before sql_uac_act_deact_flg :%c:",sql_uac_act_deact_flg);
		}

		c_act_deact_flg1 = sql_uac_act_deact_flg; /***** Ver 1.8 ******/

		if(sql_uac_act_deact_flg != 'S' && sql_uac_act_deact_flg != '*')
		if(sql_uac_act_deact_flg != 'S' && sql_uac_act_deact_flg != '*' && sql_icd_eba_upload_flg != 'N') /*Ver1.4*/
    {
      sql_uac_act_deact_flg='A';    /*Other than Suspended redirect to Login Page if exist in UAC*/
    }
		/********************Added in Ver 1.1 end********************/

		if(DEBUG_MSG_LVL_3)
    {
      userlog("i_pan_exist :%d:",i_pan_exist);
      userlog("sql_icd_product_cd :%s:",sql_icd_product_cd.arr);
      userlog("sql_icd_cust_type :%s:",sql_icd_cust_type.arr);
      userlog("sql_icd_user_id :%s:",sql_icd_user_id.arr);
      userlog("sql_icd_eba_upload_flg :%c:",sql_icd_eba_upload_flg);
      userlog("sql_icd_print_flg :%c:",sql_icd_print_flg);
      userlog("After sql_uac_act_deact_flg :%c:",sql_uac_act_deact_flg);
    }

		if(i_pan_exist == 0)	/*Pan Not Exist*/
		{
			userlog("Pan not exist");
			
			/*i_retcd=fn_validate_kra_otp_dtls(ptr_fml_Ibuffer,sql_icd_pan_no.arr,sql_ikkd_user_dob.arr,sql_iam_agent_cd.arr,vc_ip_add.arr,sql_ikd_token.arr,&c_ret_cd,&i_kra_agency,c_err_msg,'N'); **Comented Ver 2.2***/
			i_retcd=fn_validate_kra_otp_dtls(ptr_fml_Ibuffer,sql_icd_pan_no.arr,sql_ikkd_user_dob.arr,sql_ikkd_uid_no.arr,sql_iam_agent_cd.arr,vc_ip_add.arr,sql_ikd_token.arr,&c_ret_cd,&i_kra_agency,c_err_msg,'N'); /*Ver 2.2*/

			if(i_retcd != 0)
			{
				Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
				errlog(c_ServiceName, "S31080", "", DEF_USR, DEF_SSSN, c_err_msg);
				tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
			}
		}
		else		/*Pan Exist*/
		{
			if(sql_icd_eba_upload_flg == 'Y')
			{
				/*if(sql_uac_act_deact_flg == '*' || (sql_uac_act_deact_flg != 'A' && sql_uac_act_deact_flg != 'S'
																					   && strcmp(sql_icd_product_cd.arr,"ONE-IN-ONE") != 0))**Ver 1.1*/

				if(sql_uac_act_deact_flg == '*')   /*Ver 1.1*/
				{
					/*Known Your Status*/
					errlog(c_ServiceName, "B91121", "", DEF_USR, DEF_SSSN, c_err_msg);
      		Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
      		tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
				}
				else
				{
					/*if(strcmp(sql_icd_product_cd.arr,"ONE-IN-ONE") == 0 && sql_icd_print_flg != 'Y' && sql_uac_act_deact_flg == 'N')***Ver 1.4***/
					/*** 
          if(strcmp(sql_icd_product_cd.arr,"ONE-IN-ONE") == 0 && sql_icd_print_flg != 'Y')    **Ver 1.4**  commented in ver 1.8 ******/
					if(strcmp(sql_icd_product_cd.arr,"ONE-IN-ONE") == 0 && sql_icd_print_flg != 'Y' && c_act_deact_flg1 == 'N') /*** Ver 1.8 ***/
					{
						/*i_retcd=fn_validate_kra_otp_dtls(ptr_fml_Ibuffer,sql_icd_pan_no.arr,sql_ikkd_user_dob.arr,sql_iam_agent_cd.arr,vc_ip_add.arr,sql_ikd_token.arr,&c_ret_cd,&i_kra_agency,c_err_msg,'Y'); **Commented Ver 2.2**/
						i_retcd=fn_validate_kra_otp_dtls(ptr_fml_Ibuffer,sql_icd_pan_no.arr,sql_ikkd_user_dob.arr,sql_ikkd_uid_no.arr,sql_iam_agent_cd.arr,vc_ip_add.arr,sql_ikd_token.arr,&c_ret_cd,&i_kra_agency,c_err_msg,'Y'); /*Ver 2.2*/

      			if(i_retcd != 0)
      			{
        			Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
        			errlog(c_ServiceName, "S31085", "", DEF_USR, DEF_SSSN, c_err_msg);
        			tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
      			}
					}
					else if(sql_uac_act_deact_flg == 'S')
					{
						EXEC SQL
							SELECT  COUNT(*)
							INTO		:i_retcd
							FROM 		ADH_ACT_DEACT_HSTRY
							WHERE 	ADH_ACT_DEACT_FLG = 'S'
							AND 		ADH_ACT_DEACT_DT >=  SYSDATE - 90
							AND 		ADH_CLM_MTCH_ACCNT IN ( SELECT 	UAC_CLM_MTCH_ACCNT
																							FROM 		ICD_INFO_CLIENT_DTLS,
																											UAC_USR_ACCNTS
																							WHERE 	ICD_USER_ID = UAC_USR_ID
																							AND 		ICD_PAN_NO NOT IN (UPPER('SIKKIMCATG'), UPPER('APPLIEDFOR'), UPPER('AAACI1195H'))
																							AND 	ICD_PAN_NO = :sql_icd_pan_no
																							AND 	UAC_ACT_DEACT_FLG ='S');

						if(SQLCODE != 0)
						{
              errlog(c_ServiceName, "S31090", SQLMSG, DEF_USR, DEF_SSSN, c_err_msg);
							Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
              tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
						}

						if(i_retcd != 0)
						{
							errlog(c_ServiceName, "B91127", SQLMSG, DEF_USR, DEF_SSSN, c_err_msg);
              Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
              tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
						}

						/*i_retcd=fn_validate_kra_otp_dtls(ptr_fml_Ibuffer,sql_icd_pan_no.arr,sql_ikkd_user_dob.arr,sql_iam_agent_cd.arr,vc_ip_add.arr,sql_ikd_token.arr,&c_ret_cd,&i_kra_agency,c_err_msg,'S'); **Commented Ver 2.2**/
						i_retcd=fn_validate_kra_otp_dtls(ptr_fml_Ibuffer,sql_icd_pan_no.arr,sql_ikkd_user_dob.arr,sql_ikkd_uid_no.arr,sql_iam_agent_cd.arr,vc_ip_add.arr,sql_ikd_token.arr,&c_ret_cd,&i_kra_agency,c_err_msg,'S'); /*Ver 2.2*/

            if(i_retcd != 0)
            {
              Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
              errlog(c_ServiceName, "S31095", "", DEF_USR, DEF_SSSN, c_err_msg);
              tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
            }
					}
					else if(sql_uac_act_deact_flg == 'A')
					{
						c_ret_cd = 'O';	/*Login*/
					}
					else
					{
						/*Known Your Status*/
						errlog(c_ServiceName, "B91121", "", DEF_USR, DEF_SSSN, c_err_msg);
						Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
          	tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
					}
				}
			}
			else			/*sql_icd_eba_upload_flg = 'N'*/
			{
				if(sql_uac_act_deact_flg == 'A')
				{
					c_ret_cd = 'O';		
				}
				else
				{
					errlog(c_ServiceName, "B91121", "", DEF_USR, DEF_SSSN, c_err_msg);
          Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
          tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
				}
			}
		}

		userlog("c_ret_cd :%c:",c_ret_cd);
		/*userlog("sql_ikd_token :%s:",sql_ikd_token.arr); **Ver 1.2*/
		userlog("c_kra_agency :%s:",c_kra_agency[i_kra_agency]);

		if(c_ret_cd == 'P' || c_ret_cd == 'V')
		{
			i_valid_dob=fn_valid_pan_dob(sql_icd_pan_no.arr, sql_ikkd_user_dob.arr, &sql_ikkd_pan_exist);

    	if(i_valid_dob != 1)
    	{
				errlog(c_ServiceName, "S31100","" , DEF_USR, DEF_SSSN, c_err_msg);
				sprintf(c_err_msg,"Date of Birth (DOB)/PAN entered by you is not matching with KRA record, please enter the correct DOB/PAN");
      	Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
      	tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
    	}
		}

		/*i_err[0] = Fadd32(ptr_fml_Ibuffer, FML_ACK_NMBR, (char *) sql_ikd_token.arr, 0);**
		**i_ferr[0] = Ferror32; ***Ver 1.2**Not required**/
		i_err[0] = Fadd32(ptr_fml_Ibuffer, FML_GIFT_STATUS, (char *) &c_ret_cd, 0);
    i_ferr[0] = Ferror32;
		i_err[1] = Fadd32(ptr_fml_Ibuffer, FML_CLIENT_TITLE, (char *)c_kra_agency[i_kra_agency], 0);
    i_ferr[1] = Ferror32;

		for(i=0; i<2; i++)
  	{
    	if(i_err[i] == -1)
    	{
       	userlog("Fget32 failed at i :%d:",i);
       	errlog(c_ServiceName, "S31105", Fstrerror32(i_ferr[i]), DEF_USR, DEF_SSSN, c_err_msg);
       	Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
       	tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
    	}
  	}
	}
	else
	if(c_rqst_typ == 'T') /*KRA Token response*/
	{
		
		i_valid_dob=fn_valid_pan_dob(sql_icd_pan_no.arr, sql_ikkd_user_dob.arr,&sql_ikkd_pan_exist);

		if(i_valid_dob != 1)
    {
			errlog(c_ServiceName, "S31110","" , DEF_USR, DEF_SSSN, c_err_msg);
			/**** Ver 1.8 ***/
			if(c_mbl_acc_opn == 'M')
			{
				 sprintf(c_err_msg,"DOB");
				 fn_update_stts(sql_icd_pan_no.arr,"Date of Birth (DOB)/PAN not matching with KRA records",'R');
			}
			else
			{
			/****** Ver 1.8 ******/
				sprintf(c_err_msg,"Date of Birth (DOB)/PAN entered by you is not matching with KRA record, please enter the correct DOB/PAN");
			}
      Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
      tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
    }

		i_err[0] = Fget32(ptr_fml_Ibuffer,FML_INSTR_NO,0,(char *)sql_ikd_websvc_status_code.arr, 0);
    i_ferr[0] = Ferror32;
    i_err[1] = Fget32(ptr_fml_Ibuffer,FML_TO_ADDR, 0, (char *)sql_ikd_websvc_kra_date.arr, 0);
    i_ferr[1] = Ferror32;
    i_err[2] = Fget32(ptr_fml_Ibuffer,FML_LM_FLG, 0, (char *)&c_kyc_mode, 0);		/*Ver 2.0*/
    i_ferr[2] = Ferror32;																												/*Ver 2.0*/
    i_err[3] = Fget32(ptr_fml_Ibuffer,FML_BLK_FLG, 0, (char *)&c_ipv_flag, 0);	/*Ver 2.0*/
    i_ferr[3] = Ferror32;																												/*Ver 2.0*/

		if(DEBUG_MSG_LVL_1)
		{
			userlog("sql_ikd_websvc_status_code :%s:",sql_ikd_websvc_status_code.arr);
			userlog("sql_ikd_websvc_kra_date :%s:",sql_ikd_websvc_kra_date.arr);
			userlog("c_kyc_mode :%c:",c_kyc_mode);						/*Ver 2.0*/
			userlog("c_ipv_flag :%c:",c_ipv_flag);						/*Ver 2.0*/
		}

		for(i=0; i<4; i++)
    {
      if(i_err[i] == -1)
      {
        userlog("Fget failed at i :%d:",i);
        errlog(c_ServiceName, "S31115", Fstrerror32(i_ferr[i]), DEF_USR, DEF_SSSN, c_err_msg);
        Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
        tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
      }
    }

		sql_ikd_kyc_mode=0;
		MEMSET(sql_ikd_ipv_flag);

		/*sql_ikd_kyc_mode=c_kyc_mode-'0';                **Ver 2.0**/
		sql_ikd_kyc_mode=atoi(&c_kyc_mode);             /**Ver 2.0**/
		sql_ikd_ipv_flag.arr[0]=c_ipv_flag;							/**Ver 2.0**/

		SETLEN(sql_ikd_ipv_flag);		/**Ver 2.0**/

		if(strncmp(&sql_ikd_websvc_status_code.arr[1],"88",2) == 0)
		{
			errlog(c_ServiceName, "S31120", "", DEF_USR, DEF_SSSN, c_err_msg);
			sprintf(c_err_msg,"Currently, Unable to process your request, Please try after some time.");
      Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
      tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
		}

		if(strncmp(&sql_ikd_websvc_status_code.arr[1],"99",2) == 0)
    {
      errlog(c_ServiceName, "S31125", "", DEF_USR, DEF_SSSN, c_err_msg);
      sprintf(c_err_msg,"Invalid PAN number.");
      Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
      tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
    }

		if(strncmp(&sql_ikd_websvc_status_code.arr[1],"05",2) == 0) /*PAN is not KRA KYC compliant*/
    {
      errlog(c_ServiceName, "S31130", "", DEF_USR, DEF_SSSN, c_err_msg);
			
			/*Lead Capture****************Un-comment in Ver 1.2**/
     	i_retcd = fn_kra_fld_lead_cap(sql_ikd_websvc_status_code.arr,c_lead_cd);

     	if(i_retcd != 0)
     	{
       	userlog("Lead Code :%s:",c_lead_cd);
       	strcpy(c_err_msg,c_lead_cd);
     	}
     	/***********Un-commented in Ver 1.2**************************/
			/*strcpy(c_err_msg,"I2");***Commented in Ver 1.2**/

			/**************added Ver 2.0 start**************/
			if(c_mbl_acc_opn == 'M')
			{
				MEMSET(c_err_msg);
				strcpy(c_err_msg,"KNV");	/*KRA Not Verified*/
			}
			/**************added Ver 2.0 end**************/

      Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
      tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
    }

		SETLEN(sql_ikd_websvc_status_code);
		SETLEN(sql_ikd_websvc_kra_date);

		EXEC SQL
      SELECT	DISTINCT IKSM_KRA_PROVIDER_CODE,
							TO_CHAR(SYSDATE,'DD-Mon-YYYY HH24:MM:SS') /*Ver 1.2*/
      INTO  	:sql_iksm_kra_provider_code,
							:sql_ikd_websvc_kra_date      /*Ver 1.2*/
      FROM  	IKSM_INFO_KRA_STATUS_MASTER
      WHERE  	IKSM_WEBSVC_STATUS_CODE = :sql_ikd_websvc_status_code;

		if(SQLCODE != 0)
		{
			userlog("Invalid KRA status code");
			errlog(c_ServiceName, "S31135", SQLMSG, DEF_USR, DEF_SSSN, c_err_msg);
      Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
      tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
		}

		SETNULL(sql_ikd_websvc_kra_date);   /*Ver 1.2*/
		c_success_flg='\0';
    MEMSET(vc_error_msg);

		if(tpbegin(0,0) == -1)
		{
			errlog(c_ServiceName, "S31140", TPMSG, DEF_USR, DEF_SSSN, c_err_msg);
      Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
      tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
		}

		/*i_retcd=fn_sp_ikd_info_kra_dtls_eba(c_rqst_typ, sql_icd_pan_no.arr, "N", sql_iksm_kra_provider_code, sql_ikd_websvc_status_code.arr, sql_ikd_websvc_kra_date.arr, c_err_msg);***Ver 2.0**/
		i_retcd=fn_sp_ikd_info_kra_dtls_eba(c_rqst_typ, sql_icd_pan_no.arr, "N", sql_iksm_kra_provider_code, sql_ikd_websvc_status_code.arr, sql_ikd_websvc_kra_date.arr, sql_ikd_kyc_mode, sql_ikd_ipv_flag.arr, c_err_msg);	/**Ver 2.0**/

		if(i_retcd != 0)
		{
      Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
      tpabort(0);
			errlog(c_ServiceName, "S31145", SQLMSG, DEF_USR, DEF_SSSN, c_err_msg);
      tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
		}

		/**if(strncmp(&sql_ikd_websvc_status_code.arr[1],"02",2) == 0 || strncmp(&sql_ikd_websvc_status_code.arr[1],"12",2) == 0) **Commented in Ver 1.2**/
    if(strncmp(&sql_ikd_websvc_status_code.arr[1],"02",2) == 0) /*Ver 1.2*/
    {
      c_kra_status = 'Y';
    }
		else
		{
			c_kra_status = 'N';
		}

		EXEC SQL
			UPDATE	IKKD_INFO_KRA_KYC_DTLS
			SET			IKKD_KRA_STATUS = :c_kra_status,
							IKKD_MOD_DT = SYSDATE,
							IKKD_MODIFY_BY = 'SVC_INSTA_ACC'	/*Ver 3.2*/
			WHERE		IKKD_PAN_NO = :sql_icd_pan_no
			AND			IKKD_KRA_ACTDEACT = 'A';

		if(SQLCODE != 0)
		{
			errlog(c_ServiceName, "S31150", SQLMSG, DEF_USR, DEF_SSSN, c_err_msg);
      tpabort(0);
      Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
      tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
		}

		userlog("IKKD_INFO_KRA_KYC_DTLS: status :%c: Updated Successfully",c_kra_status);

		if(tpcommit(0) == -1)
    {
      errlog(c_ServiceName, "S31155", TPMSG, DEF_USR, DEF_SSSN, c_err_msg);
			tpabort(0);
      Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
      tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
    }

		if(c_kra_status == 'Y')
		{
			
			i_kra_agency=	(int)sql_ikd_websvc_status_code.arr[0] - (int)'0';
			c_ret_cd = 'K'; /*3rd KRA Hit*/

			userlog("c_kra_agency :%s:",c_kra_agency[i_kra_agency]);
			
			/** ver 3.4 started **/
			/** if request is from mobile and pan is verified but ckyc agency if othere than CVL OR NDML then give error **/

			if ((strcmp(c_kra_agency[i_kra_agency], "CVLKRA") != 0 && 
           strcmp(c_kra_agency[i_kra_agency], "NDML") != 0) && c_mbl_acc_opn == 'M' )
      {
				if(tpbegin(0,0) == -1)
        {
          errlog(c_ServiceName, "S31160", TPMSG, DEF_USR, DEF_SSSN, c_err_msg);
          Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
          tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
        }			
				
				EXEC SQL
          UPDATE  MAR_MBL_ACCOPN_RQST
          SET     MAR_STATUS = 'R',
									MAR_ACCOPN_MSG = 'Customer is already present with some other KRA'
          WHERE   MAR_PAN_NO = :sql_icd_pan_no
          AND     MAR_STATUS NOT IN ('R','I','M','A');
				
				if (SQLCODE != 0)
        {
          errlog(c_ServiceName, "S31165",SQLMSG , DEF_USR, DEF_SSSN, c_err_msg);
          Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
          tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
        }
							 
				if(tpcommit(0) == -1)
        {
          errlog(c_ServiceName, "S31170", TPMSG, DEF_USR, DEF_SSSN, c_err_msg);
          tpabort(0);
          Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
          tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
        }

				userlog("Customer is already present with some other KRA");
        errlog(c_ServiceName, "S31175","Customer is already present with some other KRA" , DEF_USR, DEF_SSSN, c_err_msg);
        Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
        tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);

			}
			
			/** ver 3.4 ended **/

			i_err[0] = Fadd32(ptr_fml_Ibuffer, FML_GIFT_STATUS, (char *) &c_ret_cd, 0);
    	i_ferr[0] = Ferror32;
    	i_err[1] = Fadd32(ptr_fml_Ibuffer, FML_CLIENT_TITLE, (char *)c_kra_agency[i_kra_agency], 0);
    	i_ferr[1] = Ferror32;

    	for(i=0; i<2; i++)
    	{
      	if(i_err[i] == -1)
      	{
        	userlog("Fget32 failed at i :%d:",i);
        	errlog(c_ServiceName, "S31180", Fstrerror32(i_ferr[i]), DEF_USR, DEF_SSSN, c_err_msg);
        	Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
        	tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
      	}
    	}
		}
		else
		{
			errlog(c_ServiceName, "S31185", "", DEF_USR, DEF_SSSN, c_err_msg);
			/*Lead Capture***Un-commented in Ver 1.2***************/
     	i_retcd = fn_kra_fld_lead_cap(sql_ikd_websvc_status_code.arr,c_lead_cd);

     	if(i_retcd != 0)
     	{
       	userlog("Lead Code :%s:",c_lead_cd);
       	strcpy(c_err_msg,c_lead_cd);
     	}
      /**********Un-commented in Ver 1.2**********************/

			/**************added Ver 2.0 start**************/
      if(c_mbl_acc_opn == 'M')
      {
        MEMSET(c_err_msg);
        strcpy(c_err_msg,"KNV");  /*KRA Not Verified*/
      }
      /**************added Ver 2.0 end**************/

			/*strcpy(c_err_msg,"I2"); **Commented Ver 1.2***/
      Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
      tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
		}
		userlog("Return Code :%c:",c_ret_cd);
	}
	else
	if(c_rqst_typ == 'K') /*Updating KRA full details*/
	{
		if(tpbegin(0,0) ==-1)
		{
			errlog(c_ServiceName, "S31190", TPMSG, DEF_USR, DEF_SSSN, c_err_msg);
      Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
      tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
		}

		i_retcd=fn_upd_kra_dtls(ptr_fml_Ibuffer,sql_icd_pan_no.arr,sql_ikkd_user_dob.arr,&c_res_stts,c_err_msg);

    if(i_retcd != 0)
    {
      Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
			tpabort(0);
			/***** Ver 1.8 **** Ver 2.2**
			if((strcmp(c_err_msg,"DOB") == 0)  && c_mbl_acc_opn == 'M')
			{
				fn_update_stts(sql_icd_pan_no.arr,"Date of Birth (DOB)/PAN not matching with KRA records",'R');
		  }
			**** Ver 1.8 ended *****/	
      errlog(c_ServiceName, "S31195","" , DEF_USR, DEF_SSSN, c_err_msg);
      tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
    }

		if(tpcommit(0) == -1)
		{
			errlog(c_ServiceName, "S31200", TPMSG, DEF_USR, DEF_SSSN, c_err_msg);
			tpabort(0);
      Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
      tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
		}

		/****************Added in Ver 2.0 end****************/
		userlog("c_err_msg :%s:",c_err_msg);
		if(strncmp(c_err_msg,"WEBERR",6) == 0)	/***Error from CVLKRA***/
		{
			if(strcmp(c_err_msg,"WEBERR-012") == 0)
			{
				errlog(c_ServiceName, "S31205", TPMSG, DEF_USR, DEF_SSSN, c_err_msg);
      	if(c_mbl_acc_opn == 'M')
      	{
        	sprintf(c_err_msg,"DOB");
        	fn_update_stts(sql_icd_pan_no.arr,"Date of Birth (DOB)/PAN not matching with KRA records",'R');
      	}
      	else
      	{
        	sprintf(c_err_msg,"Date of Birth (DOB)/PAN entered by you is not matching with KRA record, please enterthe correct DOB/PAN");
      	}
			}
			else
			{
				errlog(c_ServiceName, "S31210", TPMSG, DEF_USR, DEF_SSSN, c_err_msg);
			}

			Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
			tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
		}
		/****************Added in Ver 2.0 end****************/
	
		userlog("c_res_stts :%c:",c_res_stts);

		if(c_res_stts == 'N')	/*NRI*/
		{
			errlog(c_ServiceName, "B91129", "", DEF_USR, DEF_SSSN, c_err_msg);
      Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, "I6", 0);
      tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
		}

		i_valid_dob=fn_valid_pan_dob(sql_icd_pan_no.arr,sql_ikkd_user_dob.arr,&sql_ikkd_pan_exist);

		if(i_valid_dob != 1)
		{
      errlog(c_ServiceName, "S31215","" , DEF_USR, DEF_SSSN, c_err_msg);
			/***** Ver 1.8 *****/
			if(c_mbl_acc_opn == 'M')
      {
				sprintf(c_err_msg,"DOB");
				fn_update_stts(sql_icd_pan_no.arr,"Date of Birth (DOB)/PAN not matching with KRA records",'R');
			}
			else
			{
			/***** Ver 1.8 ****/
      	sprintf(c_err_msg,"Date of Birth (DOB)/PAN entered by you is not matching with KRA record, please enter the correct DOB/PAN");
			}
      Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
      tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
		}

		c_ret_cd = 'P';	/*Generate OTP*/

		if(Fadd32(ptr_fml_Ibuffer, FML_GIFT_STATUS, (char *) &c_ret_cd, 0) == -1)
		{
			errlog(c_ServiceName, "S31220", TPMSG, DEF_USR, DEF_SSSN, c_err_msg);
      Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
      tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
		}
	}
	else
	if(c_rqst_typ == 'G' || c_rqst_typ == 'R')	/*Generate/Re-Generate OTP*/
	{
		i_valid_dob=fn_valid_pan_dob(sql_icd_pan_no.arr,sql_ikkd_user_dob.arr,&sql_ikkd_pan_exist);

    if(i_valid_dob != 1)
    {
      errlog(c_ServiceName, "S31225","" , DEF_USR, DEF_SSSN, c_err_msg);
      sprintf(c_err_msg,"Date of Birth (DOB)/PAN entered by you is not matching with KRA record, please enter the correct DOB/PAN");
      Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
      tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
    }

		MEMSET(sql_ikkd_kra_mob);
		MEMSET(sql_ikkd_kra_email);

		if(c_rqst_typ == 'G')
		{
			i_err[0] = Fget32(ptr_fml_Ibuffer,FML_INSTR_NO,0,(char *)sql_ikkd_kra_mob.arr, 0);
  		i_ferr[0] = Ferror32;
  		i_err[1] = Fget32(ptr_fml_Ibuffer,FML_TO_ADDR, 0, (char *)sql_ikkd_kra_email.arr, 0);
  		i_ferr[1] = Ferror32;
			i_err[2] = Fget32(ptr_fml_Ibuffer,FML_TRNSCTN_FLW, 0, (char *)&c_otp_typ, 0);
    	i_ferr[2] = Ferror32;
			/********* Ver 2.4 ********/
  		i_err[1] = Fget32(ptr_fml_Ibuffer,FML_MDC_DOCDATE, 0, (char *)sql_ikkd_mobile_relation.arr, 0);
  		i_ferr[1] = Ferror32;
			i_err[2] = Fget32(ptr_fml_Ibuffer,FML_DOCTYPE , 0, (char *)sql_ikkd_email_relation.arr, 0);
    	i_ferr[2] = Ferror32;
			/********* Ver 2.4 ********/

			if(DEBUG_MSG_LVL_3)
    	{
      	userlog("sql_ikkd_kra_mob :%s:",sql_ikkd_kra_mob.arr);
      	userlog("sql_ikkd_kra_email :%s:",sql_ikkd_kra_email.arr);
      	userlog("OTP Type :%c:",c_otp_typ);
    	}

			for(i=0; i<3; i++)
    	{
      	if(i_err[i] == -1)
      	{
        	if(i == 2 && i_ferr[i] == FNOTPRES)
        	{
          	c_otp_typ = 'K';
        	}
        	else
        	{
          	userlog("Fget32 failed at i :%d:",i);
          	errlog(c_ServiceName, "S31230", Fstrerror32(i_ferr[i]), DEF_USR, DEF_SSSN, c_err_msg);
          	Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
          	tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
        	}
      	}
    	}

			SETLEN(sql_ikkd_kra_mob);
			SETLEN(sql_ikkd_kra_email);
			SETLEN(sql_ikkd_mobile_relation);		/** Ver 2.4 **/
			SETLEN(sql_ikkd_email_relation);		/** Ver 2.4 **/

			/****************Commented in Ver 2.0 start****************
			EXEC SQL
      	SELECT  COUNT(DISTINCT(IAD_SERIAL_NO))
      	INTO    :i_retcd
      	FROM    IAD_INFO_ADDRESS_DTLS,
								ICD_INFO_CLIENT_DTLS,
	  						UAC_USR_ACCNTS
      	WHERE   IAD_MOBILE_10DGT = :sql_ikkd_kra_mob
				AND     IAD_SERIAL_NO = ICD_SERIAL_NO
				AND     ICD_USER_ID = UAC_USR_ID(+)
				AND     ICD_INWARD_STATUS <> 'I'
				AND     UAC_ACT_DEACT_FLG <> 'S'
				AND     IAD_ADDRESS_TYPE IN (UPPER('APPLICANT_PMT'), UPPER('APPLICANT_CORR'));
	
    	if(SQLCODE != 0)
    	{
     		errlog(c_ServiceName, "S91121", SQLMSG, DEF_USR, DEF_SSSN, c_err_msg);
				Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
        tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
    	}

    	if(i_retcd >= 6)   *** Ver 2.0 changed from 4 to 6 ***
    	{ **Mob mapped to more than 4 clients**
     		errlog(c_ServiceName, "B91127", "", DEF_USR, DEF_SSSN, c_err_msg);
				Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
        tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
    	}

			EXEC SQL
				SELECT 	COUNT(DISTINCT(IPD_SERIAL_NO))
				INTO		:i_retcd
				FROM		IPD_INFO_PERSONAL_DTLS,
				 				ICD_INFO_CLIENT_DTLS,
	  						UAC_USR_ACCNTS
				WHERE		(UPPER(IPD_EMAIL) = UPPER(:sql_ikkd_kra_email)
				OR			UPPER(IPD_EMAIL2)  = UPPER(:sql_ikkd_kra_email))
				AND			IPD_SERIAL_NO = ICD_SERIAL_NO
				AND     ICD_USER_ID = UAC_USR_ID(+)
				AND     ICD_INWARD_STATUS <> 'I'
				AND     UAC_ACT_DEACT_FLG <> 'S'
				AND			IPD_TYPE = 'APPLICANT';

			if(SQLCODE != 0)
      {
        errlog(c_ServiceName, "S91121", SQLMSG, DEF_USR, DEF_SSSN, c_err_msg);
        Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
        tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
      }

			if(i_retcd >= 6)  *** Ver 2.0 changed from 4 to 6 ***
      { **EMAIL mapped to more than 4 clients**
        errlog(c_ServiceName, "B91127", "", DEF_USR, DEF_SSSN, c_err_msg);
        Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
         tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
      }
			*******************Commented in Ver 2.0 end*******************/

			/******************Added in Ver 2.0 start******************/
			i_retcd = fn_chk_mbl_email_ICIS(c_ServiceName, sql_icd_pan_no.arr, 'M', sql_ikkd_kra_mob.arr,
                                     "", 'N' , 0, c_err_msg);

      if(i_retcd != 0)
      {
        Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
        errlog(c_ServiceName, "S91121", SQLMSG, DEF_USR, DEF_SSSN, c_err_msg);
        tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
      }

			i_retcd = fn_chk_mbl_email_ICIS(c_ServiceName, sql_icd_pan_no.arr, 'M', sql_ikkd_kra_mob.arr,
                                     "", 'Y' , 0, c_err_msg);

      if(i_retcd != 0)
      {
        Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
        errlog(c_ServiceName, "S91121", SQLMSG, DEF_USR, DEF_SSSN, c_err_msg);
        tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
      }

			/**** Ver 2.4 ****/
			i_retcd = fn_chk_mbl_email_ICIS(c_ServiceName, sql_icd_pan_no.arr, 'M', sql_ikkd_kra_mob.arr,
                                     sql_ikkd_mobile_relation.arr, 'N' , 1, c_err_msg);

      if(i_retcd != 0)
      {
        Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
        errlog(c_ServiceName, "S91121", SQLMSG, DEF_USR, DEF_SSSN, c_err_msg);
        tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
      }

			/**** Ver 2.4 ****/

			i_retcd = fn_chk_mbl_email_ICIS(c_ServiceName, sql_icd_pan_no.arr, 'E', sql_ikkd_kra_email.arr,
                                     "" , 'N' , 0, c_err_msg);

      if(i_retcd != 0)
      {
        Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
        errlog(c_ServiceName, "S91121", SQLMSG, DEF_USR, DEF_SSSN, c_err_msg);
        tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
      }

			i_retcd = fn_chk_mbl_email_ICIS(c_ServiceName, sql_icd_pan_no.arr, 'E', sql_ikkd_kra_email.arr,
                                     "", 'Y' , 0, c_err_msg);

      if(i_retcd != 0)
      {
        Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
        errlog(c_ServiceName, "S91121", SQLMSG, DEF_USR, DEF_SSSN, c_err_msg);
        tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
      }

			/***** Ver 2.4 *****/
			i_retcd = fn_chk_mbl_email_ICIS(c_ServiceName, sql_icd_pan_no.arr, 'E', sql_ikkd_kra_email.arr,
                                     sql_ikkd_email_relation.arr, 'N' , 1, c_err_msg);

      if(i_retcd != 0)
      {
        Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
        errlog(c_ServiceName, "S91121", SQLMSG, DEF_USR, DEF_SSSN, c_err_msg);
        tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
      }
			/***** Ver 2.4 *****/


			/******************Added in Ver 2.0 end******************/

			if(strcmp(sql_ikkd_kra_mob.arr,"*") == 0 && strcmp(sql_ikkd_kra_email.arr,"*") == 0)
    	{
      	errlog(c_ServiceName, "S31235", TPMSG, DEF_USR, DEF_SSSN, c_err_msg);
      	sprintf(c_err_msg,"Please enter Mobile number or Email Id");
      	userlog("%s",c_err_msg);
      	Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
      	tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
    	}

			/*i_retcd=fn_chk_mob_email_unq(sql_ikkd_kra_mob.arr,sql_ikkd_kra_email.arr,&i_mob_no,&i_email); **Ver 1.6**/
			i_retcd=fn_chk_mob_email_unq(sql_icd_pan_no.arr,sql_ikkd_kra_mob.arr,sql_ikkd_kra_email.arr,&i_mob_no,&i_email);		/**er 1.6**/
			
			if(i_retcd != 0)
			{
				errlog(c_ServiceName, "S31240", SQLMSG, DEF_USR, DEF_SSSN, c_err_msg);
				Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
        tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
			}

			if(i_mob_no != 0) /*** || i_email != 0) commented in ver 2.4 as sending OTP on email only ***/
			{
				errlog(c_ServiceName, "S31245", TPMSG, DEF_USR, DEF_SSSN, c_err_msg);
				sprintf(c_err_msg,"The Mobile Number or Email ID is linked to one active customer.");
        userlog("%s",c_err_msg);
        Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
        tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
			}

			if(strcmp(sql_ikkd_kra_mob.arr,"*") != 0)
			{
				sql_ikkd_otp_opt='M';
			}

			if(strcmp(sql_ikkd_kra_email.arr,"*") != 0)
      {
        sql_ikkd_otp_opt='E';
      }

			if(strcmp(sql_ikkd_kra_mob.arr,"*") != 0 && strcmp(sql_ikkd_kra_email.arr,"*") != 0)
			{
				sql_ikkd_otp_opt='B';
			}

			userlog("sql_ikkd_otp_opt :%c:",sql_ikkd_otp_opt);
		}

		i_valid_otp = 0;
		sql_ikkd_otp_status = '\0';
		i_valid_mob = 0;
		MEMSET(sql_ikkd_otp_no);
		MEMSET(sql_ikkd_crt_otp_dt);
		MEMSET(sql_ikkd_name);
		MEMSET(c_mail_id);
		MEMSET(c_mob_no);
		SETLEN(sql_ikkd_kra_email);
		SETLEN(sql_ikkd_kra_mob);

		EXEC SQL
			SELECT	NVL(IKKD_OTP_NO,'*'),
							(CASE WHEN NVL(IKKD_CRT_OTP_DT,SYSDATE-1/48)+1/48 > SYSDATE THEN 1 ELSE 0 END),
							NVL(IKKD_OTP_STATUS,'N'),
							(CASE WHEN :c_rqst_typ = 'R' THEN 1 ELSE 
							DECODE(NVL(DECODE(:c_otp_typ,'K',IKKD_KRA_MOB,IKKD_BNK_VRFD_MOBILE_NO),'*'),:sql_ikkd_kra_mob,1,0) END),
							/*** IKKD_NAME,  ver 2.4 ****/
							IKKD_UID_NM,  /*** Ver 2.4 ***/
							NVL(IKKD_KRA_EMAIL,' '),
							NVL(DECODE(:c_otp_typ,'K',IKKD_KRA_MOB,IKKD_BNK_VRFD_MOBILE_NO),'*'),
							NVL(IKKD_OTP_OPT,:sql_ikkd_otp_opt)
			INTO		:sql_ikkd_otp_no,
							:i_valid_otp,
							:sql_ikkd_otp_status,
							:i_valid_mob,
							:sql_ikkd_name,
							:c_mail_id,
							:c_mob_no,
							:c_otp_opn
			FROM		IKKD_INFO_KRA_KYC_DTLS
			WHERE		IKKD_PAN_NO = :sql_icd_pan_no
			/*** AND			IKKD_KRA_STATUS = 'Y'  commented in ver 2.4 ****/
			AND			IKKD_KRA_ACTDEACT = 'A'
			AND			IKKD_KRA_DOB IS NOT NULL;

		rtrim(c_mail_id);
		rtrim(c_mob_no);

		if(DEBUG_MSG_LVL_3)
    {
      userlog("sql_ikkd_otp_no :%s:",sql_ikkd_otp_no.arr);
      userlog("i_valid_otp :%d:",i_valid_otp);
      userlog("c_otp_typ :%c:",c_otp_typ);
      userlog("i_valid_mob :%d:",i_valid_mob);
      userlog("sql_ikkd_name :%s:",sql_ikkd_name.arr);
      userlog("c_mail_id :%s:",c_mail_id);
			userlog("c_mob_no :%s:",c_mob_no);
			userlog("c_otp_opn :%c:",c_otp_opn);
    }

		if(SQLCODE != 0) 
		{
			errlog(c_ServiceName, "S31250", SQLMSG, DEF_USR, DEF_SSSN, c_err_msg);
     	Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
     	tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
		}

		if(c_rqst_typ == 'R')
		{
			strcpy(sql_ikkd_kra_mob.arr,c_mob_no);
			strcpy(sql_ikkd_kra_email.arr,c_mail_id);
		}
		else
		{
			c_otp_opn=sql_ikkd_otp_opt;
		}

		userlog("sql_ikkd_kra_mob.arr :%s:",sql_ikkd_kra_mob.arr);
		userlog("sql_ikkd_kra_email.arr :%s:",sql_ikkd_kra_email.arr);

		/********** commented in ver 2.4 ******
		if(i_valid_mob != 1 && strcmp(sql_ikkd_kra_mob.arr,"*") != 0)
		{
			errlog(c_ServiceName, "S31255", "", DEF_USR, DEF_SSSN, c_err_msg);
			
			if(c_otp_typ == 'B')
			{
				sprintf(c_err_msg,"Entered Mobile number and Bank mobile number not matched");
			}
			else
			{
				sprintf(c_err_msg,"Entered Mobile number and KRA mobile number not matched");
			}

			userlog("%s",c_err_msg);
      Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
      tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
		}
		****************Ver 2.4 comment ***********/

		i_valid_otp = 0;	/*** Ver 2.4 ***/
		if(strcmp(sql_ikkd_otp_no.arr,"*") == 0 || i_valid_otp == 0 || sql_ikkd_otp_status != 'Y' || c_rqst_typ == 'R')
		{
			i_retcd = fn_crt_urn(c_ServiceName,CRT_URN_FLG,DEF_USR,sql_opd_urn_no.arr,c_sms_urn_no,c_err_msg);
		
			if(i_retcd != 0)
			{
				errlog(c_ServiceName, "S31260", SQLMSG, DEF_USR, DEF_SSSN, c_err_msg);
      	Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
      	tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
			}

			userlog("URN is :%s:",c_sms_urn_no);

			if((strcmp(sql_ikkd_kra_mob.arr,"*") != 0 && (c_otp_opn == 'M' || c_otp_opn == 'B')) || c_rqst_typ == 'R')
			/*** Ver 2.4 rqst type 'R' added ****/
			{

				SETLEN(sql_ikkd_kra_mob);

      	i_retcd = fn_inv_mob_chk(sql_ikkd_kra_mob.arr);

      	if(i_retcd != 0)
      	{
        	errlog(c_ServiceName, "S31265", SQLMSG, DEF_USR, DEF_SSSN, c_err_msg);
        	Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
        	tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
      	}

				sprintf(c_sms_msg, "%s is the OTP to complete your ICICIdirect account opening verification. Do not disclose OTP to anyone. OTP is valid for limited time.",c_sms_urn_no);
			
				strcpy( c_dept_cd, "WEBTRADE" );
    		strcpy( c_app_id, "URN" );

				if(DEBUG_MSG_LVL_1)
				{
					userlog("SMS string :%s:",c_sms_msg); 
					userlog("c_dept_cd :%s:",c_dept_cd);
					userlog("c_app_id :%s:",c_app_id);
					userlog("sql_opd_urn_no :%s:",sql_opd_urn_no.arr);
				}

				ptr_fml_Sbuffer = (FBFR32 *) tpalloc ("FML32", NULL, MIN_FML_BUF_LEN);

				if(ptr_fml_Sbuffer == NULL)
				{
					errlog(c_ServiceName, "S31270",TPMSG, DEF_USR, DEF_SSSN, c_err_msg);
      		Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
      		tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
				}

				i_err[0] = Fadd32 (ptr_fml_Sbuffer, FML_USR_MBL_NMBRS, (char *)sql_ikkd_kra_mob.arr, 0);
    		i_ferr[0]= Ferror32;
    		i_err[1] = Fadd32 (ptr_fml_Sbuffer, FML_SYS_MSG, (char *)c_sms_msg, 0);
    		i_ferr[1]= Ferror32;
    		i_err[2] = Fadd32 (ptr_fml_Sbuffer, FML_ORD_DP_ID, (char *)c_dept_cd, 0);
    		i_ferr[2]= Ferror32;
    		i_err[3] = Fadd32 (ptr_fml_Sbuffer, FML_ARD_APPLCTN_RFRNC, (char *)c_app_id, 0);
    		i_ferr[3]= Ferror32;
		
				for(i=0; i<4; i++)
    		{
      		if(i_err[i] == -1)
      		{
        		userlog("Fget32 failed at i :%d:",i);
        		errlog(c_ServiceName, "S31275", Fstrerror32(i_ferr[i]), DEF_USR, DEF_SSSN, c_err_msg);
        		Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
						tpfree((char *)ptr_fml_Sbuffer);
        		tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
      		}
    		}	
	
				/*Call the sms service*/
				i_retcd = tpcall("SVC_SND_SMS", (char *)ptr_fml_Sbuffer, 0, (char **)&ptr_fml_Sbuffer, &l_bufferlength, TPNOTRAN);

    		if ( i_retcd == -1 )
    		{
      		if ( tperrno != TPESVCFAIL )
      		{
        		errlog ( c_ServiceName, "S31280", TPMSG, DEF_USR , DEF_SSSN, c_err_msg );
      		}
      		else
      		{
        		Fget32 ( ptr_fml_Sbuffer, FML_ERR_MSG, 0, c_err_msg, 0 );
      		}
		
					Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
					tpfree((char *)ptr_fml_Sbuffer);
      		tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
    		}
				
				tpfree((char *)ptr_fml_Sbuffer);	/*Ver 1.5*/
			}

			/****************** commented in ver 2.4 **********

			if(strcmp(sql_ikkd_kra_email.arr,"*") != 0 && c_otp_typ != 'B' && (c_otp_opn == 'E' || c_otp_opn == 'B'))
			{
				MEMSET(sql_cui_stmt_dt);

  			EXEC SQL
    			SELECT  1,
            			CLK_RGNPWD_SEQ.NEXTVAL,
            			TO_CHAR(TRUNC(SYSDATE),'yyyymmdd'),
            			PAR_CLK_GRDSEQ_RST_DT - TRUNC(SYSDATE)
    			INTO    :sql_cui_recd_id,
            			:sql_cui_seq_no,
            			:sql_cui_stmt_dt,
            			:i_seq_reset
    			FROM    PAR_SYSTM_PRMTR;

  			if( SQLCODE != 0 )
  			{
					errlog ( c_ServiceName, "S31285", SQLMSG, DEF_USR , DEF_SSSN, c_err_msg );
          Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
          *tpfree((char *)ptr_fml_Sbuffer); **Ver 1.5**
          tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
  			}

  			SETNULL(sql_cui_stmt_dt);

				sprintf((char *)sql_cui_file_nm.arr,"INSOTP_%s_%d.pdf",(char *)sql_cui_stmt_dt.arr,sql_cui_seq_no);

  			if ( i_seq_reset != 0 )
  			{
    			userlog("Please reset the sequence");
					errlog ( c_ServiceName, "S31290", SQLMSG, DEF_USR , DEF_SSSN, c_err_msg );
          Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
          *tpfree((char *)ptr_fml_Sbuffer);**Ver 1.5*
          tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
  			}

				INIT(i_err,10);
  			INIT(i_ferr,10);

				*tpfree((char *)ptr_fml_Sbuffer); **Commented in Ver 1.5*

				ptr_fml_Sbuffer = (FBFR32 *) tpalloc ("FML32", NULL, MIN_FML_BUF_LEN);

        if(ptr_fml_Sbuffer == NULL)
        {
          errlog(c_ServiceName, "S31295",TPMSG, DEF_USR, DEF_SSSN, c_err_msg);
          Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
          tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
        }

				i_err[0]  = Fadd32(ptr_fml_Sbuffer,FML_TRN_NO,(char *)&sql_cui_seq_no,0);
  			i_ferr[0] = Ferror32;
  			i_err[1]  = Fadd32(ptr_fml_Sbuffer,FML_TRNSCTN_ID,(char *)&sql_cui_recd_id,0);
  			i_ferr[1] = Ferror32;
  			i_err[2]  = Fadd32(ptr_fml_Sbuffer,FML_USR_ID,(char *)"",0);
  			i_ferr[2] = Ferror32;
  			i_err[3]  = Fadd32(ptr_fml_Sbuffer,FML_STATLIN,(char *)sql_opd_urn_no.arr,0);
  			i_ferr[3] = Ferror32;
  			i_err[4]  = Fadd32(ptr_fml_Sbuffer,FML_SYSDATE,(char *)sql_cui_stmt_dt.arr,0);
  			i_ferr[4] = Ferror32;
  			i_err[5]  = Fadd32(ptr_fml_Sbuffer,FML_NEW_USR_PASSWORD,(char *)"",0);
  			i_ferr[5] = Ferror32;
  			i_err[6]  = Fadd32(ptr_fml_Sbuffer,FML_USR_USR_NM,(char *)sql_ikkd_name.arr,0);
  			i_ferr[6] = Ferror32;
  			i_err[7]  = Fadd32(ptr_fml_Sbuffer,FML_USR_EMAIL_ADDRSS,(char *)sql_ikkd_kra_email.arr,0);
  			i_ferr[7] = Ferror32;
  			i_err[8]  = Fadd32(ptr_fml_Sbuffer,FML_FILE_NAME,(char *)sql_cui_file_nm.arr,0);
  			i_ferr[8] = Ferror32;
  			i_err[9]  = Fadd32(ptr_fml_Sbuffer,FML_STCK_CD,(char *)"INSOTP",0);
  			i_ferr[9] = Ferror32;

				for(i=0;i<9;i++)
				{
					if(i_err[i] == -1)
					{
						userlog("Fget in :%d:",i);
						errlog ( c_ServiceName, "S31300", Fstrerror32(i_ferr[i]), DEF_USR , DEF_SSSN, c_err_msg );
						Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
          	tpfree((char *)ptr_fml_Sbuffer);
          	tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
					}
				}

				i_retcd = tpcall ( "SVC_UPLD_URN", (char *) ptr_fml_Sbuffer, 0,
                        (char **)&ptr_fml_Sbuffer, &l_bufferlength, 0 );

  			if (i_retcd == -1)
  			{
    			if(TPCODE == TPESVCFAIL)
    			{
      			Fget32 ( ptr_fml_Sbuffer, FML_ERR_MSG, 0, c_err_msg, 0 );
      			userlog ( "Error in the called service :%s:", c_err_msg );
    			}
    			else
    			{
      			userlog ( "Error while calling the service." );
    			}

    			errlog ( c_ServiceName, "S31305", TPMSG, DEF_USR, DEF_SSSN, c_err_msg );
  			}

				tpfree((char *)ptr_fml_Sbuffer);		*Ver 1.5*
				userlog("Mail sent successfully");
			}

			************* commented in ver 2.4 *****************/
			i_trnsctn=fn_equ_begintran(c_ServiceName,DEF_USR,DEF_SSSN,c_err_msg);
			if(i_trnsctn == -1)
			{
        Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
				errlog ( c_ServiceName, "S31310", TPMSG, DEF_USR, DEF_SSSN, c_err_msg );
        /*tpfree((char *)ptr_fml_Sbuffer);**Ver 1.5**/
        tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
			}

			SETLEN(sql_opd_urn_no);

			EXEC SQL
      	UPDATE  IKKD_INFO_KRA_KYC_DTLS
      	SET     IKKD_OTP_NO = :sql_opd_urn_no,
              	IKKD_OTP_STATUS = 'N',
              	IKKD_CRT_OTP_DT= SYSDATE,
								IKKD_OTP_ATTEMPT = 0,
								/*** IKKD_OTP_OPT= :c_otp_opn,
								IKKD_IBANK_STATUS = DECODE(:c_otp_typ, 'B',IKKD_IBANK_STATUS,NULL), Ver 2.4 ***/
								IKKD_OTP_OPT = 'M',
								IKKD_MOD_DT = SYSDATE,
								IKKD_MODIFY_BY = 'SVC_INSTA_ACC'  /*Ver 3.2*/
      	WHERE   IKKD_PAN_NO = :sql_icd_pan_no
				AND			IKKD_KRA_DOB IS NOT NULL
				/*** AND			IKKD_KRA_STATUS = 'Y' commented in ver 2.4 *******/
				AND			IKKD_KRA_ACTDEACT = 'A';

			if(SQLCODE != 0)
			{
				errlog ( c_ServiceName, "S31315", SQLMSG, DEF_USR, DEF_SSSN, c_err_msg );
				Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
				fn_equ_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
        /*tpfree((char *)ptr_fml_Sbuffer);**Ver 1.5**/
        tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
			}

			if(fn_equ_committran(c_ServiceName,DEF_USR,DEF_SSSN,i_trnsctn,c_err_msg) == -1)
			{
				errlog ( c_ServiceName, "S31320", TPMSG, DEF_USR, DEF_SSSN, c_err_msg );
				fn_equ_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
        Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
        /*tpfree((char *)ptr_fml_Sbuffer);**Ver 1.5**/
        tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
			}
		}

		c_ret_cd = 'V'; /*Confirm OTP*/

		userlog("URN is :%s:",c_sms_urn_no);
		userlog("c_ret_cd :%c:",c_ret_cd);

		i_err[0] = Fadd32(ptr_fml_Ibuffer, FML_USR_USR_NM, (char *) sql_ikkd_name.arr, 0);
    i_ferr[0]= Ferror32;
    i_err[1] = Fchg32(ptr_fml_Ibuffer, FML_TO_ADDR,0,(char *) sql_ikkd_kra_mob.arr, 0);
    i_ferr[1]= Ferror32;
    i_err[2] = Fadd32(ptr_fml_Ibuffer, FML_PARAM_TO, (char *) c_mail_id, 0);
    i_ferr[2]= Ferror32;
    i_err[3] = Fadd32(ptr_fml_Ibuffer, FML_GIFT_STATUS, (char *) &c_ret_cd, 0);
    i_ferr[3]= Ferror32;

    for(i=0; i<4; i++)
    {
      if(i_err[i] == -1)
      {
        userlog("Fget32 failed at i :%d:",i);
        errlog(c_ServiceName, "S31325", Fstrerror32(i_ferr[i]), DEF_USR, DEF_SSSN, c_err_msg);
				Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
				tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
      }
    }
	}
	else
	if(c_rqst_typ == 'S') /*Confirm OTP*/
	{
		i_valid_dob=fn_valid_pan_dob(sql_icd_pan_no.arr,sql_ikkd_user_dob.arr,&sql_ikkd_pan_exist);

    if(i_valid_dob != 1)
    {
      errlog(c_ServiceName, "S31330","" , DEF_USR, DEF_SSSN, c_err_msg);
      sprintf(c_err_msg,"Date of Birth (DOB)/PAN entered by you is not matching with KRA record, please enter the correct DOB/PAN");
      Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
      tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
    }

		if(Fget32(ptr_fml_Ibuffer,FML_PARAM_TO, 0, (char *)c_sms_urn_no, 0) == -1)
    {
      errlog(c_ServiceName, "S31335", FMLMSG, DEF_USR, DEF_SSSN, c_err_msg);
      Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
      tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
    }

		userlog("URN No :%s:",c_sms_urn_no);	

		i_valid_otp = 0;
		sql_ikkd_otp_attempt = 0;
		sql_ikkd_otp_status = 'N';
    MEMSET(sql_ikkd_otp_no);
    MEMSET(sql_ikkd_crt_otp_dt);

    EXEC SQL
      SELECT  NVL(IKKD_OTP_NO,'*'),
              (CASE WHEN NVL(IKKD_CRT_OTP_DT,SYSDATE)+1/48 > SYSDATE THEN 1 ELSE 0 END),
							NVL(IKKD_OTP_ATTEMPT,0)+1,
							NVL(IKKD_OTP_STATUS,'N')
      INTO    :sql_ikkd_otp_no,
              :i_valid_otp,
							:sql_ikkd_otp_attempt,
							:sql_ikkd_otp_status
      FROM    IKKD_INFO_KRA_KYC_DTLS
      WHERE   IKKD_PAN_NO = :sql_icd_pan_no
			AND			IKKD_KRA_DOB IS NOT NULL
			/*** AND			IKKD_KRA_STATUS = 'Y' commented in ver 2.4 ***/
			AND			IKKD_KRA_ACTDEACT = 'A';

    if(SQLCODE != 0)
    {
      errlog(c_ServiceName, "S31340", SQLMSG, DEF_USR, DEF_SSSN, c_err_msg);
      Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
      tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
    }

    if(DEBUG_MSG_LVL_3)
    {
      userlog("sql_ikkd_otp_no :%s:",sql_ikkd_otp_no.arr);
      userlog("i_valid_otp :%d:",i_valid_otp);
			userlog("sql_ikkd_otp_attempt :%d:",sql_ikkd_otp_attempt);
    }

		if(i_valid_otp == 1)
		{
			encrypt(c_sms_urn_no,sql_opd_urn_no.arr);

			userlog("sql_opd_urn_no :%s:",sql_opd_urn_no.arr);

			if(strncmp(sql_opd_urn_no.arr,sql_ikkd_otp_no.arr,8) != 0)
			{
				sql_ikkd_otp_status='F';
			}
			else
			{
				sql_ikkd_otp_status = 'Y';
			}
		}
		else
		{
			sql_ikkd_otp_status = 'X';
			sql_ikkd_otp_attempt = 0;
		}

		if(tpbegin(0,0) == -1)
		{
			errlog(c_ServiceName, "S31345", TPMSG, DEF_USR, DEF_SSSN, c_err_msg);
      Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
      tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
		}

		EXEC SQL
			UPDATE	IKKD_INFO_KRA_KYC_DTLS
			SET			IKKD_OTP_STATUS = :sql_ikkd_otp_status,
							IKKD_MOD_OTP_DT = SYSDATE,
							IKKD_OTP_ATTEMPT = :sql_ikkd_otp_attempt,
							IKKD_MOD_DT = SYSDATE,
							IKKD_MODIFY_BY = 'SVC_INSTA_ACC'  /*Ver 3.2*/
			WHERE		IKKD_PAN_NO = :sql_icd_pan_no
			AND			IKKD_KRA_DOB IS NOT NULL
			/**** AND			IKKD_KRA_STATUS = 'Y' commented in ver 2.4 ****/
			AND			IKKD_KRA_ACTDEACT	= 'A';

		if(SQLCODE != 0)
		{
			errlog(c_ServiceName, "S31350", SQLMSG, DEF_USR, DEF_SSSN, c_err_msg);
			tpabort(0);
      Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
      tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
		}

		if(tpcommit(0) == -1)
    {
      errlog(c_ServiceName, "S31355", TPMSG, DEF_USR, DEF_SSSN, c_err_msg);
			tpabort(0);
      Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
      tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
    }

		if(DEBUG_MSG_LVL_3)
    {
      userlog("URN Matching status :%c:",sql_ikkd_otp_status);
    }

		if(sql_ikkd_otp_attempt > 2 && sql_ikkd_otp_status != 'Y')
    {
      errlog(c_ServiceName, "B91125", "", DEF_USR, DEF_SSSN, c_err_msg);
      Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
      tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
    }

		if(sql_ikkd_otp_status == 'X' || sql_ikkd_otp_status == 'F')
		{
			if(sql_ikkd_otp_status == 'F')
			{
				errlog(c_ServiceName, "B91123", "", DEF_USR, DEF_SSSN, c_err_msg);
			}
			else
			{
				errlog(c_ServiceName, "B91124", "", DEF_USR, DEF_SSSN, c_err_msg);
			}

      Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
      tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
		}

		c_ret_cd = 'U'; /*Generate User ID and Password*/

		userlog("sql_ikkd_pan_exist (Generate User Id :%c:)",sql_ikkd_pan_exist);

		if(sql_ikkd_pan_exist == 'Y')
		{
			MEMSET(sql_icd_user_id);

			/*************Commented in Ver 1.7 start*************
			EXEC SQL
				SELECT 	ICD_USER_ID
				INTO		:sql_icd_user_id
				FROM		ICD_INFO_CLIENT_DTLS
				WHERE		ICD_PAN_NO = :sql_icd_pan_no;
			*************Commented in Ver 1.7 end*************/
			
			/***************Added Ver in 1.7 start***************/
      EXEC SQL
        SELECT  ICD_USER_ID
        INTO    :sql_icd_user_id
        FROM    ICD_INFO_CLIENT_DTLS,
                UAC_USR_ACCNTS
        WHERE   UAC_USR_ID = ICD_USER_ID
        AND     UAC_ACT_DEACT_FLG = 'N'
        AND     ICD_PAN_NO = :sql_icd_pan_no;
      /***************Added Ver in 1.7 end***************/

			userlog("sql_icd_user_id :%s:",sql_icd_user_id.arr);

			if(SQLCODE != 0)
			{
				/*errlog ( c_ServiceName, "S31360", FMLMSG, DEF_USR, DEF_SSSN, c_err_msg );**Commented in Ver 1.7*/
				errlog ( c_ServiceName, "S31365", SQLMSG, DEF_USR, DEF_SSSN, c_err_msg );  /*Ver 1.7*/
      	Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
      	/*tpfree((char *)ptr_fml_Sbuffer);**Ver 1.5**/
      	tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
			}

			SETNULL(sql_icd_user_id);

			if(Fadd32(ptr_fml_Ibuffer, FML_TO_ADDR, (char *) sql_icd_user_id.arr, 0) == -1)
    	{
      	errlog ( c_ServiceName, "S31370", FMLMSG, DEF_USR, DEF_SSSN, c_err_msg );
      	Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
      	/*tpfree((char *)ptr_fml_Sbuffer);**Ver 1.5**/
      	tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
    	}
		}
		
		userlog("c_ret_cd :%c:",c_ret_cd);

    if(Fadd32(ptr_fml_Ibuffer, FML_GIFT_STATUS, (char *) &c_ret_cd, 0) == -1)
    {
      errlog ( c_ServiceName, "S31375", FMLMSG, DEF_USR, DEF_SSSN, c_err_msg );
      Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
      /*tpfree((char *)ptr_fml_Sbuffer);**Ver 1.5**/
      tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
    }
	}
	else
	if(c_rqst_typ == 'U')	/*Generate User Id & Password*/
	{
		
		i_valid_dob=fn_valid_pan_dob(sql_icd_pan_no.arr,sql_ikkd_user_dob.arr,&sql_ikkd_pan_exist);
		
    if(i_valid_dob != 1)
    {
      errlog(c_ServiceName, "S31380","" , DEF_USR, DEF_SSSN, c_err_msg);
      sprintf(c_err_msg,"Date of Birth (DOB)/PAN entered by you is not matching with KRA record, please enter the correct DOB/PAN");
      Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
      tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
    }

		MEMSET(sql_usr_usr_curr_id);
		MEMSET(sql_usr_usr_psswrd);

		i_err[0] = Fget32(ptr_fml_Ibuffer,FML_TO_ADDR,0,(char *)sql_usr_usr_curr_id.arr, 0);
    i_ferr[0] = Ferror32;
    i_err[1] = Fget32(ptr_fml_Ibuffer,FML_INSTR_NO, 0, (char *)sql_usr_usr_psswrd.arr, 0);
    i_ferr[1] = Ferror32;

	/** commented in ver 3.4	if(strcmp(sql_ikkd_uid_no.arr,"*") == 0) *Added in Ver 2.0 **/
		if (strcmp(v_aadhar_ref.arr, "*") == 0) /** added in ver 3.4 **/
		{
    	i_err[2] = Fget32(ptr_fml_Ibuffer,FML_ACTIVE, 0, (char *)&c_income_cd, 0);
    	i_ferr[2] = Ferror32;
    	i_err[3] = Fget32(ptr_fml_Ibuffer,FML_FILE_NAME, 0, (char *)c_occ_cd, 0);
    	i_ferr[3] = Ferror32;
    	i_err[4] = Fget32(ptr_fml_Ibuffer,FML_GAME_REG_FLG, 0, (char *)&c_pep_flg, 0);
    	i_ferr[4] = Ferror32;
    	i_err[5] = Fget32(ptr_fml_Ibuffer,FML_CHART_TYPE, 0, (char *)sql_ikkd_pep_remark.arr, 0);
    	i_ferr[5] = Ferror32;
		}
		else			/*Added in Ver 2.0*/
		{
			i_err[2]=0;
			c_income_cd='\0';
			i_err[3]=0;
			MEMSET(c_occ_cd);
			i_err[4]=0;
			c_pep_flg='N';
			i_err[5]=0;	
			MEMSET(sql_ikkd_pep_remark);
		}
		/****** Ver 1.8 ****/
    i_err[6] = Fget32(ptr_fml_Ibuffer,FML_CDM_CD_DSCRPTN, 0, (char *)c_serial_no, 0);
    i_ferr[6] = Ferror32;
		/***** Ver 1.8 ****/

		/*** ver 1.8 looping changed from 6 to 7 ***** 
		for(i=0; i<6; i++) ****/
		for(i=0; i<7; i++)
    {
			if(i_err[i] == -1)
			{
				if(i==5 && i_ferr[i] == FNOTPRES)	
				{
					continue;
				}
				/****** Ver 1.8 ******/
				if(i==6 && i_ferr[i] == FNOTPRES)	
				{
					userlog("FNOT PRES 6");
					continue;
				}
				/******* Ver 1.8 *****/
				userlog("Fget32 failed at i :%d:",i);
				errlog(c_ServiceName, "S31385", Fstrerror32(i_ferr[i]), DEF_USR, DEF_SSSN, c_err_msg);
				Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
				tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
			}
    }

		if(DEBUG_MSG_LVL_3)
		{
			userlog("User Id :%s:",sql_usr_usr_curr_id.arr);
			/*userlog("Password :%s:",sql_usr_usr_psswrd.arr); **Commented in 2.0**/
			userlog("sql_ikkd_pan_exist :%c:",sql_ikkd_pan_exist);
			userlog("c_income_cd :%c:",c_income_cd);
			userlog("c_occ_cd :%s:",c_occ_cd);
			userlog("c_pep_flg :%c:",c_pep_flg);
			userlog("sql_ikkd_pep_remark :%s:",sql_ikkd_pep_remark.arr);
			userlog("c_mbl_acc_opn :%c:",c_mbl_acc_opn);		/*** Ver 1.8 ***/
			userlog("c_serial_no :%s:",c_serial_no);		/*** Ver 1.8 ***/
		}

		/***************Ver 1.6 added start validate user id for new PAN***************/
		/**** Ver 1.8 commented and replaced with below statement ****
		if(sql_ikkd_pan_exist != 'Y' && fn_validate_userid(c_ServiceName,sql_usr_usr_curr_id.arr,0) != 0)
		*****/
		if(sql_ikkd_pan_exist != 'Y' && fn_validate_userid(c_ServiceName,sql_usr_usr_curr_id.arr,i_usr_valid) != 0)
		{
				userlog("Space/ invalid character not allowed in user ID.");
			  errlog(c_ServiceName, "S31390"," ", DEF_USR, DEF_SSSN, c_err_msg);
				sprintf(c_err_msg,"Space/ invalid character not allowed in user ID.");
        Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
        tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
		}
		/***************Ver 1.6 added end validate user id***************/

		SETLEN(sql_usr_usr_curr_id);
		SETLEN(sql_usr_usr_psswrd);
		SETLEN(sql_ikkd_pep_remark);

		i_user_exist=0;

		EXEC SQL
			SELECT	COUNT(1)
			INTO		:i_user_exist
			FROM		USR_USER_MASTER
			WHERE		(USR_USR_ID = :sql_usr_usr_curr_id OR USR_USR_CURR_ID = :sql_usr_usr_curr_id);

		if(SQLCODE != 0)
		{
			errlog(c_ServiceName, "S31395", SQLMSG, DEF_USR, DEF_SSSN, c_err_msg);
      Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
      tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
		}

		/****** Ver 1.8 fetching details required for mobile account opening ****/
		if(c_mbl_acc_opn == 'M')
		{
			INIT(i_err,4);
			INIT(i_ferr,4);
			
			i_err[0] = Fget32(ptr_fml_Ibuffer,FML_ARD_APPLCTN_RMRKS,0,(char *)sql_mar_employer_name_others.arr, 0);
    	i_ferr[0] = Ferror32;
    	i_err[1] = Fget32(ptr_fml_Ibuffer,FML_ARD_PRTCPNT_DP_ID, 0, (char *)sql_mar_org_cd.arr, 0);
    	i_ferr[1] = Ferror32;
    	i_err[2] = Fget32(ptr_fml_Ibuffer,FML_ARD_ARN_NMBR, 0, (char *)&sql_mar_client_desg_others.arr, 0);
    	i_ferr[2] = Ferror32;
    	i_err[3] = Fget32(ptr_fml_Ibuffer,FML_URQ_CLNT_RSPNS_DTLS, 0, (char *)sql_mar_desg_cd.arr, 0);
    	i_ferr[3] = Ferror32;
    	i_err[4] = Fget32(ptr_fml_Ibuffer,FML_USR_PHN_RNMBRS, 0, (char *)sql_mar_mobile.arr, 0);
    	i_ferr[4] = Ferror32;

			for(i=0; i<5; i++)
    	{
      	if(i_err[i] == -1)
      	{
        	userlog("Fget32 failed at i :%d:",i);
        	errlog(c_ServiceName, "S31400", Fstrerror32(i_ferr[i]), DEF_USR, DEF_SSSN, c_err_msg);
        	Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
        	tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
      	}
    	}

			SETLEN(sql_mar_employer_name_others);
			SETLEN(sql_mar_org_cd);
			SETLEN(sql_mar_client_desg_others);
			SETLEN(sql_mar_desg_cd);
			SETLEN(sql_mar_mobile);
			
			if(DEBUG_MSG_LVL_3)
			{
				userlog("c_serial_no :%s:",c_serial_no);
				userlog("MAR_EMPLOYER_NAME_OTHERS :%s:",sql_mar_employer_name_others.arr);
				userlog("MAR_ORG_CD :%s:",sql_mar_org_cd.arr);
				userlog("MAR_CLIENT_DESG_OTHERS :%s:",sql_mar_client_desg_others.arr);
				userlog("MAR_MAR_DESG_CD :%s:",sql_mar_desg_cd.arr);
				userlog("sql_mar_mobile :%s:",sql_mar_mobile.arr);
			}
		}
		/****** Ver 1.8 ended ******/

		/***** Ver 1.8 skipping below check since member account is already
									 created for Mobile Account customers ****/
		if(i_user_exist != 0 && sql_ikkd_pan_exist == 'N' && c_mbl_acc_opn != 'M')
		{
			errlog(c_ServiceName, "S31405", "", DEF_USR, DEF_SSSN, c_err_msg);
      sprintf(c_err_msg, "User ID is already exist");
      Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
      tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
		}

		Encrypt(sql_usr_usr_psswrd.arr, sql_usr_usr_psswrd.arr);

		i_trnsctn=fn_equ_begintran(c_ServiceName,DEF_USR,DEF_SSSN,c_err_msg);

    if(i_trnsctn == -1)
    {
			errlog(c_ServiceName, "S31410", TPMSG , DEF_USR, DEF_SSSN, c_err_msg);
      Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
      tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
		}

		i_sssn_exp = 0;

		/** commented in ver 3.4 if(strcmp(sql_ikkd_uid_no.arr,"*") == 0)			*Added in Ver 2.0 **/
		if (strcmp(v_aadhar_ref.arr, "*") == 0) /** added in ver 3.4 **/
		{
			EXEC SQL
				UPDATE  IKKD_INFO_KRA_KYC_DTLS
      	SET     IKKD_INCOME = :c_income_cd,
								IKKD_OCC = :c_occ_cd,
								IKKD_POL_CONN	= DECODE(:c_pep_flg,'Y','PEP','NA'),
								IKKD_PIN_MAILER = NULL,
								IKKD_ACC_OPN_DT = SYSDATE,
              	IKKD_ACC_OPN_STTS = DECODE(:c_pep_flg,'Y','D','Y'),
								IKKD_PEP_REMARK = DECODE(:c_pep_flg,'Y',:sql_ikkd_pep_remark,NULL),
              	IKKD_MOD_DT = SYSDATE,
								/*IKKD_SRC_TYPE = 'P',								*Ver 2.0**Ver 2.2**/
								IKKD_ACCOPN_SOURCE = :c_mbl_acc_opn,	/*Ver 2.0*/
								IKKD_MODIFY_BY = 'SVC_INSTA_ACC'  /*Ver 3.2*/
      	WHERE   IKKD_PAN_NO = :sql_icd_pan_no
      	AND     IKKD_KRA_ACTDEACT = 'A'
      	AND     DECODE(:c_mbl_acc_opn,'M','Y',IKKD_OTP_STATUS) = 'Y'
      	AND     IKKD_KRA_STATUS = 'Y'
				RETURNING	CASE WHEN IKKD_MOD_OTP_DT+5/(24*60) < SYSDATE THEN 1 ELSE 0 END
				INTO		:i_sssn_exp;
		}
		else			/*Added in Ver 2.0*/
		{
			EXEC SQL
        UPDATE  IKKD_INFO_KRA_KYC_DTLS
        SET     IKKD_PIN_MAILER = NULL,
                IKKD_ACC_OPN_DT = SYSDATE,
                IKKD_ACC_OPN_STTS = DECODE(IKKD_POL_CONN,'PEP','D','Y'),
                IKKD_MOD_DT = SYSDATE,
								IKKD_KRA_STATUS = 'Y',
								/*IKKD_SRC_TYPE = 'A',                *Ver 2.0**Ver 2.2**/
								IKKD_ACCOPN_SOURCE = :c_mbl_acc_opn, /*Ver 2.0*/
								IKKD_MODIFY_BY = 'SVC_INSTA_ACC'  /*Ver 3.2*/
        WHERE   IKKD_PAN_NO = :sql_icd_pan_no
				/** commented in ver 3.4 AND			IKKD_UID_NO	= :sql_ikkd_uid_no **/
        AND     IKKD_KRA_ACTDEACT = 'A'
        AND     DECODE(:c_mbl_acc_opn,'M','Y',IKKD_OTP_STATUS) = 'Y'
        /*AND     IKKD_KRA_STATUS = 'N'**Ver 2.0*/
        RETURNING CASE WHEN IKKD_MOD_OTP_DT+10/(24*60) < SYSDATE THEN 1 ELSE 0 END
        INTO    :i_sssn_exp;
		}

		if(SQLCODE != 0)
		{
			errlog(c_ServiceName, "S31415",SQLMSG , DEF_USR, DEF_SSSN, c_err_msg);
      fn_equ_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
      Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
      tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);		
		}

		if(i_sssn_exp != 0 && c_mbl_acc_opn != 'M') 
		{
			errlog(c_ServiceName, "B91133","" , DEF_USR, DEF_SSSN, c_err_msg);
      fn_equ_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
      Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
      tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
		}

		userlog("sql_ikkd_pan_exist ********* :%c:",sql_ikkd_pan_exist);

		/****** Ver 1.8 changes added in decode in caller page input (Passing Mobile 
										service name in case call is from Mobile App)	*******/
									
		EXEC SQL
      EXECUTE
        BEGIN
					SP_GENERATE_INSTA_FOR_SITE
					( :sql_icd_pan_no, 
						:sql_usr_usr_curr_id,
						:sql_usr_usr_psswrd,
						CASE WHEN :sql_ikkd_pan_exist = 'Y' THEN 'Y' ELSE 'N' END,
						:vc_ip_add,
						CASE WHEN :c_mbl_acc_opn = 'M' THEN 'SVC_MBL_ACCAPPL' ELSE 'SVC_INSTA_ACC' END, /** Ver 1.8 **/
						:c_sucess_flg,
						:vc_error_msg,
						/**** Ver 1.8 *****/
						:c_serial_no,
						CASE WHEN :sql_mar_employer_name_others = '*' THEN NULL ELSE :sql_mar_employer_name_others END,
						CASE WHEN :sql_mar_client_desg_others = '*' THEN NULL ELSE :sql_mar_client_desg_others END,
						CASE WHEN :sql_mar_org_cd = '*' THEN NULL ELSE :sql_mar_org_cd END,
						CASE WHEN :sql_mar_desg_cd = '*' THEN NULL ELSE :sql_mar_desg_cd END,
						CASE WHEN :c_mbl_acc_opn = 'M' THEN :sql_mar_mobile ELSE NULL END 
						/**** Ver 1.8 *****/
					);
				END;
			END-EXEC;

		if(DEBUG_MSG_LVL_3)
		{
			userlog("c_sucess_flg :%c:",c_sucess_flg);
			userlog("vc_error_msg :%s:",vc_error_msg.arr);
		}
		
		if(SQLCODE != 0 && SQLCODE != NULL_RETURN)
		{
			errlog(c_ServiceName, "S31420",SQLMSG , DEF_USR, DEF_SSSN, c_err_msg);
      Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
			fn_equ_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
      tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
		}

		if(c_sucess_flg != 'Y')
		{
			errlog(c_ServiceName, "S31425",SQLMSG , DEF_USR, DEF_SSSN, c_err_msg); 
      fn_equ_aborttran( c_ServiceName, i_trnsctn, c_err_msg );

			if(!strstr(vc_error_msg.arr,"ORA"))
			{
				MEMSET(c_err_msg);

				EXEC SQL
					SELECT SUBSTR(:vc_error_msg,INSTR(:vc_error_msg,'~',-1))
					INTO   :c_err_msg
					FROM		DUAL;

				rtrim(c_err_msg);
				userlog("c_err_msg :%s:",c_err_msg);
			}

			/******** Ver 1.8 sending SP return error to calling service *******/
			if(c_mbl_acc_opn == 'M')
			{
      	/*Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG,(char *)vc_error_msg.arr, 0);**Ver 2.2**/
      	Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG,(char *)c_err_msg, 0);				 /**Ver 2.2**/
			}
			else
			{
      	Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
			}

      tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
		}
		
		/*** Ver 1.8 added and condition to skip account activation in case of 
					 				Mobile Account Opening	*******/
		if(c_pep_flg != 'Y' && c_mbl_acc_opn == 'A')  
		{
			i_retcd=fn_actv_accnt(c_ServiceName, sql_usr_usr_curr_id.arr, sql_icd_pan_no.arr, sql_ikkd_user_dob.arr, 
																				 vc_ip_add.arr ,sql_ikkd_pan_exist);

			if(i_retcd != 0)
			{
      	Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
				errlog(c_ServiceName, "S31430", " " , DEF_USR, DEF_SSSN, c_err_msg);
      	fn_equ_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
      	tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
			}
		}
		else
		{
			userlog("PEP Pan Account Created but Not Activated");
		}

		userlog("Account created Successfully");

		if(fn_equ_committran(c_ServiceName,DEF_USR,DEF_SSSN,i_trnsctn,c_err_msg) == -1)
    {
			errlog(c_ServiceName, "S31435",SQLMSG , DEF_USR, DEF_SSSN, c_err_msg);
      fn_equ_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
      Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
      tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
		}
	}
	else
	if(c_rqst_typ == 'A') /*KRA_Address_Dtls*/
	{
		MEMSET(c_kra_add1[0]);
		MEMSET(c_kra_add1[1]);
		MEMSET(c_kra_add1[2]);
		
		EXEC SQL
			SELECT	NVL(IKKD_COR_CITY,'NA'),
							NVL(IKKD_COR_PINCD,'NA'),
							NVL(IKKD_COR_ADD1,' '),
							NVL(IKKD_COR_ADD2,' '),
							NVL(IKKD_COR_ADD3,' ')
			INTO		:sql_ikkd_cor_city,
							:sql_ikkd_cor_pincd,
							:c_kra_add1[0],
							:c_kra_add1[1],
							:c_kra_add1[2]
			FROM		IKKD_INFO_KRA_KYC_DTLS
			WHERE		IKKD_PAN_NO = :sql_icd_pan_no
			AND			IKKD_KRA_STATUS = 'Y'
			AND			IKKD_KRA_ACTDEACT = 'A';


		if(SQLCODE != 0)
		{
			errlog(c_ServiceName, "S31440", SQLMSG, DEF_USR, DEF_SSSN, c_err_msg);
      Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
      tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
		}

		if(DEBUG_MSG_LVL_3)
    {
      userlog("sql_ikkd_cor_city :%s:",sql_ikkd_cor_city.arr);
      userlog("sql_ikkd_cor_pincd :%s:",sql_ikkd_cor_pincd.arr);

			for(i=0;i<3;i++)
    	{
				rtrim(c_kra_add1[i]);
      	userlog("c_kra_add1[%d]=:%s:-:%d:",i,c_kra_add1[i],strlen(c_kra_add1[i]));
    	}
    }

		for(i=0;i<3;i++)
		{
	    i_mask=1;
			j=0;

			if(c_kra_add1[i][0]=='\0')
			{
				continue;
			}

			while(j < strlen(c_kra_add1[i]))
			{
				if(i_mask == 1)
				{
					for(k=0;(k<4) && (j<strlen(c_kra_add1[i]));)
					{
						if(c_kra_add1[i][j] == ' ')
						{
							j++;
						}
						else
						{
							c_kra_add1[i][j++]='X';
							k++;
						}
					}

					i_mask=0;
				}
				else
				{
					i_mask=1;
	
					for(k=0;(k<4) && (j<strlen(c_kra_add1[i]));)
          {
            if(c_kra_add1[i][j] != ' ')
            {
              j++;
							k++;
            }
						else
						{
							j++;
						}
					}
				}
			}
		}

		sprintf(c_kra_add,"%s %s %s %s",c_kra_add1[0],c_kra_add1[1],c_kra_add1[2],sql_ikkd_cor_pincd.arr);

		if(DEBUG_MSG_LVL_3)
		{
		 	for(i=0;i<3;i++)
    	{
      	userlog("c_kra_add1[%d]=:%s:",i,c_kra_add1[i]);
    	}
		
			rtrim(c_kra_add);
			userlog("c_kra_add :%s:",c_kra_add);
		}

		i_err[0] = Fadd32(ptr_fml_Ibuffer, FML_USR_USR_NM, (char *) c_kra_add, 0);
    i_ferr[0]= Ferror32;
    i_err[1] = Fadd32(ptr_fml_Ibuffer, FML_PARAM_TO, (char *) sql_ikkd_cor_city.arr, 0);
    i_ferr[1]= Ferror32;

    for(i=0; i<2; i++)
    {
      if(i_err[i] == -1)
      {
        userlog("Fget32 failed at i :%d:",i);
        errlog(c_ServiceName, "S31445", Fstrerror32(i_ferr[i]), DEF_USR, DEF_SSSN, c_err_msg);
				tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
      }
    }
	}
	else
	if(c_rqst_typ == 'P') /*Pin-Mailer Physical Address*/
	{
		MEMSET(sql_icd_user_id);

		i_valid_dob=fn_valid_pan_dob(sql_icd_pan_no.arr,sql_ikkd_user_dob.arr,&sql_ikkd_pan_exist);

    if(i_valid_dob != 1)
    {
      errlog(c_ServiceName, "S31450","" , DEF_USR, DEF_SSSN, c_err_msg);
      sprintf(c_err_msg,"Date of Birth (DOB)/PAN entered by you is not matching with KRA record, please enter the correct DOB/PAN");
      Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
      tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
    }

		i_err[0] = Fget32(ptr_fml_Ibuffer,FML_ACTIVE, 0, (char *)&c_income_cd, 0);
    i_ferr[0] = Ferror32;
    i_err[1] = Fget32(ptr_fml_Ibuffer,FML_FILE_NAME, 0, (char *)c_occ_cd, 0);
    i_ferr[1] = Ferror32;
    i_err[2] = Fget32(ptr_fml_Ibuffer,FML_GAME_REG_FLG, 0, (char *)&c_pep_flg, 0);
    i_ferr[2] = Ferror32;
    i_err[3] = Fget32(ptr_fml_Ibuffer,FML_CHART_TYPE, 0, (char *)sql_ikkd_pep_remark.arr, 0);
    i_ferr[3] = Ferror32;

    for(i=0; i<4; i++)
    {
      if(i_err[i] == -1)
      {
				if(i==3 && i_ferr[i] == FNOTPRES)
				{
					continue;
				}

        userlog("Fget32 failed at i :%d:",i);
        errlog(c_ServiceName, "S31455", Fstrerror32(i_ferr[i]), DEF_USR, DEF_SSSN, c_err_msg);
        Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
        tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
      }
    }

		SETLEN(sql_ikkd_pep_remark);

    if(DEBUG_MSG_LVL_3)
    {
      userlog("sql_ikkd_pan_exist :%c:",sql_ikkd_pan_exist);
      userlog("c_income_cd :%c:",c_income_cd);
      userlog("c_occ_cd :%s:",c_occ_cd);
      userlog("c_pep_flg :%c:",c_pep_flg);
      userlog("sql_ikkd_pep_remark :%s:",sql_ikkd_pep_remark.arr);
    }

		if(sql_ikkd_pan_exist == 'Y')
		{
			/*************Commented in Ver 1.7 start*************
			EXEC SQL
				SELECT 	ICD_USER_ID
				INTO		:sql_icd_user_id
				FROM		ICD_INFO_CLIENT_DTLS
				WHERE		ICD_PAN_NO = :sql_icd_pan_no;
			*************Commented in Ver 1.7 end*************/

			/***************Added Ver in 1.7 start***************/
      EXEC SQL
        SELECT  ICD_USER_ID
        INTO    :sql_icd_user_id
        FROM    ICD_INFO_CLIENT_DTLS,
                UAC_USR_ACCNTS
        WHERE   UAC_USR_ID = ICD_USER_ID
        AND     UAC_ACT_DEACT_FLG = 'N'
        AND     ICD_PAN_NO = :sql_icd_pan_no;
      /***************Added Ver in 1.7 end***************/

			userlog("sql_icd_user_id :%s:",sql_icd_user_id.arr);

			if(SQLCODE != 0)
			{
				errlog(c_ServiceName, "S31460",SQLMSG,DEF_USR, DEF_SSSN, c_err_msg);
      	Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
      	tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
			}

			SETNULL(sql_icd_user_id);
		}

		i_trnsctn=fn_equ_begintran(c_ServiceName,DEF_USR,DEF_SSSN,c_err_msg);

    if(i_trnsctn == -1)
    {
      errlog(c_ServiceName, "S31465", TPMSG , DEF_USR, DEF_SSSN, c_err_msg);
      Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
      tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
    }

		MEMSET(sql_ikkd_kra_mob);
		MEMSET(sql_ikkd_kra_email);

		EXEC SQL
      UPDATE  IKKD_INFO_KRA_KYC_DTLS
      SET     IKKD_PIN_MAILER = 'Y',
							IKKD_ACC_OPN_STTS = 'D',
							IKKD_ACC_OPN_DT = SYSDATE,
              IKKD_MOD_DT = SYSDATE,
							IKKD_INCOME = :c_income_cd,
							IKKD_OCC = :c_occ_cd,
							IKKD_PEP_REMARK = DECODE(:c_pep_flg,'Y',:sql_ikkd_pep_remark,NULL),
							IKKD_POL_CONN = DECODE(:c_pep_flg,'Y','PEP','NA'),
							IKKD_MODIFY_BY = 'SVC_INSTA_ACC'  /*Ver 3.2*/
      WHERE   IKKD_PAN_NO = :sql_icd_pan_no
      AND     IKKD_KRA_STATUS = 'Y'
      AND     IKKD_KRA_ACTDEACT = 'A'
			RETURNING IKKD_KRA_MOB,
								IKKD_KRA_EMAIL
			INTO		:sql_ikkd_kra_mob,
							:sql_ikkd_kra_email;

    if(SQLCODE != 0)
    {
      errlog(c_ServiceName, "S31470",SQLMSG , DEF_USR, DEF_SSSN, c_err_msg);
      fn_equ_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
      Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
      tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
    }

		/******Checking mobile no******/
		EXEC SQL
        SELECT  COUNT(DISTINCT(IAD_SERIAL_NO))
        INTO    :i_retcd
        FROM    IAD_INFO_ADDRESS_DTLS,
								ICD_INFO_CLIENT_DTLS,
	  						UAC_USR_ACCNTS
        WHERE   IAD_MOBILE_10DGT = :sql_ikkd_kra_mob
				AND     IAD_SERIAL_NO = ICD_SERIAL_NO
				AND     ICD_USER_ID = UAC_USR_ID(+)
				AND     ICD_INWARD_STATUS <> 'I'
				AND     UAC_ACT_DEACT_FLG <> 'S'
				AND     IAD_ADDRESS_TYPE IN (UPPER('APPLICANT_PMT'), UPPER('APPLICANT_CORR'));

		if(SQLCODE != 0)
		{
			errlog(c_ServiceName, "S31475",SQLMSG , DEF_USR, DEF_SSSN, c_err_msg);
      fn_equ_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
      Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
      tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
		}

		if(i_retcd >= 4)
		{
			fn_equ_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
			errlog(c_ServiceName, "B91127", "", DEF_USR, DEF_SSSN, c_err_msg);
			Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
			tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
		}

		EXEC SQL
        SELECT  COUNT(DISTINCT(IPD_SERIAL_NO))
        INTO    :i_retcd
        FROM    IPD_INFO_PERSONAL_DTLS,
								ICD_INFO_CLIENT_DTLS,
	  						UAC_USR_ACCNTS
				/******** commented in ver 2.1 and changed with below condition
        WHERE   (UPPER(IPD_EMAIL) = UPPER(:sql_ikkd_kra_email)
        OR      UPPER(IPD_EMAIL2)  = UPPER(:sql_ikkd_kra_email)) ver 2.1   *****/
				WHERE   (LOWER(IPD_EMAIL) = LOWER(:sql_ikkd_kra_email)      /*** Ver 2.1 ***/
        OR      LOWER(IPD_EMAIL2)  = LOWER(:sql_ikkd_kra_email))    /*** Ver 2.1 ***/
				AND     IPD_SERIAL_NO = ICD_SERIAL_NO
				AND     ICD_USER_ID = UAC_USR_ID(+)
				AND     ICD_INWARD_STATUS <> 'I'
				AND     UAC_ACT_DEACT_FLG <> 'S'
				AND     IPD_TYPE = 'APPLICANT';

    if(SQLCODE != 0)
    {
			errlog(c_ServiceName, "S31480",SQLMSG , DEF_USR, DEF_SSSN, c_err_msg);
      fn_equ_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
      Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
      tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
    }

    if(i_retcd >= 4)
    { /**EMAIL mapped to more than 4 clients**/
			fn_equ_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
      errlog(c_ServiceName, "B91127", "", DEF_USR, DEF_SSSN, c_err_msg);
      Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
      tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
    }

    EXEC SQL
      EXECUTE
        BEGIN
          SP_GENERATE_INSTA_FOR_SITE
          ( :sql_icd_pan_no,
            CASE WHEN :sql_ikkd_pan_exist = 'Y' THEN :sql_icd_user_id ELSE NULL END,
            NULL,
            CASE WHEN :sql_ikkd_pan_exist = 'Y' THEN 'Y' ELSE 'N' END,
            :vc_ip_add,
            'SVC_INSTA_ACC',
            :c_sucess_flg,
            :vc_error_msg,
						/**** Ver 1.8 *****/
            :c_serial_no,
            :sql_mar_employer_name_others,
            :sql_mar_client_desg_others,
            :sql_mar_org_cd,
            :sql_mar_desg_cd,
						NULL
            /**** Ver 1.8 *****/

					);
        END;
      END-EXEC;

    if(DEBUG_MSG_LVL_3)
    {
      userlog("c_sucess_flg :%c:",c_sucess_flg);
      userlog("vc_error_msg :%s:",vc_error_msg.arr);
    }

    if(SQLCODE != 0 && SQLCODE != NULL_RETURN)
    {
      errlog(c_ServiceName, "S31485",SQLMSG , DEF_USR, DEF_SSSN, c_err_msg);
      fn_equ_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
      Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
      tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
    }

    if(c_sucess_flg != 'Y')
    {
      errlog(c_ServiceName, "S31490",SQLMSG , DEF_USR, DEF_SSSN, c_err_msg);
      fn_equ_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
			
			if(!strstr(vc_error_msg.arr,"ORA"))
      {
        MEMSET(c_err_msg);

        EXEC SQL
          SELECT SUBSTR(:vc_error_msg,INSTR(:vc_error_msg,'~',-1))
          INTO   :c_err_msg
          FROM    DUAL;

				rtrim(c_err_msg);
				userlog("c_err_msg :%s:",c_err_msg);
      }

      Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
      tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
    }

		if(fn_equ_committran(c_ServiceName,DEF_USR,DEF_SSSN,i_trnsctn,c_err_msg) == -1)
    {
      errlog(c_ServiceName, "S31495",SQLMSG , DEF_USR, DEF_SSSN, c_err_msg);
      fn_equ_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
      Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
      tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
    }

		sprintf(c_kra_add,"Your request for a physical User id and password has been registered.  You will receive the same in 7 working days");

		if(Fadd32(ptr_fml_Ibuffer, FML_PARAM_TO, (char *) c_kra_add, 0)== -1)
		{
			errlog(c_ServiceName, "S31500", TPMSG, DEF_USR, DEF_SSSN, c_err_msg);
      Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
      tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
		}
	}
	else
	/******************************Added in Ver 2.0 start******************************/
	if(c_rqst_typ == 'D' || c_rqst_typ == 'H' || c_rqst_typ == 'I' || c_rqst_typ == 'J')	
	{
		/* A: Update Aadhaar card against PAN no
			 H: Add Aadhaar card details
			 I: Upld KRA details
			 J: Update pending KRA status*/

		sql_ikkd_aadhar_status='*';

		userlog("sql_ikkd_uid_no :%s:",sql_ikkd_uid_no.arr);	

		if(strcmp(sql_ikkd_uid_no.arr,"*") == 0)
		{
			errlog(c_ServiceName, "S31505", "" , DEF_USR, DEF_SSSN, c_err_msg);
			sprintf(c_err_msg, "Aadhaar card is not provided");
      Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
      tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
		}

		MEMSET(sql_ikkd_ipv_nm);
  	MEMSET(sql_ikkd_ipv_desg);

		/******** Ver 2.8 storing aadhar in vault ************/

		if(c_rqst_typ == 'D')
		{
			/** commented in ver 3.4 **
			i_ret_cd = fn_aadhar_vault(sql_ikkd_uid_no.arr,sql_icd_pan_no.arr);

			if(i_ret_cd == -1)
			{
      	Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
				errlog(c_ServiceName, "S31510", "" , DEF_USR, DEF_SSSN, c_err_msg);
      	tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
			}
	
			if(i_ret_cd == -2)
			{
				userlog("Aadhar Linked to other Pan");
				sprintf(c_err_msg, "Aadhar Linked to other Pan");
				Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
				tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
			}
			** ver 3.4 end **/
		}
		/******** ver 2.8 storing aadhar in vault ************/
		

		if(c_mbl_acc_opn == 'M' && c_rqst_typ == 'I')
  	{

    	EXEC SQL
      	SELECT  SUBSTR(HEE_NAME,1,30),
              	SUBSTR(NVL(HEE_JOBTITLE,'*'),1,20)
      	INTO    :sql_ikkd_ipv_nm,
              	:sql_ikkd_ipv_desg
      	FROM    HEE_HR_EMP_EXTRCT,
              	MAR_MBL_ACCOPN_RQST
      	WHERE   HEE_EMPLID = MAR_EMP_NO
      	AND     MAR_PAN_NO = :sql_icd_pan_no
      	AND     MAR_STATUS NOT IN ('R','I','M','A')
      	AND     HEE_EMPL_STATUS = 'Y';

   		if(SQLCODE != 0)
    	{
				errlog(c_ServiceName, "S31515", SQLMSG , DEF_USR, DEF_SSSN, c_err_msg);
      	Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
      	tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
    	}

			SETNULL(sql_ikkd_ipv_nm),
			SETNULL(sql_ikkd_ipv_desg);

    	if(DEBUG_MSG_LVL_3)
    	{
      	userlog("sql_ikkd_ipv_nm :%s:",sql_ikkd_ipv_nm.arr);
      	userlog("sql_ikkd_ipv_desg :%s:",sql_ikkd_ipv_desg.arr);
    	}
  	}

		i_trnsctn=fn_equ_begintran(c_ServiceName,DEF_USR,DEF_SSSN,c_err_msg);
    if(i_trnsctn == -1)
    {
      errlog(c_ServiceName, "S31520", TPMSG , DEF_USR, DEF_SSSN, c_err_msg);
      Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
      tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
    }

		if(c_rqst_typ == 'D')		/*update UID No*/
		{
			if(sql_ikkd_uid_no.arr[0] == 'N' && c_mbl_acc_opn == 'M')
			{
				userlog("AAdhaar not provided");
        EXEC SQL
        UPDATE  MAS_MBL_APPL_STTS
        SET     MAS_AADHAR_STTS='Y'
        WHERE   MAS_FORM_NO = (SELECT MAR_FORM_NO
                              FROM   MAR_MBL_ACCOPN_RQST
                              WHERE  MAR_PAN_NO = :sql_icd_pan_no
                              AND    MAR_STATUS NOT IN ('R','I','M','A'));

        if(SQLCODE != 0)
        {
          errlog(c_ServiceName, "S31525",SQLMSG, DEF_USR, DEF_SSSN, c_err_msg);
          Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
          fn_equ_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
          tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
        }
			}

			/*********** Ver 2.4   changes ***********/
			
			if(Fget32(ptr_fml_Ibuffer,FML_PARAM_DESC, 0, (char *)sql_ikkd_uidai_trn_cd.arr, 0) == -1)
			{
				if(Ferror32 == FNOTPRES)
				{
					userlog("Transaction ID not present");
				}
				else
				{
					errlog(c_ServiceName, "S31530",FMLMSG, DEF_USR, DEF_SSSN, c_err_msg);
          Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
          fn_equ_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
          tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
				}
			}

			SETLEN(sql_ikkd_uidai_trn_cd);

			userlog("sql_ikkd_uidai_trn_cd.arr :%s:",sql_ikkd_uidai_trn_cd.arr);

		  /*********** Ver 2.4   changes ended ********/	

			EXEC SQL
				UPDATE	IKKD_INFO_KRA_KYC_DTLS
				SET		/** commented in ver 3.4 	IKKD_UID_NO = DECODE(SUBSTR(:sql_ikkd_uid_no,1,1),'N',NULL,:sql_ikkd_uid_no), **/
								/*IKKD_SRC_TYPE = DECODE(SUBSTR(:sql_ikkd_uid_no,1,1),'N','P','A'),*A:Adhaar**Ver 2.2*/
								IKKD_UID_SUB_DT = DECODE(IKKD_UID_SUB_DT,NULL,SYSDATE,IKKD_UID_SUB_DT),
								IKKD_AADHAR_STATUS = 'N',
								IKKD_MOD_DT = SYSDATE,
								IKKD_UIDAI_TRN_CD	= :sql_ikkd_uidai_trn_cd,			/*** Ver 2.4 ***/
						  /** commented in ver 3.4 	IKKD_UID_REF_NO = :v_aadhar_ref,     *** Ver 2.8 **/
              	IKKD_AADHAR_CONSENT_FLG = 'Y',    /*Ver 3.2*/
								IKKD_MODIFY_BY = 'SVC_INSTA_ACC'  /*Ver 3.2*/
				WHERE		IKKD_PAN_NO = :sql_icd_pan_no
   			AND     IKKD_KRA_ACTDEACT = 'A';	

			if(SQLCODE != 0)
			{
				errlog(c_ServiceName, "S31535", SQLMSG, DEF_USR, DEF_SSSN, c_err_msg);
				fn_equ_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
   			Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
   			tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
			}

			c_ret_cd = 'A'; /*Aadhaar Card hit*/

   		if(Fadd32(ptr_fml_Ibuffer, FML_GIFT_STATUS, (char *) &c_ret_cd, 0) == -1)
   		{
     		errlog(c_ServiceName, "S31540",FMLMSG, DEF_USR, DEF_SSSN, c_err_msg);
				fn_equ_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
     		Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
     		tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
   		}

			if(c_mbl_acc_opn == 'M')
			{
				if(sql_ikkd_uid_no.arr[0] == 'N')	/*IRIS*/
      	{
        	userlog("AAdhaar not provided");
        	EXEC SQL
        		UPDATE  MAS_MBL_APPL_STTS
        		SET     MAS_AADHAR_STTS='Y'
        		WHERE   MAS_FORM_NO = (SELECT MAR_FORM_NO
                              		FROM   MAR_MBL_ACCOPN_RQST
                              		WHERE  MAR_PAN_NO = :sql_icd_pan_no
                              		AND    MAR_STATUS NOT IN ('R','I','M','A'));

        	if(SQLCODE != 0)
        	{
          	errlog(c_ServiceName, "S31545",SQLMSG, DEF_USR, DEF_SSSN, c_err_msg);
          	Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
          	fn_equ_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
          	tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
        	}
      	}

				MEMSET(sql_mar_mobile);

				EXEC SQL
          UPDATE	MAR_MBL_ACCOPN_RQST
					SET			MAR_STATUS = 'Z'
					WHERE		MAR_PAN_NO = :sql_icd_pan_no
					AND			MAR_STATUS NOT IN ('R','I','M','A')
					RETURNING	MAR_MOBILE
					INTO			:sql_mar_mobile;
	
				if(SQLCODE != 0)
				{
					errlog(c_ServiceName, "S31550",SQLMSG , DEF_USR, DEF_SSSN, c_err_msg);
        	Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
        	tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
				}
	
				userlog("Mobile request marked to Z");
				userlog("Mobile No :%s:",sql_mar_mobile.arr);
			}

			if(fn_equ_committran(c_ServiceName,DEF_USR,DEF_SSSN,i_trnsctn,c_err_msg) == -1)
      {
        errlog(c_ServiceName, "S31555",SQLMSG , DEF_USR, DEF_SSSN, c_err_msg);
        Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
        fn_equ_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
        tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
      }

			/**********************Send SMS**********************/
			if(c_mbl_acc_opn == 'M' && sql_ikkd_uid_no.arr[0] != 'N') 
			{
				sprintf(c_err_msg,"Dear Customer, Never share your OTP with anyone.Please input the OTP received from UIDAI (Aadhaar) in the App yourself to open your ICICIdirect 3 in 1 account.");

				if(fn_send_sms(sql_mar_mobile.arr,c_err_msg) != 0)
				{
					userlog("SMS can not send");
				}
			}
		}
		else
		if(c_rqst_typ == 'H')
		{
			EXEC SQL
				SELECT	NVL(IKKD_KRA_STATUS,'N')
				INTO		:sql_ikkd_kra_status
				FROM		IKKD_INFO_KRA_KYC_DTLS
				WHERE		IKKD_PAN_NO = :sql_icd_pan_no
				AND			IKKD_KRA_ACTDEACT = 'A';

			if(SQLCODE != 0)
			{
				Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
        fn_equ_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
        errlog(c_ServiceName, "S31560","", DEF_USR, DEF_SSSN, c_err_msg);
        tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
			}

			userlog("Update uidai sql_ikkd_kra_status :%c:",sql_ikkd_kra_status);
			/*Update UID Personal details*/
			i_retcd=fn_upd_uidai_dtls(&ptr_fml_Ibuffer,sql_icd_pan_no.arr,sql_ikkd_uid_no.arr,c_dob,
																sql_ikkd_kra_status,c_err_msg);

      if(i_retcd != 0)
      {
				userlog("c_err_msg :%s:",c_err_msg);
       	Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
       	fn_equ_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
       	errlog(c_ServiceName, "S31565","", DEF_USR, DEF_SSSN, c_err_msg);
       	tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
      }
	
      userlog("c_dob :%s:",c_dob);
			userlog("sql_ikkd_user_dob.arr :%s:",sql_ikkd_user_dob.arr);

			if(fn_equ_committran(c_ServiceName,DEF_USR,DEF_SSSN,i_trnsctn,c_err_msg) == -1)
     	{
       	errlog(c_ServiceName, "S31570",SQLMSG , DEF_USR, DEF_SSSN, c_err_msg);
       	fn_equ_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
       	Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
       	tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
     	}
			
			/*i_valid_dob=fn_valid_pan_dob(sql_icd_pan_no.arr,sql_ikkd_user_dob.arr,&sql_ikkd_pan_exist);
			i_valid_dob=fn_valid_pan_dob(sql_icd_pan_no.arr,c_dob,&sql_ikkd_pan_exist);**/

			if(c_mbl_acc_opn == 'A')
   		{
				i_valid_dob=fn_valid_pan_dob(sql_icd_pan_no.arr,sql_ikkd_user_dob.arr,&sql_ikkd_pan_exist);
				if(i_valid_dob != 1)
   			{
     			errlog(c_ServiceName, "S31575","" , DEF_USR, DEF_SSSN, c_err_msg);
					sprintf(c_err_msg,"Details entered by you are not matching with Aadhaar records. Please retry using correct PAN/DOB");
   				Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
     			tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
				}
			}
			else
			{
				i_valid_dob=fn_valid_pan_dob(sql_icd_pan_no.arr,c_dob,&sql_ikkd_pan_exist);
				if(sql_ikkd_kra_status == 'Y' && i_valid_dob != 1)
				{
					if(fn_update_stts(sql_icd_pan_no.arr,
														"Date of Birth (DOB)/PAN not matching with KRA records",'R') != 1)
					{
						errlog(c_ServiceName, "S31580",SQLMSG, DEF_USR, DEF_SSSN, c_err_msg);
					}
					else
					{
						errlog(c_ServiceName, "S31585","" , DEF_USR, DEF_SSSN, c_err_msg);
						strcpy(c_err_msg,"DOB-Details entered by you are not matching with Aadhaar records.");
					}

					userlog("c_err_msg :%s:",c_err_msg);
					Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
					tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);	
				}
			}

			c_ret_cd = 'I'; /*Get required info for KRA STP*/
			
			/** ver 3.4  **/
			if (Fadd32(ptr_fml_Ibuffer, FML_USR_ANSWR1, (char *)v_aadhar_ref.arr, 0) == -1)
      {
        errlog(c_ServiceName, "S31590", FMLMSG, DEF_USR, DEF_SSSN, c_err_msg);
        Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
        tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
      }
			/** ver 3.4  **/

    	if(Fadd32(ptr_fml_Ibuffer, FML_GIFT_STATUS, (char *) &c_ret_cd, 0) == -1)
    	{
      	errlog(c_ServiceName, "S31595",FMLMSG , DEF_USR, DEF_SSSN, c_err_msg);
      	Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
      	tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
    	}
		}
		else
		if(c_rqst_typ == 'I')
		{	
			/*Update Required dtls for KRA*/

			ptr_fml_temp_buffer = (FBFR32 *)tprealloc((char *)ptr_fml_Ibuffer, 3*MIN_FML_BUF_LEN);
			if (ptr_fml_temp_buffer == NULL)
      {
				errlog(c_ServiceName, "S31600",TPMSG , DEF_USR, DEF_SSSN, c_err_msg);
        fn_equ_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
        Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
        tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
      }
      else
      {
        ptr_fml_Ibuffer = ptr_fml_temp_buffer;
      }
				
			/** commented in ver 3.4 i_retcd=fn_upd_kra_upld_dtls(&ptr_fml_Ibuffer,sql_icd_pan_no.arr,sql_ikkd_uid_no.arr,
																	sql_ikkd_ipv_nm.arr,sql_ikkd_ipv_desg.arr,c_err_msg);  **/
			i_retcd=fn_upd_kra_upld_dtls(&ptr_fml_Ibuffer, sql_icd_pan_no.arr, v_aadhar_ref.arr,
                                  sql_ikkd_ipv_nm.arr, sql_ikkd_ipv_desg.arr, c_err_msg); /** ver 3.4 **/

			if(i_retcd != 0)
      {
        Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
        fn_equ_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
        errlog(c_ServiceName, "S31605","", DEF_USR, DEF_SSSN, c_err_msg);
        tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
      }

			if(fn_equ_committran(c_ServiceName,DEF_USR,DEF_SSSN,i_trnsctn,c_err_msg) == -1)
      {
        errlog(c_ServiceName, "S31610",SQLMSG , DEF_USR, DEF_SSSN, c_err_msg);
        Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
        fn_equ_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
        tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
      }

      c_ret_cd = 'K'; /*Hit KRA STP*/

      if(Fadd32(ptr_fml_Ibuffer, FML_GIFT_STATUS, (char *) &c_ret_cd, 0) == -1)
      {
        errlog(c_ServiceName, "S31615",FMLMSG , DEF_USR, DEF_SSSN, c_err_msg);
        Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
        tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
      }
		}
		else
		if(c_rqst_typ == 'J')
		{
			/*Update E-KRA stp status*/
	
			MEMSET(sql_ikkd_status);

			i_err[0] = Fget32(ptr_fml_Ibuffer,FML_USR_USR_NM,0,(char *)c_app_status, 0);
			i_ferr[0] = Ferror32;
			i_err[2] = Fget32(ptr_fml_Ibuffer,FML_ACCOUNT_CATEGORY, 0, (char *)&l_modf_ack, 0);
			i_ferr[2] = Ferror32;

			for(i=0; i<3; i++)
			{
				if(i_err[i] == -1)
				{
					errlog(c_ServiceName, "S31620", Fstrerror32(i_ferr[i]), DEF_USR, DEF_SSSN, c_err_msg);
        	fn_equ_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
        	Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
        	tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
				}
			}

			if(DEBUG_MSG_LVL_3)
			{
				userlog("c_app_status :%s:",c_app_status);
				userlog("l_modf_ack :%ld:",l_modf_ack);
			}

			sql_ikkd_kra_stp = 'Y';

			MEMSET(sql_ikd_websvc_status_code);
			MEMSET(sql_ikd_websvc_status_date);
			MEMSET(sql_ikd_ipv_flag);
			sql_ikd_kyc_mode =0;
			

			EXEC SQL
       SELECT  IKD_WEBSVC_STATUS_CODE,
               TO_CHAR(IKD_WEBSVC_STATUS_DATE,'DD-Mon-YYYY HH24:MI:SS'),
							 NVL(IKKD_AADHAR_STATUS,'N')
       INTO    :sql_ikd_websvc_status_code:ind_ikd_websvc_status_code,
               :sql_ikd_websvc_status_date:ind_ikd_websvc_status_date,
							 :sql_ikkd_aadhar_status
       FROM    IKD_INFO_KRA_DTLS,
               IKKD_INFO_KRA_KYC_DTLS
       WHERE   IKD_PAN_NO = IKKD_PAN_NO
       AND     IKKD_PAN_NO = :sql_icd_pan_no
       /** commented in ver 3.4 AND     IKKD_UID_NO = :sql_ikkd_uid_no **/
       /*AND     IKKD_KRA_STATUS = 'N'**Ver 2.0*/
       AND     IKKD_KRA_ACTDEACT = 'A';

     if(SQLCODE != 0)
     {
       errlog(c_ServiceName, "S31625", SQLMSG, DEF_USR, DEF_SSSN, c_err_msg);
       fn_equ_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
       Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
       tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
     }

			if(strcmp(c_app_status,"01") == 0 || strcmp(c_app_status,"11") == 0 ||
																					 strcmp(c_app_status,"ERR-90061") == 0)
			{
				if(strcmp(c_app_status,"ERR-90061") == 0)
				{
					strcpy(sql_ikkd_status.arr,"01");
				}
				else
				{
					strcpy(sql_ikkd_status.arr,c_app_status);
				}

				SETLEN(sql_ikkd_status);

				/**********Ver 2.2 added start**********
				if(ind_ikd_websvc_status_code == -1)
				{
					strcpy(sql_ikd_websvc_status_code.arr,"005");
					SETLEN(sql_ikd_websvc_status_code);
				}
				**********Ver 2.2 added end**********/

				userlog("ind_ikd_websvc_status_code :%d:",ind_ikd_websvc_status_code);
				userlog("sql_ikd_websvc_status_code.arr :%s:",sql_ikd_websvc_status_code.arr);
			}
			else
			{
				sql_ikkd_kra_stp='F';
			}

			EXEC SQL	
				UPDATE	IKKD_INFO_KRA_KYC_DTLS
				SET			IKKD_KRA_STP = :sql_ikkd_kra_stp,
								IKKD_STATUS = DECODE(:sql_ikkd_kra_stp,'Y',:sql_ikkd_status,NULL),
								IKKD_STATUSDT = DECODE(:sql_ikkd_kra_stp,'Y',SYSDATE,NULL),
								IKKD_ERROR_DESC = DECODE(:sql_ikkd_kra_stp,'F',:c_app_status,NULL),
								IKKD_KRA_UPLD_ACK = :l_modf_ack,
								IKKD_MOD_DT	= SYSDATE,
								IKKD_MODIFY_BY = 'SVC_INSTA_ACC'  /*Ver 3.2*/	
				WHERE		IKKD_PAN_NO = :sql_icd_pan_no
    		/** commented in  ver 3.4 AND     IKKD_UID_NO = :sql_ikkd_uid_no **/
    		AND     IKKD_KRA_ACTDEACT = 'A'
    		/*AND     IKKD_KRA_STATUS = 'N'**Ver 2.0**/
    		/*AND     IKKD_SRC_TYPE = 'A' **Ver 2.2**/
				RETURNING  IKKD_PAN_EXIST,
									 NVL(IKKD_UID_AUTH_SRC,'*'),
									 IKKD_KRA_STATUS
				INTO       :sql_ikkd_pan_exist,
									 :sql_ikkd_uid_auth_src,
									 :sql_ikkd_kra_status;
	
			if(SQLCODE != 0)
      {
        errlog(c_ServiceName, "S31630", SQLMSG, DEF_USR, DEF_SSSN, c_err_msg);
        fn_equ_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
        Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
        tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
      }

			/**************Added in Ver 2.2 start******************/
			userlog("sql_ikkd_pan_exist :%c:",sql_ikkd_pan_exist);
			userlog("sql_ikkd_kra_status :%c:",sql_ikkd_kra_status);

			if(sql_ikkd_pan_exist == 'Y')
      {
        MEMSET(sql_icd_user_id);

        EXEC SQL
          SELECT  ICD_USER_ID
          INTO    :sql_icd_user_id
          FROM    ICD_INFO_CLIENT_DTLS,
                  UAC_USR_ACCNTS
          WHERE   UAC_USR_ID = ICD_USER_ID
          AND     UAC_ACT_DEACT_FLG = 'N'
          AND     ICD_PAN_NO = :sql_icd_pan_no;

        userlog("sql_icd_user_id :%s:",sql_icd_user_id.arr);

        if(SQLCODE != 0)
        {
          errlog(c_ServiceName, "S31635", SQLMSG, DEF_USR, DEF_SSSN, c_err_msg);
          fn_equ_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
          Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
          tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
        }

        SETNULL(sql_icd_user_id);

        if(Fadd32(ptr_fml_Ibuffer, FML_TO_ADDR, (char *) sql_icd_user_id.arr, 0) == -1)
        {
          errlog(c_ServiceName, "S31640", FMLMSG, DEF_USR, DEF_SSSN, c_err_msg);
          fn_equ_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
          Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
          tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
        }
      }

			c_ret_cd = 'U'; /*Generate User id & Password*/

			if(sql_ikkd_kra_status != 'Y')
			{
				if(sql_ikkd_uid_auth_src == 'O')
        {
          sql_ikd_kyc_mode=1;   /*E-KYC with OTP*/
        }
        else if(sql_ikkd_uid_auth_src == 'I')
        {
          sql_ikd_kyc_mode=2; /*E-KYC with Bio-Metric*/
        }

				if(c_mbl_acc_opn != 'M')
        {
          strcpy(sql_ikd_ipv_flag.arr,"E");
        }
        else
        {
          strcpy(sql_ikd_ipv_flag.arr,"Y");
        }

				SETLEN(sql_ikd_ipv_flag);

				userlog("Calling fn_sp_ikd_info_kra_dtls_eba...");

				if(sql_ikkd_kra_stp == 'Y')		/*Ver 2.7*/
        {
					i_retcd=fn_sp_ikd_info_kra_dtls_eba('J',sql_icd_pan_no.arr,"01",1,sql_ikd_websvc_status_code.arr,sql_ikd_websvc_status_date.arr,sql_ikd_kyc_mode,sql_ikd_ipv_flag.arr,c_err_msg);

        	if(i_retcd != 0)
        	{
          	errlog(c_ServiceName, "S31645", SQLMSG, DEF_USR, DEF_SSSN, c_err_msg);
          	fn_equ_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
          	Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
          	tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
        	}
				}
			}
			/**************Added in Ver 2.2 end******************/

			/****************Commented in Ver 2.2 start******************
			if(sql_ikkd_kra_stp == 'Y' && strcmp(sql_ikkd_status.arr,"11") != 0) 
			{
      	c_ret_cd = 'U'; *Generate User id & Password*
				
				sql_ikd_kyc_mode=1;		*E-KYC with OTP/Bio-Metric*

				if(c_mbl_acc_opn != 'M')
				{
					strcpy(sql_ikd_ipv_flag.arr,"E");
				}
				else
				{
					strcpy(sql_ikd_ipv_flag.arr,"Y");
				}

				SETLEN(sql_ikd_ipv_flag);

				i_retcd=fn_sp_ikd_info_kra_dtls_eba('J',sql_icd_pan_no.arr,"01",1,sql_ikd_websvc_status_code.arr,sql_ikd_websvc_status_date.arr,sql_ikd_kyc_mode,sql_ikd_ipv_flag.arr,c_err_msg);	

  			if(i_retcd != 0)
  			{
					errlog(c_ServiceName, "S31650", SQLMSG, DEF_USR, DEF_SSSN, c_err_msg);
        	fn_equ_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
        	Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
        	tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
  			}

				if(sql_ikkd_pan_exist == 'Y')
				{
					MEMSET(sql_icd_user_id);

					EXEC SQL
						SELECT  ICD_USER_ID
						INTO    :sql_icd_user_id
						FROM    ICD_INFO_CLIENT_DTLS,
        						UAC_USR_ACCNTS
						WHERE   UAC_USR_ID = ICD_USER_ID
						AND     UAC_ACT_DEACT_FLG = 'N'
						AND     ICD_PAN_NO = :sql_icd_pan_no;

					userlog("sql_icd_user_id :%s:",sql_icd_user_id.arr);
					
					if(SQLCODE != 0)
					{
						errlog(c_ServiceName, "S31655", SQLMSG, DEF_USR, DEF_SSSN, c_err_msg);
        		fn_equ_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
        		Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
        		tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
					}

					SETNULL(sql_icd_user_id);

					if(Fadd32(ptr_fml_Ibuffer, FML_TO_ADDR, (char *) sql_icd_user_id.arr, 0) == -1)
					{
						errlog(c_ServiceName, "S31660", FMLMSG, DEF_USR, DEF_SSSN, c_err_msg);
          	fn_equ_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
          	Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
          	tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
					}
				}	
			}
			else
			{
				c_ret_cd = 'L';	*Lead Capture*

				if(strcmp(c_app_status,"11") == 0)
				{
					strcpy(c_lead_err,"I2");
				}
				else
				{
					strcpy(c_lead_err,"I1");
				}

				if(Fadd32(ptr_fml_Ibuffer, FML_PARAM_TO, (char *)c_lead_err, 0) == -1)
      	{
					errlog(c_ServiceName, "S31665", SQLMSG, DEF_USR, DEF_SSSN, c_err_msg);
        	fn_equ_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
        	Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
        	tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
      	}
			}
			****************Commented in Ver 2.2 end******************/

			if(fn_equ_committran(c_ServiceName,DEF_USR,DEF_SSSN,i_trnsctn,c_err_msg) == -1)
      {
        errlog(c_ServiceName, "S31670",SQLMSG , DEF_USR, DEF_SSSN, c_err_msg);
        Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
        fn_equ_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
        tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
      }

			userlog("Final c_ret_cd :%c:",c_ret_cd);
     	if(Fadd32(ptr_fml_Ibuffer, FML_GIFT_STATUS, (char *) &c_ret_cd, 0) == -1)
    	{
				errlog(c_ServiceName, "S31675", SQLMSG, DEF_USR, DEF_SSSN, c_err_msg);
        Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
        tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
     	}
		}
		else
		{
			userlog("Invalid Option");
			fn_equ_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
			errlog(c_ServiceName, "S31680", "", DEF_USR, DEF_SSSN, c_err_msg);
			Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
			tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
		}
	}
	/******************************Added in Ver 2.0 end******************************/
	else
	{
		userlog("Invalid Option");
		errlog(c_ServiceName, "S91124", "", DEF_USR, DEF_SSSN, c_err_msg);
		Fadd32(ptr_fml_Ibuffer, FML_ERR_MSG, c_err_msg, 0);
    tpreturn(TPFAIL , 0L , (char *)ptr_fml_Ibuffer , 0L ,0);
	}
	
	userlog("SVC_INSTA_ACC executed successfully.");
	tpreturn(TPSUCCESS,0,(char *)ptr_fml_Ibuffer,0L,0);
}

int	fn_valid_pan_dob(char *c_pan_no, char *c_dob,char *c_pan_exist)
{
	int		i_valid_dob = 0;
	char	c_ikkd_stts[3+1];
	char	c_pan_flg;
	/*char  c_src_flg;**Ver 2.2**/

	MEMSET(c_ikkd_stts);
	
	EXEC SQL
		SELECT	DECODE(IKKD_USER_DOB, :c_dob, 1, 0),
						NVL(IKKD_STATUS,'*'),
						NVL(IKKD_PAN_EXIST,'N')		/* Y:Pan Exist, N:New Pan, S:Pan Exist with Suspended Account */
						/*NVL(IKKD_SRC_TYPE,'P')   *Ver 2.0**Ver 2.2**/
		INTO		:i_valid_dob,
						:c_ikkd_stts,
						:c_pan_flg
						/*:c_src_flg									*Ver 2.0**Ver 2.2**/
		FROM		IKKD_INFO_KRA_KYC_DTLS
		WHERE		IKKD_PAN_NO = :c_pan_no
		AND			IKKD_KRA_ACTDEACT = 'A';

	if(SQLCODE != 0)
	{
		errlog(c_ServiceName, "S91124", SQLMSG, DEF_USR, DEF_SSSN, c_err_msg);
		return -1;
	}

	/***************************Commented in Ver 2.2 start***************************
	if((strncmp(c_ikkd_stts,"02",2) == 0 || strncmp(c_ikkd_stts,"12",2) == 0) && i_valid_dob != 1 && c_src_flg == 'P')
	{
		userlog("Pan and DOB not validate");	
	}
	else if(c_src_flg == 'A' && i_valid_dob != 1)			**Ver 2.0**
	{
		userlog("Pan and DOB not validate");	
	}
	***************************Commented in Ver 2.2 end***************************/

	if(i_valid_dob != 1)
	{
		userlog("Pan and DOB not validate");
	}
	else
	{
		i_valid_dob = 1;
	}

	*c_pan_exist=c_pan_flg;

	return(i_valid_dob);
}

int fn_upd_kra_dtls(FBFR32 *ptr_fml_temp_buffer,char *c_pan_no, char *c_dob, char *c_res_stts, char *c_err_msg)
{

	int	i_err[100];
	int i_ferr[8];	/*Add in ver 1.3 */
	int	i;
	int	i_valid_sub = 0;
	int	i_mob_len = 0;
	int	i_retcd = 0;
	int	i_income;
	int	i_mob_no = 0;
	int	i_email = 0;

	size_t buf_len,msg_len;

	char	c_mob_no[10+1];
	char	c_err_msg1[500];
	char  c_kra_err_cd[15+1]; /*Ver 2.0*/

	varchar v_rowid[25];

	INIT(i_err,sizeof(i_err));

	EXEC SQL INCLUDE "table/ikkd_info_kra_kyc_dtls.h";
	EXEC SQL INCLUDE "table/ikd_info_kra_dtls.h";
	EXEC SQL INCLUDE "table/par_systm_prmtr.h";
	EXEC SQL INCLUDE "table/mar_mbl_accopn_rqst.h";			/*VEr 2.0*/

	sql_ikkd_netwrth=0;
	sql_ikd_kyc_mode=0;				/*Ver 2.0*/
	sql_ikkd_pan_cpy='\0';
	sql_ikkd_res_status='\0';
	sql_ikkd_dump_type = '\0';

	MEMSET(v_rowid);
	MEMSET(sql_ikkd_agent_cd);
	MEMSET(c_mob_no);
	MEMSET(sql_ikd_websvc_status_code);
	MEMSET(sql_ikd_websvc_status_date);
	MEMSET(sql_ikd_websvc_kra_date);
	MEMSET(c_err_msg1);
	MEMSET(sql_ikkd_ip_add);

	EXEC SQL
    SELECT  TRUNC(SYSDATE) - TRUNC(IKKD_SUB_DT),
						NVL(IKKD_AGENT_CD,'*'),
            IKKD_INFO_KRA_KYC_DTLS.ROWID,
						PAR_KRA_REFRSH_DAYS,
						IKKD_PAN_EXIST,
						IKKD_IP_ADD,
						NVL(IKD_KRA_PROVIDER,0),	/*Ver 1.2 **Handled NVL**/
						IKD_WEBSVC_STATUS_CODE,
						IKD_WEBSVC_STATUS_DATE,
						IKD_WEBSVC_KRA_DATE,
						IKD_KYC_MODE					/*Ver 2.0*/
    INTO    :i_valid_sub,
						:sql_ikkd_agent_cd,
            :v_rowid,
						:sql_par_kra_refrsh_days,
						:sql_ikkd_pan_exist,
						:sql_ikkd_ip_add,
						:sql_ikd_kra_provider,
						:sql_ikd_websvc_status_code,
						:sql_ikd_websvc_status_date,
						:sql_ikd_websvc_kra_date,
						:sql_ikd_kyc_mode						/*Ver 2.0*/
    FROM    IKKD_INFO_KRA_KYC_DTLS,
						IKD_INFO_KRA_DTLS,
						PAR_SYSTM_PRMTR
    WHERE   IKKD_PAN_NO = :c_pan_no
		AND			IKKD_PAN_NO = IKD_PAN_NO 
    AND     IKKD_KRA_ACTDEACT = 'A'
    AND     IKKD_KRA_STATUS = 'Y';

	if(DEBUG_MSG_LVL_3)
	{
		userlog("Valid Subscription :%d:",i_valid_sub);
		userlog("sql_ikkd_agent_cd :%s:",sql_ikkd_agent_cd.arr);
		userlog("Row id :%s:",v_rowid.arr);
		userlog("No of days :%d:",sql_par_kra_refrsh_days);
		userlog("Pan exist :%c:",sql_ikkd_pan_exist);
		userlog("sql_ikkd_ip_add :%s:",sql_ikkd_ip_add.arr);
		userlog("sql_ikd_kra_provider :%d:",sql_ikd_kra_provider);
		userlog("sql_ikd_websvc_status_code :%s:",sql_ikd_websvc_status_code.arr);
		userlog("sql_ikd_websvc_status_date :%s:",sql_ikd_websvc_status_date.arr);
		userlog("sql_ikd_websvc_kra_date :%s:",sql_ikd_websvc_kra_date.arr);
		userlog("c_dob :%s:",c_dob);
	}

  if(SQLCODE != 0)
  {
    errlog(c_ServiceName, "S31685", SQLMSG, DEF_USR, DEF_SSSN, c_err_msg);
		return -1;
  }

	/*************************Added Ver 1.2****Handled KRA Service provide start**************/
	if(sql_ikd_kra_provider == 0)
	{
		EXEC	SQL
			SELECT	DISTINCT IKSM_KRA_PROVIDER_CODE
			INTO		:sql_ikd_kra_provider
			FROM		IKSM_INFO_KRA_STATUS_MASTER
			WHERE		IKSM_WEBSVC_STATUS_CODE = :sql_ikd_websvc_status_code;

		if(SQLCODE != 0)
  	{
    	errlog(c_ServiceName, "S31690", SQLMSG, DEF_USR, DEF_SSSN, c_err_msg);
    	return -1;
  	}

		if(DEBUG_MSG_LVL_3)
		{
			userlog("sql_ikd_kra_provider :%d:",sql_ikd_kra_provider);
		}
	}
	/*************************Added Ver 1.2****Handled KRA Service provide end**************/

	MEMSET(sql_ikkd_branch_code);
	MEMSET(sql_ikkd_comnce_dt);
	MEMSET(sql_ikkd_comp_status);
	MEMSET(sql_ikkd_cor_add_dt);
	MEMSET(sql_ikkd_cor_add_prf);
	MEMSET(sql_ikkd_cor_add_ref);
	MEMSET(sql_ikkd_cor_add1);
	MEMSET(sql_ikkd_cor_add2);
	MEMSET(sql_ikkd_cor_add3);
	MEMSET(sql_ikkd_cor_city);
	MEMSET(sql_ikkd_cor_ctry);
	MEMSET(sql_ikkd_cor_pincd);
	MEMSET(sql_ikkd_cor_state);
	MEMSET(sql_ikkd_date);
	MEMSET(sql_ikkd_dnlddt);
	MEMSET(sql_ikkd_doi_dt);
	MEMSET(sql_ikkd_error_desc);
	MEMSET(sql_ikkd_exmt_cat);
	MEMSET(sql_ikkd_exmt_id_prf);
	MEMSET(sql_ikkd_f_name);
	MEMSET(sql_ikkd_fax_no);
	MEMSET(sql_ikkd_filler1);
	MEMSET(sql_ikkd_filler2);
	MEMSET(sql_ikkd_filler3);
	MEMSET(sql_ikkd_incorp_plc);
	MEMSET(sql_ikkd_int_code);
	MEMSET(sql_ikkd_internal_ref);
	MEMSET(sql_ikkd_ipv_dt);
	MEMSET(sql_ikkd_kra_info);
	MEMSET(sql_ikkd_mar_status);
	MEMSET(sql_ikkd_name);
	MEMSET(sql_ikkd_nationality);
	MEMSET(sql_ikkd_networth_dt);
	MEMSET(sql_ikkd_no);
	MEMSET(sql_ikkd_occ);
	MEMSET(sql_ikkd_off_no);
	MEMSET(sql_ikkd_oth_comp_status);
	MEMSET(sql_ikkd_oth_nationality);
	MEMSET(sql_ikkd_oth_occ);
	MEMSET(sql_ikkd_otherinfo);
	MEMSET(sql_ikkd_panex_no);
	MEMSET(sql_ikkd_per_add_dt);
	MEMSET(sql_ikkd_per_add_prf);
	MEMSET(sql_ikkd_per_add_ref);
	MEMSET(sql_ikkd_per_add1);
	MEMSET(sql_ikkd_per_add2);
	MEMSET(sql_ikkd_per_add3);
	MEMSET(sql_ikkd_per_city);
	MEMSET(sql_ikkd_per_ctry);
	MEMSET(sql_ikkd_per_pincd);
	MEMSET(sql_ikkd_per_state);
	MEMSET(sql_ikkd_pol_conn);
	MEMSET(sql_ikkd_reg_no);
	MEMSET(sql_ikkd_res_no);
	MEMSET(sql_ikkd_res_status_prf);
	MEMSET(sql_ikkd_sign);
	MEMSET(sql_ikkd_status);
	MEMSET(sql_ikkd_statusdt);
	MEMSET(sql_ikkd_uid_no);
	MEMSET(sql_ikkd_updtflg);
	MEMSET(sql_ikkd_kra_dob);
	MEMSET(sql_ikkd_kra_mob);
	MEMSET(sql_ikkd_kra_email);
	
	/************Added in Ver 2.0 start************/
	MEMSET(c_kra_err_cd);
	if(Foccur32((FBFR32 *)ptr_fml_temp_buffer,FML_CC_ID) == 0)
	{
		i_err[0]=Fget32(ptr_fml_temp_buffer,FML_USR_USR_NM,0,(char *)c_kra_err_cd,0);
  	i_err[1]=Fget32(ptr_fml_temp_buffer,FML_USR_FRST_NM,0,(char *)sql_ikkd_error_desc.arr,0);

		for(i=0; i<2; i++)
  	{
   		if(i_err[i] == -1)
    	{
      	userlog("Fget32 failed at :%d:",i);
      	errlog(c_ServiceName, "S31695", FMLMSG, DEF_USR, DEF_SSSN, c_err_msg);
      	return -1;
    	}
  	}

  	rtrim(c_kra_err_cd);
	
    SETLEN(sql_ikkd_error_desc);

    EXEC SQL
      UPDATE  IKKD_INFO_KRA_KYC_DTLS
      SET     IKKD_ERROR_DESC       = SUBSTR(TRIM(:c_kra_err_cd||'|'||:sql_ikkd_error_desc),1,100),
							IKKD_MOD_DT = SYSDATE,						/*Ver 3.2*/
							IKKD_MODIFY_BY = 'SVC_INSTA_ACC'  /*Ver 3.2*/
      WHERE   IKKD_PAN_NO           =:c_pan_no
      AND     IKKD_KRA_STATUS       ='Y'
      AND     IKKD_KRA_ACTDEACT     ='A';

    if(SQLCODE != 0)
    {
      errlog(c_ServiceName, "S31700", SQLMSG, DEF_USR, DEF_SSSN, c_err_msg);
      return -1;
    }

    userlog("Error while fetching personal details..");

    strcpy(c_err_msg,c_kra_err_cd);
    return 0;
	}
	else
	{
		/************Added in Ver 2.0 end************/
		i_err[0]=Fget32(ptr_fml_temp_buffer,FML_CC_ID,0,(char *)sql_ikkd_updtflg.arr,0);
		i_err[1]=Fget32(ptr_fml_temp_buffer,FML_STTLMNT_NO,0,(char *)sql_ikkd_int_code.arr,0);
		i_err[2]=Fget32(ptr_fml_temp_buffer,FML_BRK_TYP,0,(char *)&sql_ikkd_type,0);
		i_err[3]=Fget32(ptr_fml_temp_buffer,FML_NEW_ISIN,0,(char *)sql_ikkd_no.arr,0);
		i_err[4]=Fget32(ptr_fml_temp_buffer,FML_STTLMNT_DT,0,(char *)sql_ikkd_date.arr,0);
		i_err[5]=Fget32(ptr_fml_temp_buffer,FML_UPDATE_SUCCESS,0,(char *)&sql_ikkd_exmt,0);
		i_err[6]=Fget32(ptr_fml_temp_buffer,FML_ACK_DT,0,(char *)sql_ikkd_exmt_cat.arr,0);
		i_err[7]=Fget32(ptr_fml_temp_buffer,FML_ACCSS_TM,0,(char *)sql_ikkd_exmt_id_prf.arr,0);
		i_err[8]=Fget32(ptr_fml_temp_buffer,FML_BLK_FLG,0,(char *)&sql_ikkd_ipv_flg,0);
		i_err[9]=Fget32(ptr_fml_temp_buffer,FML_UPLOAD_DT,0,(char *)sql_ikkd_ipv_dt.arr,0);
		i_err[10]=Fget32(ptr_fml_temp_buffer,FML_USR_SEX,0,(char *)&sql_ikkd_sex,0);
		i_err[11]=Fget32(ptr_fml_temp_buffer,FML_USR_USR_NM,0,(char *)sql_ikkd_name.arr,0);
		i_err[12]=Fget32(ptr_fml_temp_buffer,FML_USR_FRST_NM,0,(char *)sql_ikkd_f_name.arr,0);
		i_err[13]=Fget32(ptr_fml_temp_buffer,FML_UPS_LST_TRD_DT,0,(char *)sql_ikkd_doi_dt.arr,0);
		i_err[14]=Fget32(ptr_fml_temp_buffer,FML_ISIN,0,(char *)sql_ikkd_reg_no.arr,0);
		i_err[15]=Fget32(ptr_fml_temp_buffer,FML_ORD_DT,0,(char *)sql_ikkd_comnce_dt.arr,0);
		i_err[16]=Fget32(ptr_fml_temp_buffer,FML_BK_CD,0,(char *)sql_ikkd_nationality.arr,0);
		i_err[17]=Fget32(ptr_fml_temp_buffer,FML_SERIES,0,(char *)sql_ikkd_oth_nationality.arr,0);
		i_err[18]=Fget32(ptr_fml_temp_buffer,FML_ND_STA,0,(char *)sql_ikkd_comp_status.arr,0);
		i_err[19]=Fget32(ptr_fml_temp_buffer,FML_ARD_CLNT_RMRKS,0,(char *)sql_ikkd_oth_comp_status.arr,0);
		i_err[20]=Fget32(ptr_fml_temp_buffer,FML_GAME_REG_FLG,0,(char *)&sql_ikkd_res_status,0);
		i_err[21]=Fget32(ptr_fml_temp_buffer,FML_O_SYMBOL,0,(char *)sql_ikkd_res_status_prf.arr,0);
		i_err[22]=Fget32(ptr_fml_temp_buffer,FML_O_CLN_ID,0,(char *)sql_ikkd_panex_no.arr,0);
		i_err[23]=Fget32(ptr_fml_temp_buffer,FML_ACTIVE,0,(char *)&sql_ikkd_pan_cpy,0);
		/*i_err[24]=Fget32(ptr_fml_temp_buffer,FML_MATCH_ACCOUNT_NO,0,(char *)sql_ikkd_uid_no.arr,0);**Ver 2.9*/
		i_err[25]=Fget32(ptr_fml_temp_buffer,FML_USR_ADDRSS_LN1,0,(char *)sql_ikkd_cor_add1.arr,0);
		i_err[26]=Fget32(ptr_fml_temp_buffer,FML_USR_ADDRSS_LN2,0,(char *)sql_ikkd_cor_add2.arr,0);
		i_err[27]=Fget32(ptr_fml_temp_buffer,FML_USR_ADDRSS_LN3,0,(char *)sql_ikkd_cor_add3.arr,0);
		i_err[28]=Fget32(ptr_fml_temp_buffer,FML_USR_ADDRSS_CTY,0,(char *)sql_ikkd_cor_city.arr,0);
		i_err[29]=Fget32(ptr_fml_temp_buffer,FML_USR_ZIP_CD2,0,(char *)sql_ikkd_cor_pincd.arr,0);
		i_err[30]=Fget32(ptr_fml_temp_buffer,FML_UWL_STCK_LST,0,(char *)sql_ikkd_cor_state.arr,0);
		i_err[31]=Fget32(ptr_fml_temp_buffer,FML_USR_ADDRSS_CNTRY,0,(char *)sql_ikkd_cor_ctry.arr,0);
		i_err[32]=Fget32(ptr_fml_temp_buffer,FML_ORD_ORDR_RFRNC,0,(char *)sql_ikkd_off_no.arr,0);
		i_err[33]=Fget32(ptr_fml_temp_buffer,FML_ORD_XCHNG_CD,0,(char *)sql_ikkd_res_no.arr,0);
		i_err[34]=Fget32(ptr_fml_temp_buffer,FML_TO_ADDR,0,(char *)sql_ikkd_kra_mob.arr, 0);
		i_err[35]=Fget32(ptr_fml_temp_buffer,FML_USR_FAX_NMBRS,0,(char *)sql_ikkd_fax_no.arr,0);
		i_err[36]=Fget32(ptr_fml_temp_buffer,FML_USR_EMAIL_ADDRSS,0,(char *)sql_ikkd_kra_email.arr,0);
		i_err[37]=Fget32(ptr_fml_temp_buffer,FML_ORD_SUB_BRKR_TAG,0,(char *)sql_ikkd_cor_add_prf.arr,0);
		i_err[38]=Fget32(ptr_fml_temp_buffer,FML_MMD_DSCRPTN,0,(char *)sql_ikkd_cor_add_ref.arr,0);
		i_err[39]=Fget32(ptr_fml_temp_buffer,FML_TRD_DT,0,(char *)sql_ikkd_cor_add_dt.arr,0);
		i_err[40]=Fget32(ptr_fml_temp_buffer,FML_STR_ORDER_NO,0,(char *)sql_ikkd_per_add1.arr,0);
		i_err[41]=Fget32(ptr_fml_temp_buffer,FML_STR_TRADE_NO,0,(char *)sql_ikkd_per_add2.arr,0);
		i_err[42]=Fget32(ptr_fml_temp_buffer,FML_STR_BRK_TYP,0,(char *)sql_ikkd_per_add3.arr,0);
		i_err[43]=Fget32(ptr_fml_temp_buffer,FML_MAIL_BODY,0,(char *)sql_ikkd_per_city.arr,0);
		i_err[44]=Fget32(ptr_fml_temp_buffer,FML_ACK_NMBR,0,(char *)sql_ikkd_per_pincd.arr,0);
		i_err[45]=Fget32(ptr_fml_temp_buffer,FML_SYS_CMD,0,(char *)sql_ikkd_per_state.arr,0);
		i_err[46]=Fget32(ptr_fml_temp_buffer,FML_SUBJECT,0,(char *)sql_ikkd_per_ctry.arr,0);
		i_err[47]=Fget32(ptr_fml_temp_buffer,FML_Q1EDITTEXT,0,(char *)sql_ikkd_per_add_prf.arr,0);
		i_err[48]=Fget32(ptr_fml_temp_buffer,FML_Q2EDITTEXT,0,(char *)sql_ikkd_per_add_ref.arr,0);
		i_err[49]=Fget32(ptr_fml_temp_buffer,FML_NXT_TR_DT,0,(char *)sql_ikkd_per_add_dt.arr,0);
		i_err[50]=Fget32(ptr_fml_temp_buffer,FML_RECORD_DT,0,(char *)&i_income,0);
		i_err[51]=Fget32(ptr_fml_temp_buffer,FML_FILE_NAME,0,(char *)sql_ikkd_occ.arr,0);
		i_err[52]=Fget32(ptr_fml_temp_buffer,FML_MKT_MSG,0,(char *)sql_ikkd_oth_occ.arr,0);
		i_err[53]=Fget32(ptr_fml_temp_buffer,FML_PARAM_CC,0,(char *)sql_ikkd_pol_conn.arr,0);
		i_err[54]=Fget32(ptr_fml_temp_buffer,FML_VALID_FLAG,0,(char *)&sql_ikkd_doc_prf,0);
		i_err[55]=Fget32(ptr_fml_temp_buffer,FML_MDC_NARRATION,0,(char *)sql_ikkd_internal_ref.arr,0);
		i_err[56]=Fget32(ptr_fml_temp_buffer,FML_MDC_CRDT_NMBR,0,(char *)sql_ikkd_branch_code.arr,0);
		i_err[57]=Fget32(ptr_fml_temp_buffer,FML_MDC_MAINCODE,0,(char *)sql_ikkd_mar_status.arr,0);
		/*i_err[58]=Fget32(ptr_fml_temp_buffer,FML_NET_WORTH,0,(char *)&sql_ikkd_netwrth,0); 
		i_err[59]=Fget32(ptr_fml_temp_buffer,FML_PY_IN_DT,0,(char *)sql_ikkd_networth_dt.arr,0); **Future Use*/
		i_err[60]=Fget32(ptr_fml_temp_buffer,FML_PRTC_CD,0,(char *)sql_ikkd_incorp_plc.arr,0);
		i_err[61]=Fget32(ptr_fml_temp_buffer,FML_DLR_CD,0,(char *)sql_ikkd_otherinfo.arr,0);
		i_err[62]=Fget32(ptr_fml_temp_buffer,FML_CHART_TYPE,0,(char *)sql_ikkd_filler1.arr,0);
		i_err[63]=Fget32(ptr_fml_temp_buffer,FML_MMD_CHNG,0,(char *)sql_ikkd_filler2.arr,0);
		i_err[64]=Fget32(ptr_fml_temp_buffer,FML_MMD_VL,0,(char *)sql_ikkd_filler3.arr,0);
		i_err[65]=Fget32(ptr_fml_temp_buffer,FML_STCK_STR,0,(char *)sql_ikkd_status.arr,0);
		i_err[66]=Fget32(ptr_fml_temp_buffer,FML_SYSDATE,0,(char *)sql_ikkd_statusdt.arr,0);
		i_err[67]=Fget32(ptr_fml_temp_buffer,FML_ERROR_CD,0,(char *)sql_ikkd_error_desc.arr,0);
		i_err[68]=Fget32(ptr_fml_temp_buffer,FML_LM_FLG,0,(char *)&sql_ikkd_dump_type,0);
		i_err[69]=Fget32(ptr_fml_temp_buffer,FML_URQ_RQST_DT,0,(char *)sql_ikkd_dnlddt.arr,0);
		i_err[70]=Fget32(ptr_fml_temp_buffer,FML_STATLIN,0,(char *)sql_ikkd_kra_info.arr,0);
		i_err[71]=Fget32(ptr_fml_temp_buffer,FML_CLIENT_TITLE,0,(char *)sql_ikkd_sign.arr,0);
		i_err[72]=Fget32(ptr_fml_temp_buffer,FML_INSTR_NO,0,(char *)sql_ikkd_kra_dob.arr, 0);
  	/*i_err[73]=Fget32(ptr_fml_temp_buffer,FML_USR_MBL_NMBRS,0,(char *)sql_ikkd_mob_no.arr,0);*/
	}

	if(DEBUG_MSG_LVL_1)
	{
		userlog("In fn_upd_kra_dtls......");
		userlog("Pan no :%s:",c_pan_no);
		userlog("sql_ikkd_doc_prf	:%c:",sql_ikkd_doc_prf);
		userlog("sql_ikkd_dump_type	:%c:",sql_ikkd_dump_type);
		userlog("i_income	:%d:",i_income);
		userlog("sql_ikkd_netwrth	:%lf:",sql_ikkd_netwrth);
		userlog("sql_ikkd_pan_cpy	:%c:",sql_ikkd_pan_cpy);
		userlog("sql_ikkd_res_status	:%c:",sql_ikkd_res_status);
		userlog("sql_ikkd_type	:%c:",sql_ikkd_type);
		userlog("sql_ikkd_branch_code	:%s:",sql_ikkd_branch_code.arr);
		userlog("sql_ikkd_comnce_dt	:%s:",sql_ikkd_comnce_dt.arr);
		userlog("sql_ikkd_comp_status	:%s:",sql_ikkd_comp_status.arr);
		userlog("sql_ikkd_cor_add_dt	:%s:",sql_ikkd_cor_add_dt.arr);
		userlog("sql_ikkd_cor_add_prf	:%s:",sql_ikkd_cor_add_prf.arr);
		userlog("sql_ikkd_cor_add_ref	:%s:",sql_ikkd_cor_add_ref.arr);
		userlog("sql_ikkd_cor_add1	:%s:",sql_ikkd_cor_add1.arr);
		userlog("sql_ikkd_cor_add2	:%s:",sql_ikkd_cor_add2.arr);
		userlog("sql_ikkd_cor_add3	:%s:",sql_ikkd_cor_add3.arr);
		userlog("sql_ikkd_cor_city	:%s:",sql_ikkd_cor_city.arr);
		userlog("sql_ikkd_cor_ctry	:%s:",sql_ikkd_cor_ctry.arr);
		userlog("sql_ikkd_cor_pincd	:%s:",sql_ikkd_cor_pincd.arr);
		userlog("sql_ikkd_cor_state	:%s:",sql_ikkd_cor_state.arr);
		userlog("sql_ikkd_date	:%s:",sql_ikkd_date.arr);
		userlog("sql_ikkd_dnlddt	:%s:",sql_ikkd_dnlddt.arr);
		userlog("sql_ikkd_doi_dt	:%s:",sql_ikkd_doi_dt.arr);
		userlog("sql_ikkd_error_desc	:%s:",sql_ikkd_error_desc.arr);
		userlog("sql_ikkd_exmt_cat	:%s:",sql_ikkd_exmt_cat.arr);
		userlog("sql_ikkd_exmt_id_prf	:%s:",sql_ikkd_exmt_id_prf.arr);
		userlog("sql_ikkd_exmt	:%c:",sql_ikkd_exmt);
		userlog("sql_ikkd_f_name	:%s:",sql_ikkd_f_name.arr);
		userlog("sql_ikkd_fax_no	:%s:",sql_ikkd_fax_no.arr);
		userlog("sql_ikkd_filler1	:%s:",sql_ikkd_filler1.arr);
		userlog("sql_ikkd_filler2	:%s:",sql_ikkd_filler2.arr);
		userlog("sql_ikkd_filler3	:%s:",sql_ikkd_filler3.arr);
		userlog("sql_ikkd_incorp_plc	:%s:",sql_ikkd_incorp_plc.arr);
		userlog("sql_ikkd_int_code	:%s:",sql_ikkd_int_code.arr);
		userlog("sql_ikkd_internal_ref	:%s:",sql_ikkd_internal_ref.arr);
		userlog("sql_ikkd_ipv_dt	:%s:",sql_ikkd_ipv_dt.arr);
		userlog("sql_ikkd_ipv_flg	:%c:",sql_ikkd_ipv_flg);
		userlog("sql_ikkd_kra_info	:%s:",sql_ikkd_kra_info.arr);
		userlog("sql_ikkd_mar_status	:%s:",sql_ikkd_mar_status.arr);
		/*userlog("sql_ikkd_mob_no	:%s:",sql_ikkd_mob_no.arr);*/
		userlog("sql_ikkd_name	:%s:",sql_ikkd_name.arr);
		userlog("sql_ikkd_nationality	:%s:",sql_ikkd_nationality.arr);
		userlog("sql_ikkd_networth_dt	:%s:",sql_ikkd_networth_dt.arr);
		userlog("sql_ikkd_no	:%s:",sql_ikkd_no.arr);
		userlog("sql_ikkd_occ	:%s:",sql_ikkd_occ.arr);
		userlog("sql_ikkd_off_no	:%s:",sql_ikkd_off_no.arr);
		userlog("sql_ikkd_oth_comp_status	:%s:",sql_ikkd_oth_comp_status.arr);
		userlog("sql_ikkd_oth_nationality	:%s:",sql_ikkd_oth_nationality.arr);
		userlog("sql_ikkd_oth_occ	:%s:",sql_ikkd_oth_occ.arr);
		userlog("sql_ikkd_otherinfo	:%s:",sql_ikkd_otherinfo.arr);
		userlog("sql_ikkd_panex_no	:%s:",sql_ikkd_panex_no.arr);
		userlog("sql_ikkd_per_add_dt	:%s:",sql_ikkd_per_add_dt.arr);
		userlog("sql_ikkd_per_add_prf	:%s:",sql_ikkd_per_add_prf.arr);
		userlog("sql_ikkd_per_add_ref	:%s:",sql_ikkd_per_add_ref.arr);
		userlog("sql_ikkd_per_add1	:%s:",sql_ikkd_per_add1.arr);
		userlog("sql_ikkd_per_add2	:%s:",sql_ikkd_per_add2.arr);
		userlog("sql_ikkd_per_add3	:%s:",sql_ikkd_per_add3.arr);
		userlog("sql_ikkd_per_city	:%s:",sql_ikkd_per_city.arr);
		userlog("sql_ikkd_per_ctry	:%s:",sql_ikkd_per_ctry.arr);
		userlog("sql_ikkd_per_pincd	:%s:",sql_ikkd_per_pincd.arr);
		userlog("sql_ikkd_per_state	:%s:",sql_ikkd_per_state.arr);
		userlog("sql_ikkd_pol_conn	:%s:",sql_ikkd_pol_conn.arr);
		userlog("sql_ikkd_reg_no	:%s:",sql_ikkd_reg_no.arr);
		userlog("sql_ikkd_res_no	:%s:",sql_ikkd_res_no.arr);
		userlog("sql_ikkd_res_status_prf	:%s:",sql_ikkd_res_status_prf.arr);
		userlog("sql_ikkd_sex	:%c:",sql_ikkd_sex);
		userlog("sql_ikkd_sign	:%s:",sql_ikkd_sign.arr);
		userlog("sql_ikkd_status	:%s:",sql_ikkd_status.arr);
		userlog("sql_ikkd_statusdt	:%s:",sql_ikkd_statusdt.arr);
		/*userlog("sql_ikkd_uid_no	:%s:",sql_ikkd_uid_no.arr); **Ver 2.9**/
		userlog("sql_ikkd_updtflg	:%s:",sql_ikkd_updtflg.arr);
		userlog("sql_ikkd_kra_dob	:%s:",sql_ikkd_kra_dob.arr);
		userlog("sql_ikkd_kra_mob	:%s:",sql_ikkd_kra_mob.arr);
		userlog("sql_ikkd_kra_email	:%s:",sql_ikkd_kra_email.arr);
		userlog("i_valid_sub :%d:",i_valid_sub);
		userlog("c_rowid :%s:",v_rowid.arr);
	}

	for(i=0; i<73; i++)
  {
   if(i_err[i] == -1)
    {
    	userlog("Fget32 failed at :%d:",i);
    	errlog(c_ServiceName, "S31705", FMLMSG, DEF_USR, DEF_SSSN, c_err_msg);
			return -1;
    }
  }

	/*****************Added in Ver 2.0 start*****************/
	if(c_mbl_acc_opn == 'M')
  {
    MEMSET(sql_ikkd_title);

    EXEC SQL
      SELECT  MAR_TITLE,
              MAR_GENDER
      INTO    :sql_ikkd_title,
              :sql_mar_gender
      FROM    MAR_MBL_ACCOPN_RQST
      WHERE   MAR_PAN_NO = :c_pan_no
      AND     MAR_STATUS NOT IN ('R','I','M','A');

    if(SQLCODE != 0)
    {
      errlog(c_ServiceName, "S31710", SQLMSG, DEF_USR, DEF_SSSN, c_err_msg);
      return -1;
    }

    userlog("sql_ikkd_title :%s:",sql_ikkd_title.arr);
    userlog("sql_mar_gender :%c:",sql_mar_gender);

		if(sql_mar_gender != sql_ikkd_sex)
		{
			errlog(c_ServiceName, "S31715", FMLMSG, DEF_USR, DEF_SSSN, c_err_msg);
			/*strcpy(c_err_msg,"Gender selected by you is not matching with KRA record, Please select correct the Gender");*/
			strcpy(c_err_msg,"Selected details not matching with KRA");
      return -1;
		}
  }
	/*****************Added in Ver 2.0 end*****************/
	
	if(sql_ikkd_res_status == 'N')
	{
		errlog(c_ServiceName, "S31720", "", DEF_USR, DEF_SSSN, c_err_msg);
		strcpy(c_err_msg,"I6");
		return -1;
	}

	/************Ver 2.2 start************/
	if(strlen(sql_ikkd_kra_dob.arr) == 0)
	{
		strcpy(sql_ikkd_kra_dob.arr,c_dob);
	}
	/************Ver 2.2 end************/

	/*if(strncmp(sql_ikkd_status.arr,"02",2) != 0) *If DOB against in not valid**Ver 1.1**/
	/*if(strlen(sql_ikkd_name.arr) == 0) *If DOB against in not valid **Ver 1.1***Ver 2.2**/
	if(strlen(sql_ikkd_name.arr) == 0 && strlen(sql_ikkd_kra_dob.arr) != 0)		/*Ver 2.2 */
	{
		errlog(c_ServiceName, "S31725", "", DEF_USR, DEF_SSSN, c_err_msg);
		/***** Ver 1.8 *****Ver 2.2**
		if(c_mbl_acc_opn == 'M')
		{
			sprintf(c_err_msg,"DOB");
		}
		else
		{
		****** Ver 1.8 *****/
			sprintf(c_err_msg,"Date of Birth (DOB)/PAN entered by you is not matching with KRA record, please enter the correct DOB/PAN");
		/*} **Ver 2.2**/
		return -1;
	}
	
	SETLEN(sql_ikkd_branch_code);
	SETLEN(sql_ikkd_comnce_dt);
	SETLEN(sql_ikkd_comp_status);
	SETLEN(sql_ikkd_cor_add_dt);
	SETLEN(sql_ikkd_cor_add_prf);
	SETLEN(sql_ikkd_cor_add_ref);
	SETLEN(sql_ikkd_cor_add1);
	SETLEN(sql_ikkd_cor_add2);
	SETLEN(sql_ikkd_cor_add3);
	SETLEN(sql_ikkd_cor_city);
	SETLEN(sql_ikkd_cor_ctry);
	SETLEN(sql_ikkd_cor_pincd);
	SETLEN(sql_ikkd_cor_state);
	SETLEN(sql_ikkd_date);
	SETLEN(sql_ikkd_dnlddt);
	SETLEN(sql_ikkd_doi_dt);
	SETLEN(sql_ikkd_error_desc);
	SETLEN(sql_ikkd_exmt_cat);
	SETLEN(sql_ikkd_exmt_id_prf);
	SETLEN(sql_ikkd_f_name);
	SETLEN(sql_ikkd_fax_no);
	SETLEN(sql_ikkd_filler1);
	SETLEN(sql_ikkd_filler2);
	SETLEN(sql_ikkd_filler3);
	SETLEN(sql_ikkd_incorp_plc);
	SETLEN(sql_ikkd_int_code);
	SETLEN(sql_ikkd_internal_ref);
	SETLEN(sql_ikkd_ipv_dt);
	SETLEN(sql_ikkd_kra_info);
	SETLEN(sql_ikkd_mar_status);
	SETLEN(sql_ikkd_name);
	SETLEN(sql_ikkd_nationality);
	SETLEN(sql_ikkd_networth_dt);
	SETLEN(sql_ikkd_no);
	SETLEN(sql_ikkd_occ);
	SETLEN(sql_ikkd_off_no);
	SETLEN(sql_ikkd_oth_comp_status);
	SETLEN(sql_ikkd_oth_nationality);
	SETLEN(sql_ikkd_oth_occ);
	SETLEN(sql_ikkd_otherinfo);
	SETLEN(sql_ikkd_panex_no);
	SETLEN(sql_ikkd_per_add_dt);
	SETLEN(sql_ikkd_per_add_prf);
	SETLEN(sql_ikkd_per_add_ref);
	SETLEN(sql_ikkd_per_add1);
	SETLEN(sql_ikkd_per_add2);
	SETLEN(sql_ikkd_per_add3);
	SETLEN(sql_ikkd_per_city);
	SETLEN(sql_ikkd_per_ctry);
	SETLEN(sql_ikkd_per_pincd);
	SETLEN(sql_ikkd_per_state);
	SETLEN(sql_ikkd_pol_conn);
	SETLEN(sql_ikkd_reg_no);
	SETLEN(sql_ikkd_res_no);
	SETLEN(sql_ikkd_res_status_prf);
	SETLEN(sql_ikkd_sign);
	SETLEN(sql_ikkd_status);
	SETLEN(sql_ikkd_statusdt);
	SETLEN(sql_ikkd_updtflg);
	SETLEN(sql_ikkd_kra_dob);
  SETLEN(sql_ikkd_kra_mob);
  SETLEN(sql_ikkd_kra_email);
	SETLEN(sql_ikkd_title);
	/*SETLEN(sql_ikkd_uid_no); **Ver 2.9**/

	i_mob_len=strlen(sql_ikkd_kra_mob.arr);

  if(i_mob_len > 10)
  {
    strcpy(c_mob_no,(sql_ikkd_kra_mob.arr + (i_mob_len - 10)));
  }
  else
  {
    strcpy(c_mob_no,sql_ikkd_kra_mob.arr);
  }

	userlog("c_mob_no :%s:",c_mob_no);

	if(i_valid_sub > sql_par_kra_refrsh_days)
	{
		
		/*Start Ver 1.3 */
		INIT(i_err,sizeof(i_err));
		INIT(i_ferr,sizeof(i_ferr));
		
		MEMSET(sql_ikkd_source);
		MEMSET(sql_ikkd_medium);
		MEMSET(sql_ikkd_campaign);
		MEMSET(sql_ikkd_content);
		MEMSET(sql_ikkd_adgroup);
		MEMSET(sql_ikkd_term);
		MEMSET(sql_ikkd_camp_id);
		MEMSET(sql_ikkd_key_id);

  	i_err[0]=Fget32(ptr_fml_temp_buffer,FML_IDD_TM,0,(char *)sql_ikkd_source.arr,0);
  	i_ferr[0]=Ferror32;
		i_err[1]=Fget32(ptr_fml_temp_buffer,FML_IDD_XCHNG_CD,0,(char *)sql_ikkd_medium.arr,0);
  	i_ferr[1]=Ferror32;
		i_err[2]=Fget32(ptr_fml_temp_buffer,FML_UWM_VM_MP,0,(char *)sql_ikkd_campaign.arr,0);
  	i_ferr[2]=Ferror32;
		i_err[3]=Fget32(ptr_fml_temp_buffer,FML_NN_SYMBOL,0,(char *)sql_ikkd_content.arr,0);
  	i_ferr[3]=Ferror32;
		i_err[4]=Fget32(ptr_fml_temp_buffer,FML_NN_SERIES,0,(char *)sql_ikkd_adgroup.arr,0);
  	i_ferr[4]=Ferror32;
		i_err[5]=Fget32(ptr_fml_temp_buffer,FML_O_PARTI_CD,0,(char *)sql_ikkd_term.arr,0);
  	i_ferr[5]=Ferror32;
		i_err[6]=Fget32(ptr_fml_temp_buffer,FML_BARRA_VAL,0,(char *)sql_ikkd_camp_id.arr,0);
		i_ferr[6]=Ferror32;
		i_err[7]=Fget32(ptr_fml_temp_buffer,FML_ACCOUNT_STATUS,0,(char *)sql_ikkd_key_id.arr,0);
    i_ferr[7]=Ferror32;
		
		for(i=0; i<8; i++)
  	{
   		if(i_err[i] == -1)
    	{
				if(i_ferr[i] == FNOTPRES )
				{
					userlog("No Ad-campaign");
					continue;
				}
      	userlog("Fget32 failed at :%d:",i);
      	errlog(c_ServiceName, "S31730", FMLMSG, DEF_USR, DEF_SSSN, c_err_msg);
      	return -1;
    	}
  	}

		SETLEN(sql_ikkd_source);
		SETLEN(sql_ikkd_medium);
		SETLEN(sql_ikkd_campaign);
		SETLEN(sql_ikkd_content);
		SETLEN(sql_ikkd_adgroup);
		SETLEN(sql_ikkd_term);
		SETLEN(sql_ikkd_camp_id);
		SETLEN(sql_ikkd_key_id);

		if(DEBUG_MSG_LVL_1)
 	 	{
			userlog("sql_ikkd_source   :%s:",sql_ikkd_source.arr);
			userlog("sql_ikkd_medium   :%s:",sql_ikkd_medium.arr);
			userlog("sql_ikkd_campaign   :%s:",sql_ikkd_campaign.arr);
			userlog("sql_ikkd_content   :%s:",sql_ikkd_content.arr);  
			userlog("sql_ikkd_adgroup   :%s:",sql_ikkd_adgroup.arr);  
			userlog("sql_ikkd_term   :%s:",sql_ikkd_term.arr);  
			userlog("sql_ikkd_camp_id   :%s:",sql_ikkd_camp_id.arr);   
			userlog("sql_ikkd_key_id   :%s:",sql_ikkd_key_id.arr);
		}
		/*End Ver 1.3 */

		EXEC SQL
		INSERT INTO IKKD_INFO_KRA_KYC_DTLS(
			IKKD_PAN_NO,
			IKKD_KRA_STATUS,
			IKKD_SUB_DT,
			IKKD_KRA_ACTDEACT,
			IKKD_KRA_DOB,
			IKKD_AGENT_CD,
			IKKD_ACC_OPN_STTS,
			IKKD_USER_DOB,
			IKKD_KRA_MOB,
			IKKD_KRA_EMAIL,
			IKKD_UPDTFLG,
			IKKD_INT_CODE,
			IKKD_TYPE,
			IKKD_NO,
			/*IKKD_DATE, **Future Use*/
			IKKD_EXMT,
			IKKD_EXMT_CAT,
			IKKD_EXMT_ID_PRF,
			IKKD_IPV_FLG,
			/*IKKD_IPV_DT, **Future Use*/
			IKKD_SEX,
			IKKD_NAME,
			IKKD_F_NAME,
			/*IKKD_DOI_DT, **Future Use*/
			IKKD_REG_NO,
			/*IKKD_COMNCE_DT, **Future Use*/
			IKKD_NATIONALITY,
			IKKD_OTH_NATIONALITY,
			IKKD_COMP_STATUS,
			IKKD_OTH_COMP_STATUS,
			IKKD_RES_STATUS,
			IKKD_RES_STATUS_PRF,
			IKKD_PANEX_NO,
			IKKD_PAN_CPY,
			/*IKKD_UID_NO, **Ver 2.9**/
			IKKD_COR_ADD1,
			IKKD_COR_ADD2,
			IKKD_COR_ADD3,
			IKKD_COR_CITY,
			IKKD_COR_PINCD,
			IKKD_COR_STATE,
			IKKD_COR_CTRY,
			IKKD_OFF_NO,
			IKKD_RES_NO,
			IKKD_FAX_NO,
			IKKD_COR_ADD_PRF,
			IKKD_COR_ADD_REF,
			/*IKKD_COR_ADD_DT, **Future Use*/
			IKKD_PER_ADD1,
			IKKD_PER_ADD2,
			IKKD_PER_ADD3,
			IKKD_PER_CITY,
			IKKD_PER_PINCD,
			IKKD_PER_STATE,
			IKKD_PER_CTRY,
			IKKD_PER_ADD_PRF,
			IKKD_PER_ADD_REF,
			/*IKKD_PER_ADD_DT, **Future Use*/
			/*IKKD_INCOME,  ***Ver 2.0**/
			/*IKKD_OCC,		  ***Ver 2.0**/
			IKKD_INCOME_KRA,		/**Ver 2.0**/
			IKKD_OCC_KRA,				/**Ver 2.0**/
			IKKD_OTH_OCC,
			IKKD_POL_CONN,
			IKKD_DOC_PRF,
			IKKD_INTERNAL_REF,
			IKKD_BRANCH_CODE,
			IKKD_MAR_STATUS,
			/*IKKD_NETWRTH,  		**Future Use*/
			/*IKKD_NETWORTH_DT, **Future Use*/
			IKKD_INCORP_PLC,
			IKKD_OTHERINFO,
			IKKD_FILLER1,
			IKKD_FILLER2,
			IKKD_FILLER3,
			IKKD_STATUS,
			/*IKKD_STATUSDT, **Future Use*/
			IKKD_ERROR_DESC,
			IKKD_DUMP_TYPE,
			/*IKKD_DNLDDT, **Future Use*/
			IKKD_KRA_INFO,
			IKKD_SIGN,
			IKKD_PAN_EXIST,
			IKKD_IP_ADD,
			/* Ver 1.3 Starts*/
			IKKD_SOURCE,
			IKKD_MEDIUM,
			IKKD_CAMPAIGN,
			IKKD_CONTENT,
			IKKD_ADGROUP,
			IKKD_TERM,
			IKKD_CAMP_ID,
			IKKD_KEY_ID,
			/* Ver 1.3 Ends*/
			IKKD_ACCOPN_SOURCE,   /**** Ver 1.8 ****/
			/*IKKD_SRC_TYPE         **Ver 2.0**Ver 2.2**/
			/*IKKD_TITLE							**** Ver 2.0 ****/
			IKKD_INSERT_BY				/**Ver 3.2**/
			)
		VALUES(
			:c_pan_no,
			'Y',
			SYSDATE,
			'A',
			:sql_ikkd_kra_dob,
			:sql_ikkd_agent_cd,
			'N',
			:sql_ikkd_kra_dob,
			:c_mob_no,
			:sql_ikkd_kra_email,
			:sql_ikkd_updtflg,
			:sql_ikkd_int_code,
			:sql_ikkd_type,
			:sql_ikkd_no,
			/*TO_DATE(:sql_ikkd_date,'DD/MM/YYYY'), **Future Use*/
			:sql_ikkd_exmt,
			:sql_ikkd_exmt_cat,
			:sql_ikkd_exmt_id_prf,
			:sql_ikkd_ipv_flg,
			/*TO_DATE(:sql_ikkd_ipv_dt,'DD/MM/YYYY'), **Future Use*/
			:sql_ikkd_sex,
			:sql_ikkd_name,
			:sql_ikkd_f_name,
			/*TO_DATE(:sql_ikkd_doi_dt,'DD/MM/YYYY'), **Future Use*/
			:sql_ikkd_reg_no,
			/*TO_DATE(:sql_ikkd_comnce_dt,'DD/MM/YYYY'), **Future Use*/
			:sql_ikkd_nationality,
			:sql_ikkd_oth_nationality,
			:sql_ikkd_comp_status,
			:sql_ikkd_oth_comp_status,
			:sql_ikkd_res_status,
			:sql_ikkd_res_status_prf,
			:sql_ikkd_panex_no,
			:sql_ikkd_pan_cpy,
			/*REPLACE(:sql_ikkd_uid_no,' ',''),				**** Ver 2.4 ****Ver 2.9***/ 
			:sql_ikkd_cor_add1,
			:sql_ikkd_cor_add2,
			:sql_ikkd_cor_add3,
			:sql_ikkd_cor_city,
			:sql_ikkd_cor_pincd,
			:sql_ikkd_cor_state,
			:sql_ikkd_cor_ctry,
			:sql_ikkd_off_no,
			:sql_ikkd_res_no,
			:sql_ikkd_fax_no,
			:sql_ikkd_cor_add_prf,
			:sql_ikkd_cor_add_ref,
			/*TO_DATE(:sql_ikkd_cor_add_dt,'DD/MM/YYYY'), **Future Use*/
			:sql_ikkd_per_add1,
			:sql_ikkd_per_add2,
			:sql_ikkd_per_add3,
			:sql_ikkd_per_city,
			:sql_ikkd_per_pincd,
			:sql_ikkd_per_state,
			:sql_ikkd_per_ctry,
			:sql_ikkd_per_add_prf,
			:sql_ikkd_per_add_ref,
			/*TO_DATE(:sql_ikkd_per_add_dt,'DD/MM/YYYY'), **Future Use*/
			TRIM(TO_CHAR(:i_income,'00')),
			:sql_ikkd_occ,
			:sql_ikkd_oth_occ,
			:sql_ikkd_pol_conn,
			:sql_ikkd_doc_prf,
			:sql_ikkd_internal_ref,
			:sql_ikkd_branch_code,
			:sql_ikkd_mar_status,
			/*:sql_ikkd_netwrth, 	**Future Use*/
			/*TO_DATE(:sql_ikkd_networth_dt,'DD/MM/YYYY'), **Future Use*/
			:sql_ikkd_incorp_plc,
			:sql_ikkd_otherinfo,
			:sql_ikkd_filler1,
			:sql_ikkd_filler2,
			:sql_ikkd_filler3,
			:sql_ikkd_status,
			/*TO_DATE(:sql_ikkd_statusdt,'DD/MM/YYYY HH24:MI:SS'), **Future Use*/
			:sql_ikkd_error_desc,
			:sql_ikkd_dump_type,
			/*TO_DATE(:sql_ikkd_dnlddt,'DD/MM/YYYY'), **Future Use*/
			:sql_ikkd_kra_info,
			:sql_ikkd_sign,
			:sql_ikkd_pan_exist,
			:sql_ikkd_ip_add,
			/* Ver 1.3 Starts*/
			:sql_ikkd_source,
			:sql_ikkd_medium,
			:sql_ikkd_campaign,
			:sql_ikkd_content,
			:sql_ikkd_adgroup,
			:sql_ikkd_term,
			:sql_ikkd_camp_id,
			:sql_ikkd_key_id,
      /* Ver 1.3 Ends*/
			:c_mbl_acc_opn,       /*** Ver 1.8 ***/ 	
			/*'K',		 							*** Ver 2.0 ***Ver 2.2***/
			/*DECODE(:c_mbl_acc_opn,'M',:sql_ikkd_title,NULL)		**** Ver 2.0 ****/
			'SVC_INSTA_ACC'			/** Ver. 3.2 **/
			);
			
		if(SQLCODE != 0)
		{
			errlog(c_ServiceName, "S31735", SQLMSG, DEF_USR, DEF_SSSN, c_err_msg);
      return -1;
		}

		userlog("IKKD_INFO_KRA_KYC_DTLS Inserted successfully.");

		EXEC SQL
			UPDATE	IKKD_INFO_KRA_KYC_DTLS
			SET			IKKD_KRA_ACTDEACT = 'D',
							IKKD_MOD_DT=SYSDATE,
							IKKD_MODIFY_BY = 'SVC_INSTA_ACC'  /*Ver 3.2*/
			WHERE		ROWID = :v_rowid;

		if(SQLCODE != 0)
		{
			errlog(c_ServiceName, "S31740", SQLMSG, DEF_USR, DEF_SSSN, c_err_msg);
      return -1;
		}

		userlog("IKKD_INFO_KRA_KYC_DTLS Updated successfully.");
	}
	else
	{
			EXEC SQL
			UPDATE	IKKD_INFO_KRA_KYC_DTLS
			SET			IKKD_DOC_PRF					=:sql_ikkd_doc_prf,
							IKKD_DUMP_TYPE				=:sql_ikkd_dump_type,
							/*IKKD_INCOME					= TRIM(TO_CHAR(ABS(:i_income),'00')),*Ver 1.2 **add abs for DOTEX**Ver 2.0*/
							IKKD_INCOME_KRA				=	TRIM(TO_CHAR(ABS(:i_income),'00')),			/*Ver 2.0*/
							/*IKKD_NETWRTH				=:sql_ikkd_netwrth,  **Future Use*/
							IKKD_PAN_CPY					=:sql_ikkd_pan_cpy,
							IKKD_RES_STATUS				=:sql_ikkd_res_status,
							IKKD_TYPE							=:sql_ikkd_type,
							IKKD_BRANCH_CODE			=:sql_ikkd_branch_code,
							/*IKKD_COMNCE_DT				=TO_DATE(:sql_ikkd_comnce_dt,'DD/MM/YYYY'), **Future use**/
							IKKD_COMP_STATUS			=:sql_ikkd_comp_status,
							/*IKKD_COR_ADD_DT				=TO_DATE(:sql_ikkd_cor_add_dt,'DD/MM/YYYY'), **Future use**/
							IKKD_COR_ADD_PRF			=:sql_ikkd_cor_add_prf,
							IKKD_COR_ADD_REF			=:sql_ikkd_cor_add_ref,
							IKKD_COR_ADD1					=:sql_ikkd_cor_add1,
							IKKD_COR_ADD2					=:sql_ikkd_cor_add2,
							IKKD_COR_ADD3					=:sql_ikkd_cor_add3,
							IKKD_COR_CITY					=:sql_ikkd_cor_city,
							IKKD_COR_CTRY					=:sql_ikkd_cor_ctry,
							IKKD_COR_PINCD				=:sql_ikkd_cor_pincd,
							IKKD_COR_STATE				=:sql_ikkd_cor_state,
							/*IKKD_DATE							=TO_DATE(:sql_ikkd_date,'DD/MM/YYYY'), ****
							*IKKD_DNLDDT						=TO_DATE(:sql_ikkd_dnlddt,'DD/MM/YYYY'), ****
							*IKKD_DOI_DT						=TO_DATE(:sql_ikkd_doi_dt,'DD/MM/YYYY'), **Future use**/
							IKKD_ERROR_DESC				=:sql_ikkd_error_desc,
							IKKD_EXMT_CAT					=:sql_ikkd_exmt_cat,
							IKKD_EXMT_ID_PRF			=:sql_ikkd_exmt_id_prf,
							IKKD_EXMT							=:sql_ikkd_exmt,
							IKKD_F_NAME						=:sql_ikkd_f_name,
							IKKD_FAX_NO						=:sql_ikkd_fax_no,
							IKKD_FILLER1					=:sql_ikkd_filler1,
							IKKD_FILLER2					=:sql_ikkd_filler2,
							IKKD_FILLER3					=:sql_ikkd_filler3,
							IKKD_INCORP_PLC				=:sql_ikkd_incorp_plc,
							IKKD_INT_CODE					=:sql_ikkd_int_code,
							IKKD_INTERNAL_REF			=:sql_ikkd_internal_ref,
							/*IKKD_IPV_DT						=TO_DATE(:sql_ikkd_ipv_dt,'DD/MM/YYYY'), **Future use**/
							IKKD_IPV_FLG					=:sql_ikkd_ipv_flg,
							IKKD_KRA_INFO					=:sql_ikkd_kra_info,
							IKKD_MAR_STATUS				=:sql_ikkd_mar_status,
							IKKD_NAME							=:sql_ikkd_name,
							IKKD_NATIONALITY			=:sql_ikkd_nationality,
							/*IKKD_NETWORTH_DT			=TO_DATE(:sql_ikkd_networth_dt,'DD/MM/YYYY'), **Future use**/
							IKKD_NO								=:sql_ikkd_no,
							/*IKKD_OCC						=:sql_ikkd_occ, **Ver 2.0*/
							IKKD_OCC_KRA					= :sql_ikkd_occ,		/**Ver 2.0**/
							IKKD_OFF_NO						=:sql_ikkd_off_no,
							IKKD_OTH_COMP_STATUS	=:sql_ikkd_oth_comp_status,
							IKKD_OTH_NATIONALITY	=:sql_ikkd_oth_nationality,
							IKKD_OTH_OCC					=:sql_ikkd_oth_occ,
							IKKD_OTHERINFO				=:sql_ikkd_otherinfo,
							IKKD_PANEX_NO					=:sql_ikkd_panex_no,
							/*IKKD_PER_ADD_DT				=TO_DATE(:sql_ikkd_per_add_dt,'DD/MM/YYYY'), **Future use**/
							IKKD_PER_ADD_PRF			=:sql_ikkd_per_add_prf,
							IKKD_PER_ADD_REF			=:sql_ikkd_per_add_ref,
							IKKD_PER_ADD1					=:sql_ikkd_per_add1,
							IKKD_PER_ADD2					=:sql_ikkd_per_add2,
							IKKD_PER_ADD3					=:sql_ikkd_per_add3,
							IKKD_PER_CITY				  =:sql_ikkd_per_city,
							IKKD_PER_CTRY					=:sql_ikkd_per_ctry,
							IKKD_PER_PINCD				=:sql_ikkd_per_pincd,
							IKKD_PER_STATE				=:sql_ikkd_per_state,
							IKKD_POL_CONN				=	:sql_ikkd_pol_conn,
							IKKD_REG_NO						=:sql_ikkd_reg_no,
							IKKD_RES_NO						=:sql_ikkd_res_no,
							IKKD_RES_STATUS_PRF		=:sql_ikkd_res_status_prf,
							IKKD_SEX							=:sql_ikkd_sex,
							IKKD_SIGN							=:sql_ikkd_sign,
							IKKD_STATUS						=:sql_ikkd_status,
							/*IKKD_STATUSDT					=TO_DATE(:sql_ikkd_statusdt,'DD/MM/YYYY HH24:MI:SS'), **Future use**/
							/*IKKD_UID_NO						=:sql_ikkd_uid_no, **Ver 2.9**/
							IKKD_UPDTFLG					=:sql_ikkd_updtflg,
							IKKD_KRA_DOB					=:sql_ikkd_kra_dob,
							IKKD_USER_DOB					=:sql_ikkd_kra_dob,
							IKKD_KRA_MOB					=:c_mob_no,
							IKKD_KRA_EMAIL				=:sql_ikkd_kra_email,
							IKKD_MOD_DT						=SYSDATE,
							IKKD_ACCOPN_SOURCE    = :c_mbl_acc_opn,				/** Ver 1.8 **/
							/*IKKD_SRC_TYPE					= 'P',									*Ver 2.0 ** K: KRA Flow**Ver 2.2***/
							IKKD_TITLE						= DECODE(:c_mbl_acc_opn,'M',:sql_ikkd_title,NULL),	/**** Ver 2.0 ****/
							IKKD_MODIFY_BY 				= 'SVC_INSTA_ACC'  /*Ver 3.2*/
				WHERE	IKKD_PAN_NO 					=:c_pan_no
				AND		IKKD_KRA_STATUS 			='Y'
				AND		IKKD_KRA_ACTDEACT 		='A';
		
			if(SQLCODE != 0)
			{
				errlog(c_ServiceName, "S31745", SQLMSG, DEF_USR, DEF_SSSN, c_err_msg);
    		return -1;		
			}

			userlog("IKKD_INFO_KRA_KYC_DTLS Updated successfully.");
	}

	/**************Select Kra status code as per logic**************/
	MEMSET(sql_ikkd_status);

	switch(sql_ikd_kra_provider)
	{
		case 1:
						strcpy(sql_ikkd_status.arr,"98");
						break;
		case 2:
						strcpy(sql_ikkd_status.arr,"A");
						break;
		case 3: 
						strcpy(sql_ikkd_status.arr,"98");
						break;
		case 4:	
						strcpy(sql_ikkd_status.arr,"4");
						break;
		case 5:
						strcpy(sql_ikkd_status.arr,"02");
						break;
	}

	userlog("sql_ikkd_status.arr :%s:",sql_ikkd_status.arr);
	/**************Select Kra status code as per logic**************/

	MEMSET(sql_ikd_ipv_flag);		/*Ver 2.0*/
	sql_ikd_ipv_flag.arr[0]=sql_ikkd_ipv_flg;							/*Ver 2.0*/
	SETLEN(sql_ikd_ipv_flag);															/*Ver 2.0*/

	/*i_retcd=fn_sp_ikd_info_kra_dtls_eba('K', c_pan_no, sql_ikkd_status.arr, sql_ikd_kra_provider, sql_ikd_websvc_status_code.arr, sql_ikd_websvc_kra_date.arr, c_err_msg);**Ver 2.0*/
	i_retcd=fn_sp_ikd_info_kra_dtls_eba('K', c_pan_no, sql_ikkd_status.arr, sql_ikd_kra_provider, sql_ikd_websvc_status_code.arr, sql_ikd_websvc_kra_date.arr, sql_ikd_kyc_mode, sql_ikd_ipv_flag.arr, c_err_msg);	/*Ver 2.0*/

	if(i_retcd != 0)
	{
		errlog(c_ServiceName, "S31750",FMLMSG , DEF_USR, DEF_SSSN, c_err_msg);
		return -1;
	}
	
	/*i_retcd=fn_chk_mob_email_unq(c_mob_no,sql_ikkd_kra_email.arr,&i_mob_no,&i_email); **Ver 1.6**/
	i_retcd=fn_chk_mob_email_unq(c_pan_no,c_mob_no,sql_ikkd_kra_email.arr,&i_mob_no,&i_email);   /**er 1.6**/

  if(i_retcd != 0)
  {
    errlog(c_ServiceName, "S31755", "", DEF_USR, DEF_SSSN, c_err_msg);
    return -1;
  }

	if(DEBUG_MSG_LVL_3)
	{/* 0 : Unique other : Not unique */
		userlog("i_mob_no :%d:",i_mob_no);
		userlog("i_email :%d:",i_email);
	}

	i_err[0] = Fchg32(ptr_fml_temp_buffer, FML_USR_USR_NM,0,(char *) sql_ikkd_name.arr, 0);
  i_err[1] = Fchg32(ptr_fml_temp_buffer, FML_TO_ADDR,0,(char *) c_mob_no, 0);
  i_err[2] = Fadd32(ptr_fml_temp_buffer, FML_PARAM_TO, (char *) sql_ikkd_kra_email.arr, 0);
	i_err[3] = Fadd32(ptr_fml_temp_buffer, FML_TRNSCTN_ID, (char *) &i_mob_no, 0);
  i_err[4] = Fadd32(ptr_fml_temp_buffer, FML_TRNSCTN_QTY, (char *) &i_email, 0);

	for(i=0; i<5; i++)
	{
		if(i_err[i] == -1)
		{
			userlog("Fchg32 failed at i :%d:",i);
			errlog(c_ServiceName, "S31760", FMLMSG, DEF_USR, DEF_SSSN, c_err_msg);
			return -1;
		}
	}

	*c_res_stts=sql_ikkd_res_status;

	return 0;
}

/*int fn_validate_kra_otp_dtls(FBFR32 *ptr_fml_temp_buffer,char *c_pan_no,char *c_dob,char *c_agent_cd,char *c_ip_add,char *c_token,char *c_ret_cd,int *i_kra_agency,char *c_err_msg,char c_pan_exist) **Commented Ver 2.2**/
int fn_validate_kra_otp_dtls(FBFR32 *ptr_fml_temp_buffer,char *c_pan_no,char *c_dob,char *c_uid_no,char *c_agent_cd,char *c_ip_add,char *c_token,char *c_ret_cd,int *i_kra_agency,char *c_err_msg,char c_pan_exist) /*Ver 2.2*/
{
 	EXEC SQL INCLUDE "table/ikkd_info_kra_kyc_dtls.h";
  EXEC SQL INCLUDE "table/ikd_info_kra_dtls.h";
	EXEC SQL INCLUDE "table/par_systm_prmtr.h";

	/*int	i_token_valid; ** Ver 1.2**/
	int	i_valid_sub_dt;
	int	i_valid_dob;
	int	i_valid_otp;
	int	i_match_dob=0;
	int	i_err[10];
	int	i_ferr[10];
	int	i;
	int	i_retcd=0;
	int	i_mob_len=0;
	int i_kra_no;
	int	i_mob_no = 0;
	int	i_email = 0;
	int	i_pan_exist_chng = 0;

	char	c_mob_no[10+1];
	char	c_lead_cd[3];

	varchar vc_error_msg[256];

	/*MEMSET(sql_ikd_token); ** Ver 1.2**/
	MEMSET(sql_ikkd_agent_cd);
	MEMSET(sql_ikkd_kra_mob);
	MEMSET(sql_ikkd_kra_email);
	MEMSET(sql_ikd_websvc_status_code);
	MEMSET(sql_ikkd_name);
	MEMSET(sql_ikkd_ip_add);
	MEMSET(c_mob_no);
	MEMSET(c_lead_cd);

	INIT(i_err,sizeof(i_err));
	INIT(i_ferr,sizeof(i_ferr));
	
	/*i_token_valid = 0; ** Ver 1.2**/
	i_valid_sub_dt = 0;
	i_valid_dob = 0;
	i_valid_otp = 0;
	sql_par_kra_refrsh_days=0;
	sql_ikkd_pin_mailer='N';

	EXEC SQL
		SELECT	NVL(IKKD_NAME,'*'),
						/*NVL(IKD_TOKEN,'*'), ***
						*TRUNC(SYSDATE) - TRUNC(NVL(IKD_TOKEN_DATE,SYSDATE)), **Ver 1.2**/
						NVL(IKD_WEBSVC_STATUS_CODE,'*'),
						NVL(IKKD_AGENT_CD,'*'),
						TRUNC(SYSDATE) - TRUNC(IKKD_SUB_DT),
						(CASE	WHEN IKKD_KRA_DOB IS NOT NULL THEN DECODE(IKKD_KRA_DOB,IKKD_USER_DOB,0,1) ELSE -1 END),
						DECODE(IKKD_CRT_OTP_DT,NULL,0,(CASE WHEN IKKD_CRT_OTP_DT+1/48 > SYSDATE THEN 1 ELSE 0 END)),
						NVL(IKKD_KRA_MOB,'*'),
						NVL(IKKD_KRA_EMAIL,'*'),
						NVL(IKKD_KRA_STATUS,'N'),
						NVL(IKKD_IBANK_STATUS,'*'),
						PAR_KRA_REFRSH_DAYS,
						NVL(IKKD_IP_ADD,'*'),
						NVL(IKKD_PIN_MAILER,'*'),
						DECODE(IKKD_PAN_EXIST,:c_pan_exist,0,1),
						NVL(IKKD_OTP_ATTEMPT,0),
						DECODE(IKKD_KRA_STATUS,'N',DECODE(:c_dob,IKKD_USER_DOB,0,1),DECODE(:c_dob,IKKD_KRA_DOB,0,1)),					/*Ver 2.0*/
						/*NVL(IKKD_SRC_TYPE,'P'),					*Ver 2.0**Ver 2.2*/
						NVL(IKKD_KRA_STP,'N')						/*Ver 2.0*/
		INTO		:sql_ikkd_name,
						/*:sql_ikd_token, ***
						*:i_token_valid, **Ver 1.2**/
						:sql_ikd_websvc_status_code,
						:sql_ikkd_agent_cd,
						:i_valid_sub_dt,
						:i_valid_dob,
						:i_valid_otp,
						:sql_ikkd_kra_mob,
						:sql_ikkd_kra_email,
						:sql_ikkd_kra_status,
						:sql_ikkd_ibank_status,
						:sql_par_kra_refrsh_days,
						:sql_ikkd_ip_add,
						:sql_ikkd_pin_mailer,
						:i_pan_exist_chng,
						:sql_ikkd_otp_attempt,
						:i_match_dob,										/*Ver 2.0*/
						/*:sql_ikkd_src_type,						*Ver 2.0**/
						:sql_ikkd_kra_stp								/*Ver 2.0*/
		FROM		IKD_INFO_KRA_DTLS,
						IKKD_INFO_KRA_KYC_DTLS,
						PAR_SYSTM_PRMTR
		WHERE		IKKD_PAN_NO = IKD_PAN_NO 
		AND			IKD_PAN_NO = :c_pan_no
		AND			IKKD_KRA_ACTDEACT = 'A';

	if(DEBUG_MSG_LVL_3)
	{
		userlog("In fn_validate_kra_otp_dtls......");
		userlog("sql_ikkd_name :%s:",sql_ikkd_name.arr);
		/*userlog("sql_ikd_token :%s:",sql_ikd_token.arr); ***
		*userlog("i_token_valid :%d:",i_token_valid); **Ver 1.2**/
		userlog("sql_ikd_websvc_status_code :%s:",sql_ikd_websvc_status_code.arr);
		userlog("sql_ikkd_agent_cd :%s:",sql_ikkd_agent_cd.arr);
		userlog("i_valid_sub_dt :%d:",i_valid_sub_dt);
		userlog("i_valid_dob :%d:",i_valid_dob);
		userlog("i_valid_otp :%d:",i_valid_otp);
		userlog("sql_ikkd_kra_mob :%s:",sql_ikkd_kra_mob.arr);
		userlog("sql_ikkd_kra_email :%s:",sql_ikkd_kra_email.arr);
		userlog("sql_ikkd_kra_status :%c:",sql_ikkd_kra_status);
		userlog("sql_ikkd_ibank_status :%c:",sql_ikkd_ibank_status);
		userlog("sql_par_kra_refrsh_days :%d:",sql_par_kra_refrsh_days);
		userlog("sql_ikkd_ip_add :%s:",sql_ikkd_ip_add.arr);
		userlog("sql_ikkd_pin_mailer :%c:",sql_ikkd_pin_mailer);
		userlog("sql_ikkd_otp_attempt :%d:",sql_ikkd_otp_attempt);
		userlog("i_pan_exist_chng :%d:",i_pan_exist_chng);
		userlog("c_pan_exist :%c:",c_pan_exist);
		userlog("i_match_dob :%d:",i_match_dob);							/*Ver 2.0*/
		/*userlog("sql_ikkd_src_type :%c:",sql_ikkd_src_type);	*Ver 2.0**Ver 2.2**/
		userlog("sql_ikkd_kra_stp :%c:",sql_ikkd_kra_stp);		/*Ver 2.0*/
	}

	if(SQLCODE != 0 && SQLCODE != NO_DATA_FOUND)
	{
		errlog(c_ServiceName, "S31765", SQLMSG, DEF_USR, DEF_SSSN, c_err_msg);
		return -1;
	}
	else
	/*if(SQLCODE == NO_DATA_FOUND || (i_token_valid > 21 && sql_ikkd_kra_status == 'N')) **Ver 1.2**/
	if(SQLCODE == NO_DATA_FOUND) /**Ver 1.2**/
	{
		
		/*Start Ver 1.3 */
		MEMSET(sql_ikkd_source);
    MEMSET(sql_ikkd_medium);
    MEMSET(sql_ikkd_campaign);
    MEMSET(sql_ikkd_content);
    MEMSET(sql_ikkd_adgroup);
    MEMSET(sql_ikkd_term);
    MEMSET(sql_ikkd_camp_id);
    MEMSET(sql_ikkd_key_id);

    i_err[0]=Fget32(ptr_fml_temp_buffer,FML_IDD_TM,0,(char *)sql_ikkd_source.arr,0);
    i_ferr[0]=Ferror32;
    i_err[1]=Fget32(ptr_fml_temp_buffer,FML_IDD_XCHNG_CD,0,(char *)sql_ikkd_medium.arr,0);
    i_ferr[1]=Ferror32;
    i_err[2]=Fget32(ptr_fml_temp_buffer,FML_UWM_VM_MP,0,(char *)sql_ikkd_campaign.arr,0);
    i_ferr[2]=Ferror32;
    i_err[3]=Fget32(ptr_fml_temp_buffer,FML_NN_SYMBOL,0,(char *)sql_ikkd_content.arr,0);
    i_ferr[3]=Ferror32;
    i_err[4]=Fget32(ptr_fml_temp_buffer,FML_NN_SERIES,0,(char *)sql_ikkd_adgroup.arr,0);
    i_ferr[4]=Ferror32;
    i_err[5]=Fget32(ptr_fml_temp_buffer,FML_O_PARTI_CD,0,(char *)sql_ikkd_term.arr,0);
    i_ferr[5]=Ferror32;
    i_err[6]=Fget32(ptr_fml_temp_buffer,FML_BARRA_VAL,0,(char *)sql_ikkd_camp_id.arr,0);
    i_ferr[6]=Ferror32;
    i_err[7]=Fget32(ptr_fml_temp_buffer,FML_ACCOUNT_STATUS,0,(char *)sql_ikkd_key_id.arr,0);
    i_ferr[7]=Ferror32;

    for(i=0; i<8; i++)
    {
      if(i_err[i] == -1)
	  	{
        if(i_ferr[i] == FNOTPRES )
        {
          userlog("No Ad-campaign");
          continue;
        }
        userlog("Fget32 failed at :%d:",i);
        errlog(c_ServiceName, "S31770", FMLMSG, DEF_USR, DEF_SSSN, c_err_msg);
        return -1;
      }
    }

		SETLEN(sql_ikkd_source);
    SETLEN(sql_ikkd_medium);
    SETLEN(sql_ikkd_campaign);
    SETLEN(sql_ikkd_content);
    SETLEN(sql_ikkd_adgroup);
    SETLEN(sql_ikkd_term);
    SETLEN(sql_ikkd_camp_id);
    SETLEN(sql_ikkd_key_id);

    if(DEBUG_MSG_LVL_1)
    {
      userlog("sql_ikkd_source   :%s:",sql_ikkd_source.arr);
      userlog("sql_ikkd_medium   :%s:",sql_ikkd_medium.arr);
      userlog("sql_ikkd_campaign   :%s:",sql_ikkd_campaign.arr);
      userlog("sql_ikkd_content   :%s:",sql_ikkd_content.arr);
      userlog("sql_ikkd_adgroup   :%s:",sql_ikkd_adgroup.arr);
      userlog("sql_ikkd_term   :%s:",sql_ikkd_term.arr);
      userlog("sql_ikkd_camp_id   :%s:",sql_ikkd_camp_id.arr);
      userlog("sql_ikkd_key_id   :%s:",sql_ikkd_key_id.arr);
    }
		
		INIT(i_err,sizeof(i_err));
    INIT(i_ferr,sizeof(i_ferr));

    /*End Ver 1.3 */
			
		if(tpbegin(0,0) == -1)
		{
			errlog(c_ServiceName, "S31775", TPMSG, DEF_USR, DEF_SSSN, c_err_msg);
			return -1;
		}

		EXEC SQL
			INSERT INTO IKKD_INFO_KRA_KYC_DTLS
						(	IKKD_PAN_NO,
							IKKD_KRA_STATUS,
							IKKD_SUB_DT,
							IKKD_KRA_ACTDEACT,
							IKKD_AGENT_CD,
							IKKD_ACC_OPN_STTS,
							IKKD_USER_DOB,
							IKKD_IP_ADD,
							IKKD_PAN_EXIST,
							/* Ver 1.3 Starts*/
							IKKD_SOURCE,
      				IKKD_MEDIUM,
      				IKKD_CAMPAIGN,
      				IKKD_CONTENT,
      				IKKD_ADGROUP,
      				IKKD_TERM,
      				IKKD_CAMP_ID,
      				IKKD_KEY_ID,
      				/* Ver 1.3 Ends*/
							IKKD_ACCOPN_SOURCE,			/*Ver 2.0*/
							/*IKKD_SRC_TYPE,					*Ver 2.0**Ver 2.2**/
							/** commented in ver 3.4 IKKD_UID_NO,*/
							IKKD_INSERT_BY					/**Ver 3.2**/
						)
			VALUES(	:c_pan_no,
							'N',
							SYSDATE,
							'A',
							:c_agent_cd,
							'N',
							:c_dob,
							:c_ip_add,
							:c_pan_exist,
							/* Ver 1.3 Starts*/
							:sql_ikkd_source,
							:sql_ikkd_medium,
							:sql_ikkd_campaign,
							:sql_ikkd_content,
							:sql_ikkd_adgroup,
							:sql_ikkd_term,
							:sql_ikkd_camp_id,
							:sql_ikkd_key_id,
      				/* Ver 1.3 Ends*/
							:c_mbl_acc_opn,				/*Ver 2.0*/
							/**'P',								*Ver 2.0***Ver 2.2**/
						/** commented in ver 3.4 	:c_uid_no,							*Ver 2.2*/
							'SVC_INSTA_ACC'				/**Ver 3.2**/
						);

		if(SQLCODE != 0)
		{
			errlog(c_ServiceName, "S31780", SQLMSG, DEF_USR, DEF_SSSN, c_err_msg);
			tpabort(0);
			return -1;
		}
	
		/*i_retcd=fn_sp_ikd_info_kra_dtls_eba('C', c_pan_no, "N", NULL, NULL, NULL, c_err_msg);**Ver 2.0**/
		i_retcd=fn_sp_ikd_info_kra_dtls_eba('C', c_pan_no, "N", NULL, NULL, NULL, 0, NULL, c_err_msg); /**Ver 2.0**/
			
		if(i_retcd != 0)
		{	
			userlog("c_err_msg :%s:",c_err_msg);
			errlog(c_ServiceName, "S31785", SQLMSG, DEF_USR, DEF_SSSN, c_err_msg);
      tpabort(0);
      return -1;
		}

		if(tpcommit(0) == -1)
		{
			errlog(c_ServiceName, "S31790", TPMSG, DEF_USR, DEF_SSSN, c_err_msg);
			tpabort(0);
			return -1;
		}

		userlog("IKKD_INFO_KRA_KYC_DTLS Inserted successfully.");
		/**strcpy(c_token,"*"); **Ver 1.2**/
		*c_ret_cd='T';   /* 1st or 2nd KRA Hit (Depend upon token) */
	}
	else
	{
		/***********Commented in Ver 2.2 start** This flow has removed*******
		if(sql_ikkd_pin_mailer == 'Y' && c_pan_exist == 'Y') *Bypass for Suspended and New Pan [S:Exist with suspended]*
  	{
    	*Known Your Status*
    	errlog(c_ServiceName, "B91121", "", DEF_USR, DEF_SSSN, c_err_msg);
    	return -1;
  	}
		***********Commented in Ver 2.2 end*********/

		/*strcpy(c_token,sql_ikd_token.arr); **Ver 1.2**No Use**/

		/*Update Agent Code, Ip Address and Pan exist status*/
		/*if(strcmp(c_agent_cd,sql_ikkd_agent_cd.arr) != 0 || strcmp(c_ip_add,sql_ikkd_ip_add.arr) != 0 || i_pan_exist_chng == 1)**Commented in Ver 2.0*/
		if(strcmp(c_agent_cd,sql_ikkd_agent_cd.arr) != 0 || strcmp(c_ip_add,sql_ikkd_ip_add.arr) != 0 || i_pan_exist_chng == 1 || i_match_dob != 0)		/**Ver 2.0*/
		{
			if(tpbegin(0,0) == -1)
      {
        errlog(c_ServiceName, "S31795", TPMSG, DEF_USR, DEF_SSSN, c_err_msg);
        return -1;
      }

			EXEC SQL
			UPDATE	IKKD_INFO_KRA_KYC_DTLS
			SET			IKKD_AGENT_CD = :c_agent_cd,
							IKKD_IP_ADD = :c_ip_add,
							IKKD_USER_DOB = :c_dob,
							IKKD_MOD_DT = SYSDATE,
							IKKD_PAN_EXIST = :c_pan_exist,
							IKKD_MODIFY_BY = 'SVC_INSTA_ACC'  /*Ver 3.2*/
			WHERE		IKKD_PAN_NO = :c_pan_no
			AND			IKKD_KRA_ACTDEACT = 'A';

			if(SQLCODE != 0)
			{
				userlog("Unable to update Agent code.");
				errlog(c_ServiceName, "S31800", SQLMSG, DEF_USR, DEF_SSSN, c_err_msg);
				tpabort(0);
				return -1;
			}

			if(tpcommit(0) == -1)
			{
				userlog("Unable to Commit");
        errlog(c_ServiceName, "S31805", SQLMSG, DEF_USR, DEF_SSSN, c_err_msg);
        tpabort(0);
        return -1;
			}

			userlog("Agent Code/IP Address Updated successfully.");
		}

		/***********Ver 2.0 start***********/
		MEMSET(sql_ikkd_uid_no);
		if(Fget32(ptr_fml_temp_buffer,FML_DP_ACCOUNT_NO,0,(char *)sql_ikkd_uid_no.arr,0) == -1)
		{
			if(Ferror32 == FNOTPRES)
			{
				strcpy(sql_ikkd_uid_no.arr,"*");
			}
			else
			{
				errlog(c_ServiceName, "S31810", FMLMSG, DEF_USR, DEF_SSSN, c_err_msg);
        tpabort(0);
        return -1;
			}
		}
		/***********Ver 2.0 end***********/

		/**if(strncmp(&sql_ikd_websvc_status_code.arr[1],"02",2) == 0 || strncmp(&sql_ikd_websvc_status_code.arr[1],"12",2) == 0) **Commented in Ver 1.2**/
    /*if(strncmp(&sql_ikd_websvc_status_code.arr[1],"02",2) == 0)  **Ver 1.2**Ver 2.0**/
    /*if(strncmp(&sql_ikd_websvc_status_code.arr[1],"02",2) == 0 || 
				(sql_ikkd_src_type == 'A' && sql_ikkd_kra_stp == 'Y' && c_mbl_acc_opn == 'M' && 
									strcmp(sql_ikkd_uid_no.arr,"*") != 0))   **Ver 2.0***Commented in Ver 2.2**/

		if(strncmp(&sql_ikd_websvc_status_code.arr[1],"02",2) == 0)		/**Ver 2.2**/
		{
			if(i_valid_dob == -1 || (i_valid_sub_dt > sql_par_kra_refrsh_days)) /**Ver 2.0**Uncommented in Ver 2.2**/
			/*if(i_valid_dob == -1 || (i_valid_sub_dt > sql_par_kra_refrsh_days && sql_ikkd_src_type == 'P')) *Ver 2.0***Commented in Ver 2.2**/
    	{
				userlog("KRA Hit");
				*i_kra_agency=(int)sql_ikd_websvc_status_code.arr[0] - (int)'0';
      	*c_ret_cd = 'K';   /*3rd KRA Hit*/
    	}
    	else
			{
				*c_ret_cd='P';			/**Ver 2.2**Generate OTP for provided AADHAAR**/
			}
			/******************Commented in Ver 2.2 start***Flow has removed***************
			if(i_valid_otp == 1 && sql_ikkd_ibank_status == '*')
      {
				if(sql_ikkd_otp_attempt > 2)
				{
        	*c_ret_cd='P';   *OTP Generate*
				}
				else
				{
					*c_ret_cd = 'V'; *Confirm OTP*
				}
      }
      else
    	if(i_valid_dob == 0 || i_valid_otp == 0 || i_valid_otp == 1)
    	{
      	*c_ret_cd='P';   *OTP Generate*
    	}
    	else
    	{
      	errlog(c_ServiceName, "S31815", "", DEF_USR, DEF_SSSN, c_err_msg);
      	sprintf(c_err_msg,"Entered DOB and KRA DOB Not Matched");
      	userlog("%s",c_err_msg);
				return -1;
    	}
			******************Commented in Ver 2.2 end******************/
		}
		else
		{
			*c_ret_cd='T';   /* 1st or 2nd KRA Hit (Depend upon token) */
		}
	}

	/***************Commented in Ver 2.2 start**Flow has removed********
	if(*c_ret_cd == 'V' || *c_ret_cd == 'P')
	{
		*i_retcd=fn_chk_mob_email_unq(sql_ikkd_kra_mob.arr,sql_ikkd_kra_email.arr,&i_mob_no,&i_email); **Ver 1.6**
		i_retcd=fn_chk_mob_email_unq(c_pan_no,sql_ikkd_kra_mob.arr,sql_ikkd_kra_email.arr,&i_mob_no,&i_email); **Ver 1.6**

		if(i_retcd != 0)
		{
			errlog(c_ServiceName, "S31820", Fstrerror32(i_ferr[i]), DEF_USR, DEF_SSSN, c_err_msg);
      return -1;
		}

		if(DEBUG_MSG_LVL_3)
  	{* 0 : Unique other : Not unique *
    	userlog("i_mob_no :%d:",i_mob_no);
    	userlog("i_email :%d:",i_email);
  	}

		i_err[0] = Fadd32(ptr_fml_temp_buffer, FML_USR_USR_NM, (char *) sql_ikkd_name.arr, 0);
		i_ferr[0]= Ferror32;
		i_err[1] = Fadd32(ptr_fml_temp_buffer, FML_TO_ADDR, (char *) sql_ikkd_kra_mob.arr, 0);
		i_ferr[1]= Ferror32;
		i_err[2] = Fadd32(ptr_fml_temp_buffer, FML_PARAM_TO, (char *) sql_ikkd_kra_email.arr, 0);
		i_ferr[2]= Ferror32;
		i_err[3] = Fadd32(ptr_fml_temp_buffer, FML_TRNSCTN_ID, (char *) &i_mob_no, 0);
		i_ferr[3]= Ferror32;
		i_err[4] = Fadd32(ptr_fml_temp_buffer, FML_TRNSCTN_QTY, (char *) &i_email, 0);
		i_ferr[4]= Ferror32;

		for(i=0; i<5; i++)
		{
			if(i_err[i] == -1)
			{
				userlog("Fadd32 failed at i :%d:",i);
				errlog(c_ServiceName, "S31825", Fstrerror32(i_ferr[i]), DEF_USR, DEF_SSSN, c_err_msg);
				return -1;
			}
		}
	}
	***************Commented in Ver 2.2 end**Flow has removed********/
	return 0;
}

int fn_kra_fld_lead_cap(char *c_websvc_stts_cd,char *c_lead_cd)
{
	int i;

	for(i=0;i<9;i++)
	{
		if(strncmp(&c_websvc_stts_cd[1],c_kra_fld_stts_I1[i],2) == 0)
		{
			strcpy(c_lead_cd,"I1");
			return -1;
		}
	}

	if(strncmp(&c_websvc_stts_cd[1],"01",2) == 0 || strncmp(&c_websvc_stts_cd[1],"11",2) == 0)
	{
		strcpy(c_lead_cd,"I2");
		return -1;
	}

	return 0;
}

/*int fn_sp_ikd_info_kra_dtls_eba(char c_type, char *c_pan_no, char *c_stts_cd, int i_kra_provider, char *c_websvc_cd, char *c_websvc_kra_date,char *c_err_msg) **Ver 2.0**/
int fn_sp_ikd_info_kra_dtls_eba(char c_type, char *c_pan_no, char *c_stts_cd, int i_kra_provider, char *c_websvc_cd, char *c_websvc_kra_date, int i_kyc_mode, char *c_ipv_flg, char *c_err_msg)	/**Ver 2.0**/
{
	char	c_sucess_flg = 'N';
	char	c_errmsg[256];

	userlog("In sp i_kyc_mode :%d:",i_kyc_mode);
	userlog("In sp c_ipv_flg :%s:",c_ipv_flg);

	MEMSET(c_errmsg);

	EXEC SQL
      EXECUTE
        BEGIN
				SP_IKD_INFO_KRA_DTLS_EBA
				(	:c_pan_no,
					/*CASE WHEN :c_type = 'K' THEN :c_stts_cd ELSE '00' END,   *Changed 'N' to '00' **Ver 1.9*
					NULL,			**********Commented in Ver 2.0*/
					CASE WHEN :c_type IN ('K','J') THEN :c_stts_cd ELSE '00' END,	/*Ver 2.0*/
					CASE WHEN :c_type = 'J' THEN SYSDATE ELSE NULL END,						/*Ver 2.0*/
					NULL,
					NULL,
					NULL,
					CASE WHEN :c_type = 'C' THEN 'SVC_INSTA_ACC' ELSE NULL END,
					CASE WHEN :c_type = 'C' THEN NULL ELSE 'SVC_INSTA_ACC' END,
					CASE WHEN :c_type = 'C' THEN NULL ELSE :i_kra_provider END,
					'SVC_INSTA_ACC',
					:c_sucess_flg,
					:c_errmsg,
					NULL,
					NULL,
					CASE WHEN :c_type = 'C' THEN NULL ELSE :c_websvc_cd END,
					/*SYSDATE,************Commented in Ver 2.0**/
					CASE WHEN :c_type = 'J' THEN TO_DATE(:c_websvc_kra_date,'DD/MM/YYYY HH24:MI:SS') 
							 WHEN	:c_type = 'C'	THEN	NULL
							 ELSE SYSDATE END,		/*Ver 2.0*/
					CASE WHEN :c_type = 'C' THEN NULL ELSE 'SVC_INSTA_ACC' END,
					CASE WHEN :c_type = 'C' THEN NULL ELSE TO_DATE(:c_websvc_kra_date,'DD/MM/YYYY HH24:MI:SS') END,
					:i_kyc_mode,						/*Ver 2.0*/
					:c_ipv_flg
					/**** Commented in Ver. 3.2 *******
					NULL,	*Ver 2.8 *
					NULL, *Ver 2.8 *
					NULL, *Ver 2.8 *
					NULL, *Ver 2.8 *
					NULL
					**** Ver. 3.2 comment ends ****/
					);						/*Ver 2.8*/
				END;
			END-EXEC;

	if(DEBUG_MSG_LVL_3)
	{
		userlog("c_sucess_flg :%c:",c_sucess_flg);
		userlog("c_errmsg :%s:",c_errmsg);
	}

	if(SQLCODE != 0 && SQLCODE != NULL_RETURN)
	{
		errlog(c_ServiceName, "S31830", SQLMSG, DEF_USR, DEF_SSSN, c_err_msg);
		return -1;
	}

	if(c_sucess_flg != 'Y')
	{
		errlog(c_ServiceName, "S31835", SQLMSG, DEF_USR, DEF_SSSN, c_err_msg);
    return -1;
	}
	
	strcpy(c_err_msg,c_errmsg);		/*Check*/

	userlog("fn_sp_ikd_info_kra_dtls_eba Completed.");

	return 0;
}

int	fn_actv_accnt(char *c_ServiceName, char *c_user_id, char *c_pan_no, char *c_dob, char *c_ip_add, char c_pan_exist)
{
	FBFR32  *ptr_fml_Sbuffer;
	FBFR32  *ptr_fml_Rbuffer;

	char	c_insta_flg='I';
	char	c_actv_flg='A';
	char	i_err[30];

	int		i;

	long	l_recvbuff;

	ptr_fml_Sbuffer=(FBFR32 *)tpalloc("FML32", NULL, MIN_FML_BUF_LEN);
	if(ptr_fml_Sbuffer == NULL)
	{
		errlog(c_ServiceName, "S31840", TPMSG, DEF_USR, DEF_SSSN, c_err_msg);
		return -1;
	}

	ptr_fml_Rbuffer=(FBFR32 *)tpalloc("FML32", NULL, MIN_FML_BUF_LEN);
  if(ptr_fml_Rbuffer == NULL)
  {
    errlog(c_ServiceName, "S31845", TPMSG, DEF_USR, DEF_SSSN, c_err_msg);
		tpfree((char *)ptr_fml_Sbuffer);	/*Ver 1.5*/
    return -1;
  }

	if(DEBUG_MSG_LVL_3)
	{
		userlog("In fn_actv_accnt.....");
		userlog("c_user_id :%s:",c_user_id);
		userlog("c_pan_no :%s:",c_pan_no);
		userlog("c_actv_flg :%c:",c_actv_flg);
		userlog("c_ip_add :%s:",c_ip_add);
		userlog("c_pan_exist :%c",c_pan_exist);
		userlog("c_dob :%s:",c_dob);
		userlog("c_insta_flg :%c:",c_insta_flg);
	}

	i_err[0] = Fadd32(ptr_fml_Sbuffer, FML_USR_ID, (char *)c_user_id, 0);
	i_err[1] = Fadd32(ptr_fml_Sbuffer, FML_ARD_BNK_ACCNT_NMBR, (char *)c_pan_no, 0);
	i_err[2] = Fadd32(ptr_fml_Sbuffer, FML_FLG, (char *)&c_actv_flg, 0);
	i_err[3] = Fadd32(ptr_fml_Sbuffer, FML_USR_ADDRSS_CTY, (char *)c_ip_add, 0);
	i_err[4] = Fadd32(ptr_fml_Sbuffer, FML_USR_DT_BRTH, (char *)c_dob, 0);
	i_err[5] = Fadd32(ptr_fml_Sbuffer, FML_LM_FLG, (char *)&c_insta_flg, 0);

	for(i=0; i<6; i++)	
	{
		if(i_err[i] == -1)
		{
			userlog("Error in Fadd :%d:",i);
			errlog(c_ServiceName, "S31850", FMLMSG, DEF_USR, DEF_SSSN, c_err_msg);
			tpfree((char *)ptr_fml_Sbuffer);
			tpfree((char *)ptr_fml_Rbuffer);
			return -1;
		}
	}

	if(tpcall("SVC_ACTV_RQST", (char *)ptr_fml_Sbuffer, 0, (char **)&ptr_fml_Rbuffer,&l_recvbuff, 0) == -1)
	{
		errlog(c_ServiceName, "S31855", TPMSG, DEF_USR, DEF_SSSN, c_err_msg);
		MEMSET(c_err_msg);
		Fget32(ptr_fml_Rbuffer,FML_ERR_MSG,0,(char *)c_err_msg, 0);
    tpfree((char *)ptr_fml_Sbuffer);
    tpfree((char *)ptr_fml_Rbuffer);
    return -1;
	}

	tpfree((char *)ptr_fml_Sbuffer);
  tpfree((char *)ptr_fml_Rbuffer);

	userlog("Account Activated sucessfully.");
	return 0;
}

int	fn_pan_format(char *c_pan_no)
{
	int i_cnt = 1;

	EXEC SQL
		SELECT  REGEXP_INSTR(SUBSTR(:c_pan_no,1,5),'[A-Z]',1,5)+
						REGEXP_INSTR(SUBSTR(:c_pan_no,10,1),'[A-Z]',1,1)+
						REGEXP_INSTR(SUBSTR(:c_pan_no,6,4),'[0-9]',1,4)
		INTO		:i_cnt
		FROM    DUAL;

	if(SQLCODE != 0)
	{
		return -1;
	}

	return i_cnt;
}

int fn_chk_mob_email_unq(char *c_pan_no, char *c_mob_no, char *c_email, int *i_mob_no, int *i_email)
{
	int	i_mob_no1 = 0;
	int	i_email1 = 0;

	if(strcmp(c_mob_no,"*") != 0)
	{
		EXEC SQL
			/*SELECT  COUNT(1) **Ver 1.6**/
			SELECT  COUNT(DISTINCT ICD_SERIAL_NO)	/*Ver 1.6*/
			INTO    :i_mob_no1
			FROM    IAD_INFO_ADDRESS_DTLS,
							ICD_INFO_CLIENT_DTLS,
							UAC_USR_ACCNTS
			WHERE   IAD_MOBILE_10DGT = :c_mob_no
			AND     IAD_SERIAL_NO = ICD_SERIAL_NO
			AND     ICD_USER_ID = UAC_USR_ID(+)
			AND			ICD_PAN_NO <> :c_pan_no				/*Ver 1.6*/
			AND     ICD_INWARD_STATUS <> 'I'
			AND     UAC_ACT_DEACT_FLG <> 'S'
			AND     IAD_ADDRESS_TYPE IN (UPPER('APPLICANT_PMT'), UPPER('APPLICANT_CORR'));

		if(SQLCODE != 0)
		{
			return -1;
		}

		*i_mob_no=i_mob_no1;
	}
	else
	{
		*i_mob_no=0;
	}

	userlog("c_mob_no :%s:",c_mob_no);
	userlog("i_mob_no :%d:",*i_mob_no);

	if(strcmp(c_email,"*") != 0)
	{
		EXEC SQL
			/*SELECT  COUNT(1) **Ver 1.6**/
      SELECT  COUNT(DISTINCT ICD_SERIAL_NO) /*Ver 1.6*/
			INTO    :i_email1
			FROM    IPD_INFO_PERSONAL_DTLS,
							ICD_INFO_CLIENT_DTLS,
							UAC_USR_ACCNTS
			WHERE   IPD_SERIAL_NO = ICD_SERIAL_NO
			AND     ICD_USER_ID = UAC_USR_ID(+)
			AND     ICD_INWARD_STATUS <> 'I'
			AND     UAC_ACT_DEACT_FLG <> 'S'
			AND			ICD_PAN_NO <> :c_pan_no       /*Ver 1.6*/
			AND     IPD_TYPE = 'APPLICANT'
			/******** commented in ver 2.1
			AND			(UPPER(IPD_EMAIL) = UPPER(:c_email)
			OR	 		 UPPER(IPD_EMAIL2)= UPPER(:c_email)); ***** ver 2.1 ****/
			AND     (LOWER(IPD_EMAIL) = LOWER(:c_email)     /*** ver 2.1 ****/
      OR       LOWER(IPD_EMAIL2)= LOWER(:c_email));   /*** ver 2.1 ****/

		if(SQLCODE != 0)
		{
			return -1;
		}
		
		*i_email=i_email1;
	}
	else
	{
		*i_email=0;
	}

	userlog("c_email :%s:",c_email);
	userlog("i_email :%d:",*i_email);

	return 0;
}

/**** Ver 1.8 below function added *****/
int fn_update_stts(char* pan_no,char* msg,char status)
{

	int	i_trnsctn=0;	/*Ver 2.0*/
	char	c_form_no[10+1];	/*Ver 2.0*/

	MEMSET(c_form_no);			/*Ver 2.0*/

  userlog("In funtion fn_update_stts");
  userlog("Updating Status :%c: for PAN :%s:",status,pan_no);

	/***************Added in Ver 2.0**********/
	i_trnsctn=fn_equ_begintran(c_ServiceName,DEF_USR,DEF_SSSN,c_err_msg);
	
	if(i_trnsctn == -1)
	{
		errlog(c_ServiceName,"S31860", TPMSG, DEF_USR, DEF_SSSN, c_err_msg);
    return -1;	
	}
	/***************Added in Ver 2.0**********/

  EXEC SQL
		/*UPDATE	MAR_MBL_ACCOPN_RQST@CONTENT_DB**Ver 2.0**/
    UPDATE MAR_MBL_ACCOPN_RQST             /**Ver 2.0**/
    SET    MAR_STATUS = :status,
           MAR_ACCOPN_MSG = :msg
    WHERE  MAR_PAN_NO = :pan_no
    AND    MAR_STATUS NOT IN ('R','I','M','A')		/**Added 'A' in Ver 2.0**/
		RETURNING	MAR_FORM_NO							/**Ver 2.0**/
		INTO			:c_form_no;							/**Ver 2.0**/

  if(SQLCODE != 0)
  {
    /*EXEC SQL ROLLBACK; **Ver 2.0**/
		fn_equ_aborttran( c_ServiceName, i_trnsctn, c_err_msg );	/**Ver 2.0**/
    errlog(c_ServiceName,"S31865", SQLMSG, DEF_USR, DEF_SSSN, c_err_msg);
    return -1;
  }

	rtrim(c_form_no);			/**Ver 2.0**/
	
	/***************Added in Ver 2.0**********/
	EXEC SQL
		UPDATE	MAS_MBL_APPL_STTS
		SET			MAS_FORM_STTS = 'D'
		WHERE		MAS_FORM_NO = :c_form_no
		AND			MAS_FORM_STTS = 'A';

	if(SQLCODE != 0)
  {
    fn_equ_aborttran( c_ServiceName, i_trnsctn, c_err_msg );  /**Ver 2.0**/
    errlog(c_ServiceName,"S31870", SQLMSG, DEF_USR, DEF_SSSN, c_err_msg);
    return -1;
  }

	if(fn_equ_committran(c_ServiceName,DEF_USR,DEF_SSSN,i_trnsctn,c_err_msg) == -1)
  {
    errlog(c_ServiceName, "S31875",TPMSG , DEF_USR, DEF_SSSN, c_err_msg);
    fn_equ_aborttran( c_ServiceName, i_trnsctn, c_err_msg );
		return -1;
  }
	/***************Added in Ver 2.0**********/

	/*EXEC SQL COMMIT;***Ver 2.0**/

  return 1;
}

/*********************************Added in Ver 2.0 start*******************************/
int	fn_upd_uidai_dtls(FBFR32 **ptr_fml_temp_buffer, char *c_pan_no, char *c_uid_no, char *c_dob,
											char c_kra_status, char *c_err_msg)
{
	int		i_cnter=0;
	int   i = 0; 
	int		i_err[30];
	int   i_ret_cd;			/*** Ver 2.8 ***/
	long	l_img_size=0;
	long	l_buff_length;
	long	l_res_len=0;
	long	l_crd_len=0;							/**Ver 2.2**/
	long  l_recvbuff;               /** ver 3.4 **/
	char  *c_msg_cbuf=NULL;
	char  *c_msg_uidai_res=NULL;
	char  *c_msg_uidai_crd=NULL;		/**Ver 2.2**/
	char	c_uidai_add[500];
	char	c_success_flg = 'N';
	char	c_null_bfr[50];
	char	c_sp_err_msg[512];				/**Ver 2.2**/
	

	INIT(i_err,sizeof(i_err));

  EXEC SQL INCLUDE "table/ikkd_info_kra_kyc_dtls.h";
	EXEC SQL INCLUDE "table/ism_info_state_master.h";
  EXEC SQL INCLUDE "table/mar_mbl_accopn_rqst.h";
	EXEC SQL INCLUDE "table/iurd_info_uidai_rspons_dtls.h";

	userlog("Inside fn_upd_uidai_dtls...");

	i_ret_cd = 0;	/*** Ver 2.8 ***/
	MEMSET(sql_ikkd_name);
	MEMSET(sql_ikkd_kra_dob);
	MEMSET(sql_ikkd_kra_mob);
	MEMSET(sql_ikkd_kra_email);
	MEMSET(sql_ikkd_uid_co_nm);
	MEMSET(sql_ikkd_uid_bldg);
	MEMSET(sql_ikkd_uid_street);
	MEMSET(sql_ikkd_uid_lndmrk);
	MEMSET(sql_ikkd_uid_city);
	MEMSET(sql_ikkd_uid_dist);
	MEMSET(sql_ikkd_uid_state);
	MEMSET(sql_ikkd_uid_cntry);
	MEMSET(sql_ikkd_uid_pincd);
	MEMSET(sql_ism_kra_map_cd);
	MEMSET(sql_ikkd_uid_loc);
	MEMSET(sql_ikkd_uid_subdist);
	MEMSET(sql_ikkd_uid_po);
	MEMSET(sql_ikkd_cor_add1);
	MEMSET(sql_ikkd_cor_add2);
	MEMSET(sql_ikkd_cor_add3);
	MEMSET(c_uidai_add);
	MEMSET(c_null_bfr);

	/**********Ver 2.2 start************/
	MEMSET(sql_iurd_api_nm);
	MEMSET(sql_iurd_aua_cd);
	MEMSET(sql_iurd_sub_aua_cd);
	MEMSET(sql_iurd_rqst_tm);
	/**********Ver 2.2 end************/

	l_buff_length = 600000;
	sql_ikkd_uid_auth_src='O';
  c_msg_cbuf  = (char *)tpalloc("CARRAY", NULL,l_buff_length);

  if(c_msg_cbuf == NULL)
  {
		userlog("Unable to allocate c_msg_cbuf");
    errlog(c_ServiceName, "S31880",TPMSG, DEF_USR, DEF_SSSN, c_err_msg);
		return -1;
  }

  c_msg_uidai_res  = (char *)tpalloc("CARRAY", NULL,l_buff_length);

  if(c_msg_uidai_res == NULL)
  {
		userlog("Unable to c_msg_uidai_res");
    errlog(c_ServiceName, "S31885",TPMSG, DEF_USR, DEF_SSSN, c_err_msg);
		tpfree(c_msg_cbuf);		/*Ver 2.3*/
		return -1;
  }

	c_msg_uidai_crd  = (char *)tpalloc("CARRAY", NULL,l_buff_length);

  if(c_msg_uidai_crd == NULL)
  {
    userlog("Unable to c_msg_uidai_crd");
    errlog(c_ServiceName, "S31890",TPMSG, DEF_USR, DEF_SSSN, c_err_msg);
		tpfree(c_msg_cbuf);   		/*Ver 2.3*/
		tpfree(c_msg_uidai_res);  /*Ver 2.3*/
    return -1;
  }

	i_err[0]=Fget32(*ptr_fml_temp_buffer,FML_USR_USR_NM,0,(char *)sql_ikkd_name.arr,0);
	i_err[1]=Fget32(*ptr_fml_temp_buffer,FML_INSTR_NO,0,(char *)sql_ikkd_kra_dob.arr,0);
	i_err[2]=Fget32(*ptr_fml_temp_buffer,FML_USR_SEX,0,(char *)&sql_ikkd_sex,0);
	i_err[3]=Fget32(*ptr_fml_temp_buffer,FML_TO_ADDR,0,(char *)sql_ikkd_kra_mob.arr,0);
	i_err[4]=Fget32(*ptr_fml_temp_buffer,FML_USR_EMAIL_ADDRSS,0,(char *)sql_ikkd_kra_email.arr,0);
	i_err[5]=Fget32(*ptr_fml_temp_buffer,FML_ISIN,0,(char *)sql_ikkd_uid_co_nm.arr,0);
	i_err[6]=Fget32(*ptr_fml_temp_buffer,FML_ORD_DT,0,(char *)sql_ikkd_uid_bldg.arr,0);
	i_err[7]=Fget32(*ptr_fml_temp_buffer,FML_BK_CD,0,(char *)sql_ikkd_uid_street.arr,0);
	i_err[8]=Fget32(*ptr_fml_temp_buffer,FML_SERIES,0,(char *)sql_ikkd_uid_lndmrk.arr,0);
	i_err[9]=Fget32(*ptr_fml_temp_buffer,FML_USR_ADDRSS_CTY,0,(char *)sql_ikkd_uid_city.arr,0);
	i_err[10]=Fget32(*ptr_fml_temp_buffer,FML_ND_STA,0,(char *)sql_ikkd_uid_dist.arr,0);
	i_err[11]=Fget32(*ptr_fml_temp_buffer,FML_UWL_STCK_LST,0,(char *)sql_ikkd_uid_state.arr,0);
	i_err[12]=Fget32(*ptr_fml_temp_buffer,FML_USR_ADDRSS_CNTRY,0,(char *)sql_ikkd_uid_cntry.arr,0);
	i_err[13]=Fget32(*ptr_fml_temp_buffer,FML_USR_ZIP_CD2,0,(char *)sql_ikkd_uid_pincd.arr,0);
	i_err[14]=Fget32(*ptr_fml_temp_buffer,FML_SBUF,0,(char *)c_msg_cbuf,0);
	i_err[15]=Fget32(*ptr_fml_temp_buffer,FML_VLME,0,(char *)&l_img_size,0);
	i_err[16]=Fget32(*ptr_fml_temp_buffer,FML_EBA_MTCH_ACT_NO,0,(char *)sql_ikkd_uid_loc.arr,0);
	i_err[17]=Fget32(*ptr_fml_temp_buffer,FML_BNK_ACT_NO,0,(char *)sql_ikkd_uid_subdist.arr,0);
	i_err[18]=Fget32(*ptr_fml_temp_buffer,FML_ORD_CLM_MTCH_ACCNT,0,(char *)sql_ikkd_uid_po.arr,0);
	i_err[19]=Fget32(*ptr_fml_temp_buffer,FML_LM_FLG,0,(char *)&sql_ikkd_uid_auth_src,0);
	i_err[19]=Fget32(*ptr_fml_temp_buffer,FML_RBUF,0,(char *)c_msg_uidai_res,0);
	i_err[20]=Fget32(*ptr_fml_temp_buffer,FML_RBUF_LEN,0,(char *)&l_res_len,0);
	i_err[21]=Fget32(*ptr_fml_temp_buffer,FML_RBUF,1,(char *)c_msg_uidai_crd,0);	/*Ver 2.2*/
  i_err[22]=Fget32(*ptr_fml_temp_buffer,FML_RBUF_LEN,1,(char *)&l_crd_len,0);		/*Ver 2.2*/
  i_err[23]=Fget32(*ptr_fml_temp_buffer,FML_MDC_NARRATION,0, (char *)sql_iurd_api_nm.arr,0); /*Ver 2.2*/
  i_err[24]=Fget32(*ptr_fml_temp_buffer,FML_MDC_AMOUNT,0,(char *)sql_iurd_aua_cd.arr,0); /*Ver 2.2*/
  i_err[25]=Fget32(*ptr_fml_temp_buffer,FML_MDC_ISMARGIN,0, (char *)sql_iurd_sub_aua_cd.arr,0); /*Ver 2.2*/
  i_err[26]=Fget32(*ptr_fml_temp_buffer,FML_MDC_CRDT_NMBR,0, (char *)sql_iurd_rqst_tm.arr,0); /*Ver 2.2*/
		
	userlog("In fn_upd_uidai_dtls .....");
	userlog("c_pan_no :%s:",c_pan_no);
	userlog("c_uid_no :%s:",c_uid_no);
  userlog("sql_ikkd_name.arr :%s:",sql_ikkd_name.arr);
  userlog("sql_ikkd_kra_dob.arr :%s:",sql_ikkd_kra_dob.arr);
  userlog("sql_ikkd_sex :%c:",sql_ikkd_sex);
  userlog("sql_ikkd_kra_mob.arr :%s:",sql_ikkd_kra_mob.arr);
  userlog("sql_ikkd_kra_email.arr :%s:",sql_ikkd_kra_email.arr);
  userlog("sql_ikkd_uid_co_nm :%s:",sql_ikkd_uid_co_nm.arr);
  userlog("sql_ikkd_uid_bldg :%s:",sql_ikkd_uid_bldg.arr);
  userlog("sql_ikkd_uid_street :%s:",sql_ikkd_uid_street.arr);
  userlog("sql_ikkd_uid_lndmrk :%s:",sql_ikkd_uid_lndmrk.arr);
  userlog("sql_ikkd_uid_city :%s:",sql_ikkd_uid_city.arr);
  userlog("sql_ikkd_uid_dist :%s:",sql_ikkd_uid_dist.arr);
  userlog("sql_ikkd_uid_state :%s:",sql_ikkd_uid_state.arr);
  userlog("sql_ikkd_uid_cntry :%s:",sql_ikkd_uid_cntry.arr);
  userlog("sql_ikkd_uid_pincd :%s:",sql_ikkd_uid_pincd.arr);
	userlog("l_img_size :%ld:",l_img_size);
	userlog("l_res_len :%ld:",l_res_len);
	userlog("l_crd_len :%ld:",l_crd_len);
	userlog("sql_ikkd_uid_loc :%s:",sql_ikkd_uid_loc.arr);
	userlog("sql_ikkd_uid_subdist :%s:",sql_ikkd_uid_subdist.arr);
	userlog("sql_ikkd_uid_po :%s:",sql_ikkd_uid_po.arr);
	userlog("sql_iurd_api_nm :%s:",sql_iurd_api_nm.arr);
	userlog("sql_iurd_aua_cd :%s:",sql_iurd_aua_cd.arr);
	userlog("sql_iurd_sub_aua_cd :%s:",sql_iurd_sub_aua_cd.arr);
	userlog("sql_iurd_rqst_tm :%s:",sql_iurd_rqst_tm.arr);

	for(i_cnter = 0; i_cnter < 27; i_cnter++)
	{
		if(i_err[i_cnter] == -1)
		{
			if(i_cnter == 19 && Ferror32 == FNOTPRES)
			{
				continue;
			}
			else if(i_cnter == 20 && Ferror32 == FNOTPRES)
			{
				continue;
			}
			else
			{
				userlog("Fget32 failed at :%d:",i_cnter);
      	errlog(c_ServiceName, "S31895", FMLMSG, DEF_USR, DEF_SSSN, c_err_msg);
				tpfree(c_msg_cbuf);
    		tpfree(c_msg_uidai_res);  /*Ver 2.3*/
    		tpfree(c_msg_uidai_crd);  /*Ver 2.3*/
      	return -1;
			}
		}
	}

	userlog("Image Length Before :%ld:",strlen(c_msg_cbuf));
	c_msg_cbuf[l_img_size]='\0';
	userlog("Image Length After :%ld:",strlen(c_msg_cbuf));

	userlog("Image Length Before :%ld:",strlen(c_msg_uidai_res));
	c_msg_uidai_res[l_res_len]='\0';
	userlog("Image Length After :%ld:",strlen(c_msg_uidai_res));

	/*********************Ver 2.2*********************/
	userlog("Image Length Before :%ld:",strlen(c_msg_uidai_crd));
  c_msg_uidai_crd[l_crd_len]='\0';
  userlog("Image Length After :%ld:",strlen(c_msg_uidai_crd));
	/*********************Ver 2.2*********************/
	
	SETLEN(sql_ikkd_name);
	SETLEN(sql_ikkd_kra_dob);
	SETLEN(sql_ikkd_kra_mob);
	SETLEN(sql_ikkd_kra_email);
	SETLEN(sql_ikkd_uid_co_nm);
	SETLEN(sql_ikkd_uid_bldg);
	SETLEN(sql_ikkd_uid_street);
	SETLEN(sql_ikkd_uid_lndmrk);
	SETLEN(sql_ikkd_uid_city);
	SETLEN(sql_ikkd_uid_dist);
	SETLEN(sql_ikkd_uid_state);
	SETLEN(sql_ikkd_uid_cntry);
	SETLEN(sql_ikkd_uid_pincd);
	SETLEN(sql_ikkd_uid_loc);
	SETLEN(sql_ikkd_uid_subdist);
	SETLEN(sql_ikkd_uid_po);

	/**********Ver 2.2 start************/
  SETLEN(sql_iurd_api_nm);
  SETLEN(sql_iurd_aua_cd);
  SETLEN(sql_iurd_sub_aua_cd);
  SETLEN(sql_iurd_rqst_tm);
  /**********Ver 2.2 end************/

	strcpy(c_dob,sql_ikkd_kra_dob.arr); 

	if(c_mbl_acc_opn == 'M')
  {
    MEMSET(sql_ikkd_title);

    EXEC SQL
			UPDATE	MAR_MBL_ACCOPN_RQST
			SET			MAR_DOB = :sql_ikkd_kra_dob
      WHERE   MAR_PAN_NO = :c_pan_no
      AND     MAR_STATUS NOT IN ('R','I','M','A')
			RETURNING MAR_TITLE,
								MAR_GENDER
			INTO			:sql_ikkd_title,
								:sql_mar_gender;

    if(SQLCODE != 0)
    {
      errlog(c_ServiceName, "S31900", SQLMSG, DEF_USR, DEF_SSSN, c_err_msg);
      tpfree(c_msg_cbuf);
			tpfree(c_msg_uidai_res);  /*Ver 2.3*/
      tpfree(c_msg_uidai_crd);  /*Ver 2.3*/
      return -1;
    }

    userlog("sql_ikkd_title :%s:",sql_ikkd_title.arr);
		userlog("sql_mar_gender :%c:",sql_mar_gender);

		if(sql_ikkd_sex != sql_mar_gender)
		{
			errlog(c_ServiceName, "S31905", SQLMSG, DEF_USR, DEF_SSSN, c_err_msg);
			/*strcpy(c_err_msg,"Gender selected by you is not matching with AADHAAR record, Please select correct the Gender");*/
			strcpy(c_err_msg,"Selected details not matching with Aadhar");
      tpfree(c_msg_cbuf);
			tpfree(c_msg_uidai_res);  /*Ver 2.3*/
      tpfree(c_msg_uidai_crd);  /*Ver 2.3*/
      return -1;
		}

		EXEC SQL
    	UPDATE  MAS_MBL_APPL_STTS
    	SET     MAS_AADHAR_STTS='Y'
    	WHERE   MAS_FORM_NO = (SELECT MAR_FORM_NO
                           	FROM   MAR_MBL_ACCOPN_RQST
                           	WHERE  MAR_PAN_NO = :c_pan_no
                           	AND    MAR_STATUS NOT IN ('R','I','M','A'));
	
  	if(SQLCODE != 0)
  	{
    	userlog("Error while updating MAS_MBL_APPL_STTS.");	/*Ver 3.2**Chnage table name from IKKD_INFO_KRA_KYC_DTLS**/
    	errlog(c_ServiceName, "S31910", SQLMSG, DEF_USR, DEF_SSSN, c_err_msg);
    	tpfree(c_msg_cbuf);
			tpfree(c_msg_uidai_res);  /*Ver 2.3*/
      tpfree(c_msg_uidai_crd);  /*Ver 2.3*/
    	return -1;
  	}
  }
 /** commented in ver 3.4 **
	***********  added in ver 3.1      **********
  i_ret_cd = fn_aadhar_vault(c_uid_no,c_pan_no);

    if(i_ret_cd == -1)
    {
      userlog("Error while inserting aadhar in data vault");
      tpfree(c_msg_cbuf);
      tpfree(c_msg_uidai_res);
      tpfree(c_msg_uidai_crd);
      return -1;
    }

    if(i_ret_cd == -2)
    {
      userlog("Aadhar Linked to other Pan");
      tpfree(c_msg_cbuf);
      tpfree(c_msg_uidai_res);
      tpfree(c_msg_uidai_crd);
      strcpy(c_err_msg,"Aadhar Linked to other Pan");
      return -1;
    }
    *********** added in ver 3.1   ***********
 ** commented in ver 3.4 ***/
	/** ver 3.4 **/
	//calling aadhar vault service to store aadhaar response
  char c_set = 'A';

  i_err[0] = Fadd32(*ptr_fml_temp_buffer, FML_MSG_TYP, (char *)&c_set, 0);
  i_err[1] = Fadd32(*ptr_fml_temp_buffer, FML_USR_ADDRSS_LN3, (char *)v_aadhar_ref.arr, 0);
  i_err[2] = Fadd32(*ptr_fml_temp_buffer, FML_MDC_OPPACCCODE, (char *)c_uid_no, 0);
  i_err[3] = Fadd32(*ptr_fml_temp_buffer, FML_PARAM_CC, (char *)c_pan_no, 0);

  for(i=0; i<4; i++)
  {
    if(i_err[i] == -1)
    {
      userlog("Error in Fadd :%d:",i);
      errlog(c_ServiceName, "S31945", FMLMSG, DEF_USR, DEF_SSSN, c_err_msg);
      return -1;
    }
  }

  /** added in ver 3.4 **/
  userlog("calling svc_aadhar_volt for storing responce of aaadhar");

  if ( tpcall("SVC_AADHAR_VOLT", (char *)*ptr_fml_temp_buffer, 0, (char **)ptr_fml_temp_buffer, &l_recvbuff, TPNOTRAN) == -1 )
  {
    if ( tperrno != TPESVCFAIL )
    {
      errlog ( c_ServiceName, "S31950", TPMSG, DEF_USR , DEF_SSSN, c_err_msg );
    }
    else
    {
      Fget32 ( *ptr_fml_temp_buffer, FML_ERR_MSG, 0, c_err_msg, 0 );
    }

    return -1;
  }

  if (Fget32(*ptr_fml_temp_buffer, FML_TM, 0, (char *)v_aadhar_ref.arr,0) == -1)
  {
    errlog(c_ServiceName, "S31955", FMLMSG, (char *)DEF_USR, DEF_SSSN, c_err_msg);
    return -1;
  }
	
	SETLEN(v_aadhar_ref);
	SETNULL(v_aadhar_ref);
  /** ver 3.4 **/



	/****** Below update is in case if bio meteric call , since in that case 
					we don't call service with 'D' Flag *************/
	if(sql_ikkd_uid_auth_src == 'I')
	{
		/** commented in ver 3.1 **
		************* Ver 2.8 calling service to insert aadhar in vault for IRIS Call ****
		i_ret_cd = fn_aadhar_vault(c_uid_no,c_pan_no);

    if(i_ret_cd == -1)
    {
			userlog("Error while inserting aadhar in data vault");
			tpfree(c_msg_cbuf);
      tpfree(c_msg_uidai_res);  
      tpfree(c_msg_uidai_crd); 
      return -1;
		}

		if(i_ret_cd == -2)
		{
			userlog("Aadhar Linked to other Pan");
			tpfree(c_msg_cbuf);
      tpfree(c_msg_uidai_res);  
      tpfree(c_msg_uidai_crd);  
      strcpy(c_err_msg,"Aadhar Linked to other Pan");
			return -1;
		}

		************ Ver 2.8 ended ************
    ******** ver 3.1 ended *****/
		userlog("Call from Bio-meteric(IRIS) device");

		EXEC SQL
    	UPDATE  IKKD_INFO_KRA_KYC_DTLS
      SET     /** commented in ver 3.4 IKKD_UID_NO = DECODE(SUBSTR(:c_uid_no,1,1),'N',NULL,:c_uid_no), **/
              /*IKKD_SRC_TYPE = DECODE(SUBSTR(:c_uid_no,1,1),'N','P','A'),   *A:Adhaar***Ver 2.2**/
              IKKD_UID_SUB_DT = DECODE(IKKD_UID_SUB_DT,NULL,SYSDATE,IKKD_UID_SUB_DT),
              IKKD_AADHAR_STATUS = 'N',
              IKKD_MOD_DT = SYSDATE,
							IKKD_UID_REF_NO = :v_aadhar_ref,  /*** Ver 2.8 ***/
							IKKD_AADHAR_CONSENT_FLG = 'Y',		/*Ver 3.2*/
							IKKD_MODIFY_BY = 'SVC_INSTA_ACC'  /*Ver 3.2*/
      WHERE   IKKD_PAN_NO = :c_pan_no
      AND     IKKD_KRA_ACTDEACT = 'A';

		if(SQLCODE != 0)
    {
    	errlog(c_ServiceName, "S31915", SQLMSG, DEF_USR, DEF_SSSN, c_err_msg);
			tpfree(c_msg_cbuf);
			tpfree(c_msg_uidai_res);  /*Ver 2.3*/
      tpfree(c_msg_uidai_crd);  /*Ver 2.3*/
      return -1;
    }
	}

	/****************************Commented in Ver 2.2 start****************************
	if(c_kra_status == 'N')
	{
		userlog("PAN is not KRA Verified");

		sprintf(c_uidai_add,"co~^dist~%s^house~%s^lm~%s^loc~%s^pc~%s^po~^state~%s^street~%s^subdist~^vtc~%s^vtcCode~ ",sql_ikkd_uid_dist.arr,sql_ikkd_uid_bldg.arr,sql_ikkd_uid_lndmrk.arr,sql_ikkd_uid_loc.arr,sql_ikkd_uid_pincd.arr,sql_ikkd_uid_state.arr,sql_ikkd_uid_street.arr,sql_ikkd_uid_city.arr);
	
		rtrim(c_uidai_add);

		userlog("c_uidai_add :%s:",c_uidai_add);

		char c_err_msg[512];
		MEMSET(c_err_msg);

		userlog("Calling SP_GET_ADDRESS_FORMATTED_EBA....");
		EXEC SQL
			EXECUTE
				BEGIN
				SP_GET_ADDRESS_FORMATTED_EBA(:c_pan_no,
																'UIDAI_TO_KRA',
																:c_uidai_add,
																'SVC_INSTA_ACC',
																:sql_ikkd_uid_city,
																:sql_ikkd_uid_state,
																'IND',
																:c_success_flg,
																*:c_err_msg, **Ver 2.2**
																:c_sp_err_msg,	**Ver 2.2**
																:sql_ikkd_cor_add1,
																:sql_ikkd_cor_add2,
																:sql_ikkd_cor_add3,
																:c_null_bfr,
																:c_null_bfr,
																:c_null_bfr);	
				END;
			END-EXEC;
	
		if(SQLCODE != 0 && SQLCODE != NULL_RETURN)
		{
			userlog("Error while executing SP_GET_ADDRESS_FORMATTED");
    	errlog(c_ServiceName, "S31920", SQLMSG, DEF_USR, DEF_SSSN, c_err_msg);
    	tpfree(c_msg_cbuf);
    	return -1;
		}

		userlog("c_success_flg :%c:",c_success_flg);

		if(c_success_flg != 'Y')
		{
			if(c_success_flg == 'F')
			{
				errlog(c_ServiceName, "S31925", SQLMSG, DEF_USR, DEF_SSSN, c_err_msg);
				strcpy(c_err_msg,c_sp_err_msg);
			}
	
    	tpfree(c_msg_cbuf);
    	return -1;
		}
																 
	EXEC SQL
		SELECT	ISM_KRA_MAP_CD
		INTO		:sql_ism_kra_map_cd
		FROM		ISM_INFO_STATE_MASTER
		WHERE		UPPER(ISM_UIDAI_MAP_CD) = UPPER(:sql_ikkd_uid_state)
		AND			ISM_ACTIVE_FLAG = 'Y';

	if(SQLCODE != 0)
	{
		userlog("Error while selecting state");
   	errlog(c_ServiceName, "S31930", SQLMSG, DEF_USR, DEF_SSSN, c_err_msg);
   	tpfree(c_msg_cbuf);
		userlog("c_err_msg :%s:",c_err_msg);
   	return -1;
	}
	
	userlog("sql_ism_kra_map_cd :%s:",sql_ism_kra_map_cd.arr);
	*****************Commented in Ver 2.2 end*****************/
	userlog("*************v_aadhar_ref:%s:********", v_aadhar_ref.arr);
	
	EXEC SQL
 		UPDATE  IKKD_INFO_KRA_KYC_DTLS
 		SET     /*IKKD_NAME = :sql_ikkd_name,****Ver 2.2**/
         		IKKD_KRA_DOB  = :sql_ikkd_kra_dob,
						IKKD_USER_DOB = :sql_ikkd_kra_dob,
         		IKKD_SEX  = :sql_ikkd_sex,
						/****************Commented in Ver 2.2 start****************
         		IKKD_KRA_MOB  = TRIM(:sql_ikkd_kra_mob),
         		IKKD_KRA_EMAIL  = TRIM(:sql_ikkd_kra_email),
						IKKD_COR_ADD1 = :sql_ikkd_cor_add1,
           	IKKD_COR_ADD2 = :sql_ikkd_cor_add2,
           	IKKD_COR_ADD3 = :sql_ikkd_cor_add3,
						IKKD_COR_STATE  = :sql_ism_kra_map_cd,
						IKKD_COR_CTRY		= '101',   *India*
						IKKD_COR_CITY	  = UPPER(:sql_ikkd_uid_city),
						IKKD_COR_PINCD  = :sql_ikkd_uid_pincd,
						IKKD_PER_ADD1 = :sql_ikkd_cor_add1,
						IKKD_PER_ADD2 = :sql_ikkd_cor_add2,
						IKKD_PER_ADD3 = :sql_ikkd_cor_add3,
						IKKD_PER_STATE  = :sql_ism_kra_map_cd,
						IKKD_PER_CTRY   = '101',   *India*
						IKKD_PER_CITY   = UPPER(:sql_ikkd_uid_city),
           	IKKD_PER_PINCD  = :sql_ikkd_uid_pincd,
						*****************Commented in Ver 2.2 end****************/
         		IKKD_UID_CO_NM  = :sql_ikkd_uid_co_nm,
         		IKKD_UID_BLDG = :sql_ikkd_uid_bldg,
         		IKKD_UID_STREET = :sql_ikkd_uid_street,
         		IKKD_UID_LNDMRK = :sql_ikkd_uid_lndmrk,
         		IKKD_UID_CITY = :sql_ikkd_uid_city,
         		IKKD_UID_DIST = :sql_ikkd_uid_dist,
         		IKKD_UID_STATE  = :sql_ikkd_uid_state,
         		IKKD_UID_CNTRY  = 'INDIA',								/*sql_ikkd_uid_cntry,**Hardcoded India**Ver 2.2**/
         		IKKD_UID_PINCD  = :sql_ikkd_uid_pincd,
						IKKD_UID_PO			= :sql_ikkd_uid_po,
						IKKD_UID_SUBDIST= :sql_ikkd_uid_subdist,
						IKKD_UID_LOC		= :sql_ikkd_uid_loc,
						IKKD_UID_IMG		= :c_msg_cbuf,
						IKKD_UID_CRD_PDF= :c_msg_uidai_crd,									/**Ver 2.2**/
						IKKD_OTP_STATUS	= 'Y',
						IKKD_MOD_OTP_DT	= SYSDATE,
						IKKD_MOD_DT		 = SYSDATE,
						/*IKKD_TITLE = DECODE(:c_mbl_acc_opn,'M',:sql_ikkd_title,NULL), test **/
						IKKD_AADHAR_STATUS = 'Y',
						IKKD_UID_NM = :sql_ikkd_name,
						IKKD_UID_AUTH_SRC = :sql_ikkd_uid_auth_src,
						IKKD_KRA_MOB  = TRIM(:sql_ikkd_kra_mob),					/**Ver 2.2**/
            IKKD_KRA_EMAIL  = TRIM(:sql_ikkd_kra_email),			/**Ver 2.2**/
            IKKD_CHNGD_MOBILE_NO  = TRIM(:sql_ikkd_kra_mob),	/**Ver 2.2**/
            IKKD_CHNGD_EMAIL_ID  = TRIM(:sql_ikkd_kra_email),	/**Ver 2.2**/
						IKKD_RES_STATUS = 'R',														/**Ver 2.2**/
						IKKD_MODIFY_BY = 'SVC_INSTA_ACC',  /*Ver 3.2*/
					  IKKD_UID_REF_NO  = :v_aadhar_ref,  /** ver 3.4 **/
						IKKD_AADHAR_LAST_4DGT = substr(:c_uid_no, 9, 12) /** ver 3.4 **/
 		WHERE   IKKD_PAN_NO = :c_pan_no
 		AND     IKKD_KRA_ACTDEACT = 'A';
 		/** commented in ver 3.4 AND     IKKD_UID_NO = :c_uid_no; **/
 		/*AND     IKKD_SRC_TYPE = 'A';**Ver 2.2*/
	userlog("*************v_aadhar_ref:%s:********", v_aadhar_ref.arr);

	/***************Commented in Ver 2.2 start***************
	}
	else
	{
		userlog("PAN is KRA Verified");

		EXEC SQL
			UPDATE  IKKD_INFO_KRA_KYC_DTLS
      SET     IKKD_UID_NM = :sql_ikkd_name,
              IKKD_UID_CO_NM  = :sql_ikkd_uid_co_nm,
              IKKD_UID_BLDG = :sql_ikkd_uid_bldg,
              IKKD_UID_STREET = :sql_ikkd_uid_street,
              IKKD_UID_LNDMRK = :sql_ikkd_uid_lndmrk,
              IKKD_UID_CITY = :sql_ikkd_uid_city,
              IKKD_UID_DIST = :sql_ikkd_uid_dist,
              IKKD_UID_STATE  = :sql_ikkd_uid_state,
              IKKD_UID_CNTRY  = :sql_ikkd_uid_cntry,
              IKKD_UID_PINCD  = :sql_ikkd_uid_pincd,
              IKKD_UID_PO     = :sql_ikkd_uid_po,
              IKKD_UID_SUBDIST= :sql_ikkd_uid_subdist,
              IKKD_UID_LOC    = :sql_ikkd_uid_loc,
              IKKD_UID_IMG    = :c_msg_cbuf,
              IKKD_OTP_STATUS = 'Y',
              IKKD_MOD_OTP_DT = SYSDATE,
              IKKD_MOD_DT    = SYSDATE,
              IKKD_TITLE = DECODE(:c_mbl_acc_opn,'M',:sql_ikkd_title,NULL),
              IKKD_AADHAR_STATUS = 'Y',
              IKKD_SRC_TYPE = 'P',
              IKKD_UID_AUTH_SRC = :sql_ikkd_uid_auth_src
      WHERE   IKKD_PAN_NO = :c_pan_no
      AND     IKKD_KRA_ACTDEACT = 'A'
      AND     IKKD_UID_NO = :c_uid_no
      AND     IKKD_SRC_TYPE = 'A';
	}
	********************Commented in Ver 2.2 end*************************/
	
	if(SQLCODE != 0)
	{
		userlog("Error while updating IKKD_INFO_KRA_KYC_DTLS.");
		errlog(c_ServiceName, "S31935", SQLMSG, DEF_USR, DEF_SSSN, c_err_msg);
		tpfree(c_msg_cbuf);
		tpfree(c_msg_uidai_res);  /*Ver 2.3*/
    tpfree(c_msg_uidai_crd);  /*Ver 2.3*/
		return -1;
	}

	EXEC SQL
		INSERT	INTO	IUR_INFO_UIDAI_RQST (
  /**   IUR_UID_NO, *** ver 3.1 **/
			IUR_UID_RQST_DT,
			IUR_UID_NM,
			IUR_UID_DOB,
			IUR_UID_SEX,
			IUR_UID_MOB_NO,
			IUR_UID_EMAIL,
			IUR_UID_CO_NM,
			IUR_UID_BLDG,
			IUR_UID_STREET,
			IUR_UID_LNDMRK,
			IUR_UID_LOC,
			IUR_UID_CITY,
			IUR_UID_DIST,
			IUR_UID_SUBDIST,
			IUR_UID_STATE,
			IUR_UID_CNTRY,
			IUR_UID_PINCD,
			IUR_UID_PO,
			IUR_SRC_TYP,
			IUR_UID_AUTH_SRC,
      IUR_AADHAR_KEY ) /** added in ver 3.1 ***/
		VALUES (
  /** :c_uid_no,  **** commented in  ver 3.1 **/
			SYSDATE,
			:sql_ikkd_name,
			:sql_ikkd_kra_dob,
			:sql_ikkd_sex,
			:sql_ikkd_kra_mob,
			:sql_ikkd_kra_email,
			:sql_ikkd_uid_co_nm,
			:sql_ikkd_uid_bldg,
			:sql_ikkd_uid_street,
			:sql_ikkd_uid_lndmrk,
			:sql_ikkd_uid_loc,
			:sql_ikkd_uid_city,
			:sql_ikkd_uid_dist,
			:sql_ikkd_uid_subdist,
			:sql_ikkd_uid_state,
			:sql_ikkd_uid_cntry,
			:sql_ikkd_uid_pincd,
			:sql_ikkd_uid_po,
			:c_mbl_acc_opn,
			:sql_ikkd_uid_auth_src,
      :v_aadhar_ref ); /** added in ver 3.1 **/

	if(SQLCODE != 0)
  {
    userlog("Error while inserting in IUR_INFO_UIDAI_RQST.");
    errlog(c_ServiceName, "S31940", SQLMSG, DEF_USR, DEF_SSSN, c_err_msg);
    tpfree(c_msg_cbuf);
		tpfree(c_msg_uidai_res);  /*Ver 2.3*/
    tpfree(c_msg_uidai_crd);  /*Ver 2.3*/
    return -1;
  }

	/** commented in ver 3.4 **
	EXEC SQL
		INSERT INTO IURD_INFO_UIDAI_RSPONS_DTLS
			(** IURD_UID_NO, *** commented in ver 3.1 ***	
				IURD_INS_DT,
				IURD_SRC_TYP,
				IURD_RESPONSE,
				IURD_API_NM,
				IURD_AUA_CD,
				IURD_SUB_AUA_CD,
				IURD_RQST_TM,
        IURD_AADHAR_KEY) ** added in ver 3.1 **
		VALUES(
        ** :c_uid_no, *** commented in ver 3.1 ***
				SYSDATE,
				:c_mbl_acc_opn,
				:c_msg_uidai_res,
				:sql_iurd_api_nm,
				:sql_iurd_aua_cd,
				:sql_iurd_sub_aua_cd,
				TO_DATE(:sql_iurd_rqst_tm, 'DD-Mon-YYYY HH24:MI:SS'),
        :v_aadhar_ref); ***  added in ver 3.1 ***

	if(SQLCODE != 0)
  {
    userlog("Error while inserting in IUR_INFO_UIDAI_RQST.");
    errlog(c_ServiceName, "S31960", SQLMSG, DEF_USR, DEF_SSSN, c_err_msg);
    tpfree(c_msg_cbuf);
		tpfree(c_msg_uidai_res);  *Ver 2.3*
    tpfree(c_msg_uidai_crd);  *Ver 2.3*
    return -1;
  }
	** commented in ver 3.4 **/
	tpfree(c_msg_cbuf);
	tpfree(c_msg_uidai_res);
  tpfree(c_msg_uidai_crd);  /*Ver 2.3*/
	
	userlog("fn_upd_uidai_dtls completed....");
	return 0;
}

/** commented in ver 3.4 int fn_upd_kra_upld_dtls(FBFR32 **ptr_fml_temp_buffer, char *c_pan_no, char *c_uid_no, 
												char *c_ipv_nm, char *c_ipv_desgn, char *c_err_msg) **/

int fn_upd_kra_upld_dtls(FBFR32 **ptr_fml_temp_buffer, char *c_pan_no, char *aadhar_key,
                        char *c_ipv_nm, char *c_ipv_desgn, char *c_err_msg)
{
	int		i_err[100];
	int		i_ferr[100];
	int		i_loop=0;
	int		i_kyc_mode=1;		/*e-KYC OTP*/
/** test userlog**/
	userlog("aadhar_key :%s:", aadhar_key);


	char	c_pep_flg='\0';
	char	c_off_isd[10+1];
	char	c_off_std[10+1];
	char	c_res_isd[10+1];
	char	c_res_std[10+1];
	char	c_mob_isd[10+1];
	char	c_fax_isd[10+1];
	char	c_fax_std[10+1];
	char	c_curr_dt[10+1];
	char	c_uidai_add[500+1];			/*Ver 2.2*/
	char	c_sp_err_msg[512+1];		/*Ver 2.2*/
	char  c_null_bfr[200];					/*Ver 2.2*/
	char	c_success_flg;					/*Ver 2.2*/

	EXEC SQL INCLUDE "table/ikkd_info_kra_kyc_dtls.h";
	EXEC SQL INCLUDE "table/imm_info_mapping_masters.h";
	EXEC SQL INCLUDE "table/hee_hr_emp_extrct.h";

	INIT(i_err,sizeof(i_err));
	INIT(i_ferr,sizeof(i_ferr));

	MEMSET(sql_ikkd_f_name);
	MEMSET(sql_ikkd_nationality);
	MEMSET(sql_ikkd_oth_nationality);
	MEMSET(sql_ikkd_mar_status);
	MEMSET(sql_ikkd_income_kra);
	MEMSET(sql_ikkd_occ_kra);
	MEMSET(sql_ikkd_oth_occ);
	MEMSET(sql_ikkd_pep_remark);
	MEMSET(sql_ikkd_income);
	MEMSET(sql_ikkd_occ);
	MEMSET(c_curr_dt);
	MEMSET(sql_imm_desc);
	MEMSET(sql_ikkd_oth_occ);
	MEMSET(sql_ikkd_ipv_nm);
	MEMSET(sql_ikkd_ipv_desg);
	MEMSET(sql_ikkd_app_maiden_title);			/*Ver 2.2*/
	MEMSET(sql_ikkd_app_maiden_nm);					/*Ver 2.2*/
	MEMSET(sql_ikkd_app_mother_title);			/*Ver 2.2*/
	MEMSET(sql_ikkd_app_mother_nm);					/*Ver 2.2*/
	MEMSET(sql_ikkd_address_sub_type);			/*Ver 2.2*/
	MEMSET(c_uidai_add);										/*Ver 2.2*/
	
	userlog("In fn_upd_kra_upld_dtls....");
	
	i_err[0]=Fget32(*ptr_fml_temp_buffer,FML_USR_USR_NM,0,(char *)sql_ikkd_f_name.arr, 0); 
	i_ferr[0]=Ferror32;
	i_err[1]=Fget32(*ptr_fml_temp_buffer,FML_CLIENT_TITLE,0,(char *)sql_ikkd_nationality.arr, 0); 
	i_ferr[1]=Ferror32;
	i_err[2]=Fget32(*ptr_fml_temp_buffer,FML_SEM_MAP_VL,0,(char *)sql_ikkd_oth_nationality.arr, 0);
	i_ferr[2]=Ferror32;
	i_err[3]=Fget32(*ptr_fml_temp_buffer,FML_CHART_TYPE,0,(char *)sql_ikkd_mar_status.arr, 0); 
	i_ferr[3]=Ferror32;
	i_err[4]=Fget32(*ptr_fml_temp_buffer,FML_ISIN,0,(char *)sql_ikkd_income_kra.arr, 0); 
	i_ferr[4]=Ferror32;
	i_err[5]=Fget32(*ptr_fml_temp_buffer,FML_SERIES,0,(char *)sql_ikkd_occ_kra.arr, 0); 
	i_ferr[5]=Ferror32;
	i_err[6]=Fget32(*ptr_fml_temp_buffer,FML_DEALER_CD,0,(char *)sql_ikkd_oth_occ.arr, 0); 
	i_ferr[6]=Ferror32;
	i_err[7]=Fget32(*ptr_fml_temp_buffer,FML_GAME_REG_FLG,0,(char *)&c_pep_flg, 0); 
	i_ferr[7]=Ferror32;
	i_err[8]=Fget32(*ptr_fml_temp_buffer,FML_CDM_CD_DSCRPTN,0,(char *)sql_ikkd_pep_remark.arr, 0); 
	i_ferr[8]=Ferror32;
	i_err[9]=Fget32(*ptr_fml_temp_buffer,FML_UPL_PRTFLO_NM,0,(char *)sql_ikkd_income.arr, 0); 
	i_ferr[9]=Ferror32;
	i_err[10]=Fget32(*ptr_fml_temp_buffer,FML_USR_ADDRSS_CTY,0,(char *)sql_ikkd_occ.arr, 0); 
	i_ferr[10]=Ferror32;
	i_err[11]=Fget32(*ptr_fml_temp_buffer,FML_PARAM_DESC,0,(char *)sql_imm_desc.arr, 0);
  i_ferr[11]=Ferror32;

	/*************Ver 2.2 start*************/
	i_err[12]=Fget32(*ptr_fml_temp_buffer,FML_MDC_DOCDATE,0,(char *)sql_ikkd_app_maiden_title.arr, 0);
  i_ferr[12]=Ferror32;
	i_err[13]=Fget32(*ptr_fml_temp_buffer,FML_OLD_ISIN,0,(char *)sql_ikkd_app_maiden_nm.arr, 0);
  i_ferr[13]=Ferror32;
	i_err[14]=Fget32(*ptr_fml_temp_buffer,FML_DOCTYPE,0,(char *)sql_ikkd_app_mother_title.arr, 0);
  i_ferr[14]=Ferror32;
  i_err[15]=Fget32(*ptr_fml_temp_buffer,FML_MDC_ISMARGIN,0,(char *)sql_ikkd_app_mother_nm.arr, 0);
  i_ferr[15]=Ferror32;
  i_err[16]=Fget32(*ptr_fml_temp_buffer,FML_STR_BRK,0,(char *)sql_ikkd_address_sub_type.arr, 0);
  i_ferr[16]=Ferror32;
	/*************Ver 2.2 end*************/
	/*************Ver 3.0 ****************/
  i_err[17]=Fget32(*ptr_fml_temp_buffer,FML_BD_STATUS,0,(char *)vc_cersai_no.arr, 0);
  i_ferr[17]=Ferror32;
  /*************Ver 3.0 end ************/


	if(DEBUG_MSG_LVL_3)
	{
		userlog("sql_ikkd_f_name.arr :%s:",sql_ikkd_f_name.arr);
		userlog("sql_ikkd_nationality.arr [01:Indian 02:Others]:%s:",sql_ikkd_nationality.arr);
		userlog("sql_ikkd_oth_nationality.arr :%s:",sql_ikkd_oth_nationality.arr);
		userlog("sql_ikkd_mar_status.arr [01:Married 02:Single] :%s:",sql_ikkd_mar_status.arr);
		userlog("sql_ikkd_income_kra.arr [IMM KRA Map code] :%s:",sql_ikkd_income_kra.arr);
		userlog("sql_ikkd_occ_kra.arr [IMM KRA Map code] :%s:",sql_ikkd_occ_kra.arr);
		userlog("sql_ikkd_oth_occ.arr :%s:",sql_ikkd_oth_occ.arr);
		userlog("c_pep_flg :%c:",c_pep_flg);
		userlog("sql_ikkd_pep_remark.arr :%s:",sql_ikkd_pep_remark.arr);
		userlog("sql_ikkd_income :%s:",sql_ikkd_income.arr);
		userlog("sql_ikkd_occ :%s:",sql_ikkd_occ.arr);
		userlog("c_ipv_nm :%s:",c_ipv_nm);
		userlog("c_ipv_desgn :%s:",c_ipv_desgn);
		userlog("sql_imm_desc :%s:",sql_imm_desc.arr);
		userlog("sql_ikkd_app_maiden_title :%s:",sql_ikkd_app_maiden_title.arr);
		userlog("sql_ikkd_app_maiden_nm :%s:",sql_ikkd_app_maiden_nm.arr);
		userlog("sql_ikkd_app_mother_title :%s:",sql_ikkd_app_mother_title.arr);
		userlog("sql_ikkd_app_mother_nm :%s:",sql_ikkd_app_mother_nm.arr);
		userlog("sql_ikkd_address_sub_type :%s:",sql_ikkd_address_sub_type.arr);
		userlog("vc_cersai_no.arr :%s:",vc_cersai_no.arr);  /*** Ver 3.0 ***/
	}

	for(i_loop=0;i_loop<18;i_loop++) /*** Ver 3.0 changed from 16 to 18 ***/ 
	{
		if(i_err[i_loop] == -1)
		{
			/************ Ver 3.0 fnotpres handled for 17 ************/
			if((i_loop == 2 || i_loop == 6 || i_loop == 8 || i_loop == 17) && i_ferr[i_loop] == FNOTPRES)
			{
				continue;
			}

			userlog("Error in Fadd :%d:",i_loop);

			errlog(c_ServiceName, "S31965", Fstrerror32(i_ferr[i_loop]), DEF_USR, DEF_SSSN, c_err_msg);
			return -1;
		}
	}

	SETLEN(sql_ikkd_f_name);
	SETLEN(sql_ikkd_nationality);
	SETLEN(sql_ikkd_oth_nationality);
	SETLEN(sql_ikkd_income_kra);
	SETLEN(sql_ikkd_occ_kra);
	SETLEN(sql_ikkd_mar_status);
	SETLEN(sql_ikkd_pep_remark);
	SETLEN(sql_ikkd_income);
	SETLEN(sql_ikkd_occ);
	SETLEN(sql_ikkd_oth_occ);
	SETLEN(sql_ikkd_app_maiden_title);			/*Ver 2.2*/
	SETLEN(sql_ikkd_app_maiden_nm);					/*Ver 2.2*/
	SETLEN(sql_ikkd_app_mother_title);			/*Ver 2.2*/
	SETLEN(sql_ikkd_app_mother_nm);					/*Ver 2.2*/
	SETLEN(sql_ikkd_address_sub_type);			/*Ver 2.2*/
	SETLEN(vc_cersai_no);     							/*Ver 3.0*/

	strcpy(sql_ikkd_oth_occ.arr,sql_imm_desc.arr);
	SETLEN(sql_ikkd_oth_occ);

	/********************Added in Ver 2.2 start********************/
 	if(strcmp(sql_ikkd_mar_status.arr,"02") == 0 && strlen(sql_ikkd_app_maiden_nm.arr) != 0)
	{
		errlog(c_ServiceName, "S31970", SQLMSG, DEF_USR, DEF_SSSN, c_err_msg);
		strcpy(c_err_msg,"Maiden Name should be blank");
    return -1;
	}

	if(sql_ikkd_sex == 'F' && strcmp(sql_ikkd_mar_status.arr,"01") == 0 &&
                              strlen(sql_ikkd_app_maiden_nm.arr) == 0)
  {
		errlog(c_ServiceName, "S31975", SQLMSG, DEF_USR, DEF_SSSN, c_err_msg);
		strcpy(c_err_msg,"Please enter valid Maiden name");
    return -1;
	}

	if(strlen(sql_ikkd_app_mother_nm.arr) == 0)
	{
		MEMSET(sql_ikkd_app_mother_title);
	}
	
	if(strlen(sql_ikkd_app_maiden_nm.arr) == 0)
	{
		MEMSET(sql_ikkd_app_maiden_title);
	}
	/********************Added in Ver 2.2 end********************/

	userlog("aadhar_key:%s:", aadhar_key);
	EXEC SQL
		UPDATE	IKKD_INFO_KRA_KYC_DTLS
		/***********************Commented in Ver 2.2 start***********************
		SET			IKKD_UPDTFLG = '01',
						IKKD_TYPE = 'I',
						IKKD_DATE = SYSDATE,
						IKKD_PAN_CPY = 'N',			*DECODE(:c_mbl_acc_opn,'M','E','N'),*
						IKKD_EXMT = 'N',
						IKKD_EXMT_ID_PRF = '02',  *Aadhaar card*
						IKKD_IPV_FLG = DECODE(:c_mbl_acc_opn,'M','Y','E'),
						IKKD_IPV_DT = DECODE(:c_mbl_acc_opn,'M',SYSDATE,TO_DATE('01/01/1900','DD/MM/YYYY')),
						IKKD_F_NAME = :sql_ikkd_f_name,
						IKKD_NATIONALITY = :sql_ikkd_nationality,
						IKKD_OTH_NATIONALITY = :sql_ikkd_oth_nationality,
						IKKD_RES_STATUS = 'R',
						IKKD_COR_ADD_PRF = '31',		*Aadhaar card*
						IKKD_PER_ADD_PRF = '31',
						IKKD_PER_ADD_FLG = 'N',
						IKKD_INCOME_KRA = :sql_ikkd_income_kra,
						IKKD_INCOME = :sql_ikkd_income,
						IKKD_OCC_KRA = :sql_ikkd_occ_kra,
						IKKD_OCC = :sql_ikkd_occ,
						IKKD_OTH_OCC = :sql_ikkd_oth_occ,
						IKKD_POL_CONN = DECODE(:c_pep_flg,'Y','PEP','NA'),
						IKKD_PEP_REMARK = DECODE(:c_pep_flg,'Y',:sql_ikkd_pep_remark,NULL),
						IKKD_DOC_PRF = 'E',		*IKKD_DOC_PRF = DECODE(:c_mbl_acc_opn,'M','S','E'),*
						IKKD_MAR_STATUS = :sql_ikkd_mar_status,
						IKKD_IPV_NM	= DECODE(:c_mbl_acc_opn,'M',:c_ipv_nm,NULL),
						IKKD_IPV_DESG = DECODE(:c_mbl_acc_opn,'M',:c_ipv_desgn,NULL),
						IKKD_IPV_ORGN = 'ICICISecurities',
						IKKD_KYC_MODE = DECODE(IKKD_UID_AUTH_SRC,'O',1,2),
		***********************Commented in Ver 2.2 start***********************/

		SET			IKKD_POL_CONN = DECODE(:c_pep_flg,'Y','PEP','NA'),	/*Ver 2.2*/
    				IKKD_PEP_REMARK = DECODE(:c_pep_flg,'Y',:sql_ikkd_pep_remark,NULL),	/*Ver 2.2*/
    				IKKD_OCC_KRA = :sql_ikkd_occ_kra,				/*Ver 2.2*/
    				IKKD_OCC = :sql_ikkd_occ,								/*Ver 2.2*/
    				IKKD_OTH_OCC = :sql_ikkd_oth_occ,				/*Ver 2.2*/
    				IKKD_INCOME_KRA = :sql_ikkd_income_kra,	/*Ver 2.2*/
    				IKKD_INCOME = :sql_ikkd_income,					/*Ver 2.2*/
						IKKD_KRA_STP = 'N',   /*Pending*/
						IKKD_APP_MAIDEN_TITLE = :sql_ikkd_app_maiden_title,		/*Ver 2.2*/
						IKKD_APP_MAIDEN_NM = :sql_ikkd_app_maiden_nm,					/*Ver 2.2*/
						IKKD_APP_MOTHER_TITLE = :sql_ikkd_app_mother_title, 	/*Ver 2.2*/
						IKKD_APP_MOTHER_NM = :sql_ikkd_app_mother_nm,					/*Ver 2.2*/
						IKKD_ADDRESS_SUB_TYPE = :sql_ikkd_address_sub_type,		/*Ver 2.2*/
						IKKD_RES_STATUS = 'R',																	/*Ver 2.2*/
						IKKD_MAR_STATUS = :sql_ikkd_mar_status,									/*Ver 2.2*/
						IKKD_F_NAME = :sql_ikkd_f_name,													/*Ver 2.2*/
            IKKD_NATIONALITY = :sql_ikkd_nationality,								/*Ver 2.2*/
            IKKD_OTH_NATIONALITY = :sql_ikkd_oth_nationality,				/*Ver 2.2*/
						IKKD_CERSAI_NO = DECODE(:c_mbl_acc_opn,'M',IKKD_CERSAI_NO,:vc_cersai_no),        /*Ver 3.0*/
						IKKD_MOD_DT = SYSDATE,						/*Ver 3.2*/
						IKKD_MODIFY_BY = 'SVC_INSTA_ACC'  /*Ver 3.2*/
		WHERE		IKKD_PAN_NO = :c_pan_no
		/** commented in ver 3.4 AND			IKKD_UID_NO = :c_uid_no **/
		AND     IKKD_UID_REF_NO  = :aadhar_key  /** added in ver 3.4 **/
		AND			IKKD_KRA_ACTDEACT = 'A';
		/*AND			IKKD_KRA_STATUS = 'N'**Ver 2.0*/
		/*AND			IKKD_SRC_TYPE = 'A'; **Ver 2.2*/

	if(SQLCODE != 0)
	{
		errlog(c_ServiceName, "S31980", SQLMSG, DEF_USR, DEF_SSSN, c_err_msg);
    return -1;
	}

	MEMSET(sql_ikkd_updtflg);
	/*MEMSET(sql_ikkd_int_code);*/
	MEMSET(sql_ikkd_no);
	MEMSET(sql_ikkd_no);
	/*MEMSET(sql_ikkd_date);*/
	MEMSET(sql_ikkd_exmt_cat);
	MEMSET(sql_ikkd_exmt_id_prf);
	MEMSET(sql_ikkd_ipv_dt);
	MEMSET(sql_ikkd_name);
	/*MEMSET(sql_ikkd_f_name); **Ver 2.2*/
	MEMSET(sql_ikkd_reg_no);
	MEMSET(sql_ikkd_comnce_dt);
	/*MEMSET(sql_ikkd_nationality); **Ver 2.2**/
	/*MEMSET(sql_ikkd_oth_nationality); **Ver 2.2**/
	MEMSET(sql_ikkd_comp_status);
	MEMSET(sql_ikkd_oth_comp_status);
	MEMSET(sql_ikkd_res_status_prf);
	MEMSET(sql_ikkd_uid_no);
	MEMSET(sql_ikkd_cor_add1);
	MEMSET(sql_ikkd_cor_add2);
	MEMSET(sql_ikkd_cor_add3);
	MEMSET(sql_ikkd_cor_city);
	MEMSET(sql_ikkd_cor_pincd);
	MEMSET(sql_ikkd_cor_state);
	MEMSET(sql_ikkd_cor_ctry);
	MEMSET(sql_ikkd_off_no);
	MEMSET(sql_ikkd_res_no);
	MEMSET(sql_ikkd_kra_mob);
	MEMSET(sql_ikkd_fax_no);
	MEMSET(sql_ikkd_kra_email);
	MEMSET(sql_ikkd_cor_add_prf);
	MEMSET(sql_ikkd_cor_add_ref);
	MEMSET(sql_ikkd_cor_add_dt);
	MEMSET(sql_ikkd_per_add1);
	MEMSET(sql_ikkd_per_add2);
	MEMSET(sql_ikkd_per_add3);
	MEMSET(sql_ikkd_per_city);
	MEMSET(sql_ikkd_per_pincd);
	MEMSET(sql_ikkd_per_state);
	MEMSET(sql_ikkd_per_ctry);
	MEMSET(sql_ikkd_per_add_prf);
	MEMSET(sql_ikkd_per_add_ref);
	MEMSET(sql_ikkd_per_add_dt);
	MEMSET(sql_ikkd_income);
	MEMSET(sql_ikkd_occ);
	MEMSET(sql_ikkd_oth_occ);
	MEMSET(sql_ikkd_pol_conn);
	MEMSET(sql_ikkd_internal_ref);
	MEMSET(sql_ikkd_branch_code);
	/*MEMSET(sql_ikkd_mar_status);**Ver 2.2**/
	MEMSET(sql_ikkd_networth_dt);
	MEMSET(sql_ikkd_incorp_plc);
	MEMSET(sql_ikkd_otherinfo);
	MEMSET(sql_ikkd_filler1);
	MEMSET(sql_ikkd_filler2);
	MEMSET(sql_ikkd_filler3);
	MEMSET(sql_ikkd_status);
	MEMSET(sql_ikkd_statusdt);
	MEMSET(sql_ikkd_error_desc);
	MEMSET(sql_ikkd_dnlddt);
	MEMSET(sql_ikkd_kra_info);
	MEMSET(sql_ikkd_sign);
	MEMSET(sql_ikkd_kra_dob);
	MEMSET(c_off_isd);
	MEMSET(c_off_std);
	MEMSET(c_res_isd);
	MEMSET(c_res_std);
	MEMSET(c_mob_isd);
	MEMSET(c_fax_isd);
	MEMSET(c_fax_std);
	MEMSET(sql_ikkd_ipv_desg);
	MEMSET(sql_ikkd_uid_city);	/*Ver 2.2*/
	MEMSET(sql_ikkd_uid_state);	/*Ver 2.2*/
	MEMSET(sql_ikkd_uid_pincd);	/*Ver 2.5*/
	
	sql_ikkd_type='\0';
	sql_ikkd_exmt='\0';
	sql_ikkd_ipv_flg='\0';
	sql_ikkd_sex='\0';
	sql_ikkd_res_status='\0';
	sql_ikkd_pan_cpy='\0';
	sql_ikkd_doc_prf='\0';
	sql_ikkd_netwrth='\0';
	sql_ikkd_dump_type='\0';
	sql_ikkd_per_add_flg='\0';

	if(c_mbl_acc_opn == 'A')
	{
		sql_ikkd_pan_cpy = 'N';
	}
	else
	{
		sql_ikkd_pan_cpy = 'Y';
	}

	/*********************Commented in Ver 2.2 start*********************
	EXEC SQL
		SELECT	IKKD_UPDTFLG,
						IKKD_TYPE,
						IKKD_EXMT,
						IKKD_EXMT_ID_PRF,
						IKKD_IPV_FLG,
						TO_CHAR(IKKD_IPV_DT,'DD/MM/YYYY'),
						IKKD_SEX,
						IKKD_NAME,
						IKKD_F_NAME,
						IKKD_NATIONALITY,
						NVL(IKKD_OTH_NATIONALITY,' '),	
						IKKD_RES_STATUS,
						IKKD_UID_NO,
						NVL(IKKD_COR_ADD1,' '),
						NVL(IKKD_COR_ADD2,' '),
						NVL(IKKD_COR_ADD3,' '),
						NVL(IKKD_COR_CITY,' '),
						NVL(IKKD_COR_PINCD,' '),
						IKKD_COR_STATE,
						IKKD_COR_CTRY,
						DECODE(:c_mbl_acc_opn,'M',NVL(IKKD_CHNGD_MOBILE_NO,' '),NVL(IKKD_KRA_MOB,' ')),
						DECODE(:c_mbl_acc_opn,'M',NVL(IKKD_CHNGD_EMAIL_ID,' '),NVL(IKKD_KRA_EMAIL,' ')),
						IKKD_COR_ADD_PRF,
						IKKD_PER_ADD_PRF,
					  IKKD_INCOME_KRA,
						IKKD_OCC_KRA,
						NVL(IKKD_OTH_OCC,' '),
						IKKD_DOC_PRF,
						IKKD_MAR_STATUS,
						TO_CHAR(SYSDATE,'DD/MM/YYYY'),
						IKKD_PER_ADD_FLG,
						IKKD_POL_CONN,	
						IKKD_IPV_ORGN
	*********************Commented in Ver 2.2 start*********************/

	/*******************Added in Ver 2.2 start*******************/	
	EXEC SQL
		SELECT  DECODE(IKKD_KRA_STATUS,'Y','03','01'),
            'I',
            'N',
            '02',
            DECODE(:c_mbl_acc_opn,'M','Y','E'),
            DECODE(:c_mbl_acc_opn,'M',SYSDATE,TO_DATE('01/01/1900','DD/MM/YYYY')),
            IKKD_SEX,
            IKKD_UID_NM,
            :sql_ikkd_f_name,
            :sql_ikkd_nationality,
            NVL(:sql_ikkd_oth_nationality,' '),
            'R',
            /** commented in ver 3.4 IKKD_UID_NO,  **/
            NVL(UPPER(IKKD_UID_CITY),' '),
            NVL(IKKD_UID_PINCD,' '),
            IKKD_UID_STATE,
            '101',					/*Default country INDIA:101*/
            DECODE(:c_mbl_acc_opn,'M',NVL(IKKD_CHNGD_MOBILE_NO,' '),NVL(IKKD_KRA_MOB,' ')),
            DECODE(:c_mbl_acc_opn,'M',NVL(IKKD_CHNGD_EMAIL_ID,' '),NVL(IKKD_KRA_EMAIL,' ')),
            '31',
            '31',
            IKKD_INCOME_KRA,
            IKKD_OCC_KRA,
            NVL(IKKD_OTH_OCC,' '),
            'E',
            :sql_ikkd_mar_status,
            TO_CHAR(SYSDATE,'DD/MM/YYYY'),
            'N',
            IKKD_POL_CONN,
            'ICICISecurities',
						DECODE(IKKD_UID_AUTH_SRC,'O',1,2),
						'co~^dist~'||TRIM(IKKD_UID_DIST)||'^house~'||TRIM(IKKD_UID_BLDG)||'^lm~'||TRIM(IKKD_UID_LNDMRK)||
'^loc~'||TRIM(IKKD_UID_LOC)||'^pc~'||TRIM(IKKD_UID_PINCD)||'^po~^state~'||TRIM(IKKD_UID_STATE)||
'^street~'||TRIM(IKKD_UID_STREET)||'^subdist~^vtc~'||TRIM(IKKD_UID_CITY)||'^vtcCode~ ' /***in case UIDAI_TO_KRA*/
						/*IKKD_UID_BLDG||' '||IKKD_UID_STREET ||' '||IKKD_UID_LNDMRK||' '||IKKD_UID_LOC||' '||IKKD_UID_DIST**UIDAI_TO_NSDL***/
		/*******************Added in Ver 2.2 end*******************/
		INTO		:sql_ikkd_updtflg,
						:sql_ikkd_type,
						:sql_ikkd_exmt,
						:sql_ikkd_exmt_id_prf,
						:sql_ikkd_ipv_flg,
						:sql_ikkd_ipv_dt,
						:sql_ikkd_sex,
						:sql_ikkd_name,
						:sql_ikkd_f_name,
						:sql_ikkd_nationality,
						:sql_ikkd_oth_nationality,
						:sql_ikkd_res_status,
				    /** commented in ver 3.4 :sql_ikkd_uid_no, **/
						/***********Commented in Ver 2.5 start***********
						:sql_ikkd_cor_city,
						:sql_ikkd_cor_pincd,
						:sql_ikkd_cor_state,
						***********Commented in Ver 2.5 end***********/
						/***********Added in Ver 2.5 start***********/
						:sql_ikkd_uid_city,
            :sql_ikkd_uid_pincd,
            :sql_ikkd_uid_state,
						/***********Added in Ver 2.5 end***********/
						:sql_ikkd_cor_ctry,
						:sql_ikkd_kra_mob,
						:sql_ikkd_kra_email,
						:sql_ikkd_cor_add_prf,
						:sql_ikkd_per_add_prf,
						:sql_ikkd_income_kra,
						:sql_ikkd_occ_kra,
						:sql_ikkd_oth_occ,
						:sql_ikkd_doc_prf,
						:sql_ikkd_mar_status,
						:c_curr_dt,
						:sql_ikkd_per_add_flg,
						:sql_ikkd_pol_conn,
						:sql_ikkd_ipv_desg,
						:i_kyc_mode,						/*Ver 2.2*/
						:c_uidai_add						/*Ver 2.2*/
		FROM		IKKD_INFO_KRA_KYC_DTLS
		WHERE		IKKD_PAN_NO = :c_pan_no
		/** commented in ver 3.4 AND			IKKD_UID_NO =	:c_uid_no **/
		AND     IKKD_UID_REF_NO  = :aadhar_key  /** added in ver 3.4 **/
		/*AND			IKKD_KRA_STATUS = 'N' **Ver 2.0*/
		AND			IKKD_KRA_ACTDEACT = 'A';
	
	if(SQLCODE != 0)
  {
   	userlog("Error while selecting from IKKD_INFO_KRA_KYC_DTLS");
   	errlog(c_ServiceName, "S31985", SQLMSG, DEF_USR, DEF_SSSN, c_err_msg);
  	return -1;
  }

	if(strcmp(sql_ikkd_kra_mob.arr,"6666666666") != 0)
	{
		strcpy(c_mob_isd,"91");
	}

	rtrim(c_mob_isd);

	/*******************Added in Ver 2.2 start*******************/

	if(sql_ikkd_sex == 'F' && strcmp(sql_ikkd_mar_status.arr,"01") == 0 &&
														strlen(sql_ikkd_app_maiden_nm.arr) == 0)
	{
    errlog(c_ServiceName, "S31990", " ", DEF_USR, DEF_SSSN, c_err_msg);
		strcpy(c_err_msg,"Please enter valid Maiden name.");
    return -1;
	}

	SETNULL(sql_ikkd_cor_city);
	SETNULL(sql_ikkd_cor_state);
	SETNULL(sql_ikkd_uid_city);			/*Ver 2.5*/
	SETNULL(sql_ikkd_uid_pincd);		/*Ver 2.5*/
	SETNULL(sql_ikkd_uid_state);		/*Ver 2.5*/

	rtrim(c_uidai_add);

	userlog("c_pan_no :%s:",c_pan_no);
	userlog("c_uidai_add :%s:",c_uidai_add);
	userlog("sql_ikkd_cor_city :%s:",sql_ikkd_cor_city.arr);
	userlog("sql_ikkd_cor_state :%s:",sql_ikkd_cor_state.arr);
	userlog("sql_ikkd_uid_city :%s:",sql_ikkd_uid_city.arr);		/*Ver 2.5*/
	userlog("sql_ikkd_uid_pincd :%s:",sql_ikkd_uid_pincd.arr);	/*Ver 2.5*/
	userlog("sql_ikkd_uid_state :%s:",sql_ikkd_uid_state.arr);	/*Ver 2.5*/


	MEMSET(c_sp_err_msg);

	EXEC SQL
		EXECUTE
			BEGIN
				SP_GET_ADDRESS_FORMATTED_EBA(:c_pan_no,
																'UIDAI_TO_KRA',
                                :c_uidai_add,
                                'SVC_INSTA_ACC',
																/*********Commented in Ver 2.5 start*********
                                :sql_ikkd_cor_city,
                                :sql_ikkd_cor_state,
																*********Commented in Ver 2.5 end*********/
																/********Added in Ver 2.5 start********/
                                :sql_ikkd_uid_city,
                                :sql_ikkd_uid_state,
																/********Added in Ver 2.5 end********/
                                'IND',
                                :c_success_flg,
                                :c_sp_err_msg,
                                :sql_ikkd_cor_add1,
                                :sql_ikkd_cor_add2,
                                :sql_ikkd_cor_add3,
                                :c_null_bfr,
                                :c_null_bfr,
                                :c_null_bfr);
			END;
		END-EXEC;

	if(SQLCODE != 0 && SQLCODE != NULL_RETURN)
	{
		errlog(c_ServiceName, "S31995", SQLMSG, DEF_USR, DEF_SSSN, c_err_msg);
    strcpy(c_err_msg,"KRA Map code not found the KRA state");
    return -1;
	}

	if(c_success_flg != 'Y')
	{
		if(c_success_flg == 'F')
		{
			errlog(c_ServiceName, "S32000", "", DEF_USR, DEF_SSSN, c_err_msg);
			userlog("c_sp_err_msg :%s:",c_sp_err_msg);
		}
		return -1;
	}

	userlog("before sql_ikkd_cor_state:%s:",sql_ikkd_cor_state.arr);
	userlog("Before sql_ikkd_uid_state :%s:",sql_ikkd_uid_state.arr);		/*Ver 2.5*/

  EXEC SQL
    SELECT  ISM_KRA_MAP_CD
    /*INTO    :sql_ikkd_cor_state**Ver 2.5**/
    INTO    :sql_ikkd_uid_state	/*Ver 2.5*/
    FROM    ISM_INFO_STATE_MASTER
    /*WHERE   UPPER(ISM_UIDAI_MAP_CD) = UPPER(:sql_ikkd_cor_state) **Commented Ver 2.5*/
    WHERE   UPPER(ISM_UIDAI_MAP_CD) = UPPER(:sql_ikkd_uid_state)	 /**Ver 2.5**/
    AND     ISM_ACTIVE_FLAG = 'Y';

  if(SQLCODE != 0)
  {
    errlog(c_ServiceName, "S32005", SQLMSG, DEF_USR, DEF_SSSN, c_err_msg);
    strcpy(c_err_msg,"KRA Map code not found the KRA state");
    return -1;
  }

  SETNULL(sql_ikkd_cor_state);
	SETNULL(sql_ikkd_uid_state);		/*Ver 2.5*/

  userlog("after sql_ikkd_cor_state:%s:",sql_ikkd_cor_state.arr);
	userlog("After sql_ikkd_uid_state :%s:",sql_ikkd_uid_state.arr);
	/*******************Added in Ver 2.2 end*******************/

		
	/********temp*******/
	userlog("sql_ikkd_updtflg:%s:",sql_ikkd_updtflg.arr);
	userlog("sql_ikkd_type:%c:",sql_ikkd_type);
	userlog("sql_ikkd_exmt:%c:",sql_ikkd_exmt);
	userlog("sql_ikkd_exmt_id_prf:%s:",sql_ikkd_exmt_id_prf.arr);
	userlog("sql_ikkd_ipv_flg:%c:",sql_ikkd_ipv_flg);
	userlog("sql_ikkd_ipv_dt:%s:",sql_ikkd_ipv_dt.arr);
	userlog("sql_ikkd_sex:%c:",sql_ikkd_sex);
	userlog("sql_ikkd_name:%s:",sql_ikkd_name.arr);
	userlog("sql_ikkd_f_name:%s:",sql_ikkd_f_name.arr);
	userlog("sql_ikkd_nationality:%s:",sql_ikkd_nationality.arr);
	userlog("sql_ikkd_oth_nationality:%s:",sql_ikkd_oth_nationality.arr);
	userlog("sql_ikkd_res_status:%c:",sql_ikkd_res_status);
	userlog("sql_ikkd_uid_no:%s:",sql_ikkd_uid_no.arr);
	userlog("sql_ikkd_cor_add1:%s:",sql_ikkd_cor_add1.arr);
	userlog("sql_ikkd_cor_add2:%s:",sql_ikkd_cor_add2.arr);
	userlog("sql_ikkd_cor_add3:%s:",sql_ikkd_cor_add3.arr);
	userlog("sql_ikkd_cor_city:%s:",sql_ikkd_cor_city.arr);
	userlog("sql_ikkd_cor_pincd:%s:",sql_ikkd_cor_pincd.arr);
	userlog("sql_ikkd_cor_state:%s:",sql_ikkd_cor_state.arr);
	userlog("sql_ikkd_cor_ctry:%s:",sql_ikkd_cor_ctry.arr);
	userlog("sql_ikkd_kra_mob:%s:",sql_ikkd_kra_mob.arr);
	userlog("sql_ikkd_kra_email:%s:",sql_ikkd_kra_email.arr);
	userlog("sql_ikkd_cor_add_prf:%s:",sql_ikkd_cor_add_prf.arr);
	userlog("sql_ikkd_per_add_prf:%s:",sql_ikkd_per_add_prf.arr);
	userlog("sql_ikkd_income_kra:%s:",sql_ikkd_income_kra.arr);
	userlog("sql_ikkd_occ_kra:%s:",sql_ikkd_occ_kra.arr);
	userlog("sql_ikkd_oth_occ:%s:",sql_ikkd_oth_occ.arr);
	userlog("sql_ikkd_doc_prf:%c:",sql_ikkd_doc_prf);
	userlog("sql_ikkd_mar_status:%s:",sql_ikkd_mar_status.arr);
	userlog("sql_ikkd_per_add_flg :%c:",sql_ikkd_per_add_flg);
	userlog("sql_ikkd_pol_conn :%s:",sql_ikkd_pol_conn.arr);
	userlog("c_ipv_nm :%s:",c_ipv_nm);	
	userlog("c_ipv_desgn :%s:",c_ipv_desgn);
	userlog("sql_ikkd_ipv_desg :%s:",sql_ikkd_ipv_desg.arr);
	userlog("c_mob_isd :%s:",c_mob_isd);
	userlog("i_kyc_mode :%d:",i_kyc_mode);
		
	SETNULL(sql_ikkd_updtflg);
	/*SETNULL(sql_ikkd_int_code);*/
	SETNULL(sql_ikkd_no);
	SETNULL(sql_ikkd_no);
	SETNULL(sql_ikkd_date);
	SETNULL(sql_ikkd_exmt_cat);
	SETNULL(sql_ikkd_exmt_id_prf);
	SETNULL(sql_ikkd_ipv_dt);
	SETNULL(sql_ikkd_name);
	SETNULL(sql_ikkd_f_name);
	SETNULL(sql_ikkd_reg_no);
	SETNULL(sql_ikkd_comnce_dt);
	SETNULL(sql_ikkd_nationality);
	SETNULL(sql_ikkd_oth_nationality);
	SETNULL(sql_ikkd_comp_status);
	SETNULL(sql_ikkd_oth_comp_status);
	SETNULL(sql_ikkd_res_status_prf);
	SETNULL(sql_ikkd_uid_no);
	SETNULL(sql_ikkd_cor_add1);
	SETNULL(sql_ikkd_cor_add2);
	SETNULL(sql_ikkd_cor_add3);
	SETNULL(sql_ikkd_cor_city);
	SETNULL(sql_ikkd_cor_pincd);
	SETNULL(sql_ikkd_cor_state);
	SETNULL(sql_ikkd_cor_ctry);
	SETNULL(sql_ikkd_off_no);
	SETNULL(sql_ikkd_res_no);
	SETNULL(sql_ikkd_kra_mob);
	SETNULL(sql_ikkd_fax_no);
	SETNULL(sql_ikkd_kra_email);
	SETNULL(sql_ikkd_cor_add_prf);
	SETNULL(sql_ikkd_cor_add_ref);
	SETNULL(sql_ikkd_cor_add_dt);
	SETNULL(sql_ikkd_per_add_prf);
	SETNULL(sql_ikkd_per_add_ref);
	SETNULL(sql_ikkd_per_add_dt);
	SETNULL(sql_ikkd_income);
	SETNULL(sql_ikkd_occ);
	SETNULL(sql_ikkd_oth_occ);
	SETNULL(sql_ikkd_pol_conn);
	SETNULL(sql_ikkd_internal_ref);
	SETNULL(sql_ikkd_branch_code);
	SETNULL(sql_ikkd_mar_status);
	SETNULL(sql_ikkd_networth_dt);
	SETNULL(sql_ikkd_incorp_plc);
	SETNULL(sql_ikkd_otherinfo);
	SETNULL(sql_ikkd_filler1);
	SETNULL(sql_ikkd_filler2);
	SETNULL(sql_ikkd_filler3);
	SETNULL(sql_ikkd_status);
	SETNULL(sql_ikkd_statusdt);
	SETNULL(sql_ikkd_error_desc);
	SETNULL(sql_ikkd_dnlddt);
	SETNULL(sql_ikkd_kra_info);
	SETNULL(sql_ikkd_sign);
	SETNULL(sql_ikkd_kra_dob);
	SETNULL(sql_ikkd_ipv_desg);

							
	INIT(i_err,sizeof(i_err));
	INIT(i_ferr,sizeof(i_ferr));

	strcpy(sql_ikkd_date.arr,c_curr_dt);

	/*strcpy(sql_ikkd_cor_add_dt.arr,c_curr_dt);
	strcpy(sql_ikkd_per_add_dt.arr,c_curr_dt);*/

	i_err[0]=Fadd32(*ptr_fml_temp_buffer,FML_CC_ID,(char *)sql_ikkd_updtflg.arr,0);
	i_ferr[0]=Ferror32;
	/*i_err[1]=Fadd32(*ptr_fml_temp_buffer,FML_STTLMNT_NO,(char *)sql_ikkd_int_code.arr,0);
	i_ferr[1]=Ferror32; */
	i_err[2]=Fadd32(*ptr_fml_temp_buffer,FML_BRK_TYP,(char *)&sql_ikkd_type,0);
	i_ferr[2]=Ferror32;
	i_err[3]=Fadd32(*ptr_fml_temp_buffer,FML_NEW_ISIN,(char *)sql_ikkd_no.arr,0);
	i_ferr[3]=Ferror32;
	i_err[4]=Fadd32(*ptr_fml_temp_buffer,FML_STTLMNT_DT,(char *)sql_ikkd_date.arr,0);
	i_ferr[4]=Ferror32;
	i_err[5]=Fadd32(*ptr_fml_temp_buffer,FML_UPDATE_SUCCESS,(char *)&sql_ikkd_exmt,0);
	i_ferr[5]=Ferror32;
	i_err[6]=Fadd32(*ptr_fml_temp_buffer,FML_ACK_DT,(char *)sql_ikkd_exmt_cat.arr,0);
	i_ferr[6]=Ferror32;
	i_err[7]=Fadd32(*ptr_fml_temp_buffer,FML_ACCSS_TM,(char *)sql_ikkd_exmt_id_prf.arr,0);
	i_ferr[7]=Ferror32;
	i_err[8]=Fadd32(*ptr_fml_temp_buffer,FML_BLK_FLG,(char *)&sql_ikkd_ipv_flg,0);
	i_ferr[8]=Ferror32;
	i_err[9]=Fadd32(*ptr_fml_temp_buffer,FML_UPLOAD_DT,(char *)sql_ikkd_ipv_dt.arr,0);
	i_ferr[9]=Ferror32;
	i_err[10]=Fadd32(*ptr_fml_temp_buffer,FML_USR_SEX,(char *)&sql_ikkd_sex,0);
	i_ferr[10]=Ferror32;
	i_err[11]=Fadd32(*ptr_fml_temp_buffer,FML_USR_ADDRSS_STTE,(char *)sql_ikkd_name.arr,0);
	i_ferr[11]=Ferror32;
	i_err[12]=Fadd32(*ptr_fml_temp_buffer,FML_USR_FRST_NM,(char *)sql_ikkd_f_name.arr,0);
	i_ferr[12]=Ferror32;
	i_err[13]=Fadd32(*ptr_fml_temp_buffer,FML_ISIN_NMBR,(char *)sql_ikkd_reg_no.arr,0);
	i_ferr[13]=Ferror32;
	i_err[14]=Fadd32(*ptr_fml_temp_buffer,FML_ORD_DT,(char *)sql_ikkd_comnce_dt.arr,0);
	i_ferr[14]=Ferror32;
	i_err[15]=Fadd32(*ptr_fml_temp_buffer,FML_BK_CD,(char *)sql_ikkd_nationality.arr,0);
	i_ferr[15]=Ferror32;
	i_err[16]=Fadd32(*ptr_fml_temp_buffer,FML_STR_BUY_SELL,(char *)sql_ikkd_oth_nationality.arr,0);
	i_ferr[16]=Ferror32;
	i_err[17]=Fadd32(*ptr_fml_temp_buffer,FML_ND_STA,(char *)sql_ikkd_comp_status.arr,0);
	i_ferr[17]=Ferror32;
	i_err[18]=Fadd32(*ptr_fml_temp_buffer,FML_ARD_CLNT_RMRKS,(char *)sql_ikkd_oth_comp_status.arr,0);
	i_ferr[18]=Ferror32;
	i_err[19]=Fadd32(*ptr_fml_temp_buffer,FML_PRTFLO_EXISTS,(char *)&sql_ikkd_res_status,0);
	i_ferr[19]=Ferror32;
	i_err[20]=Fadd32(*ptr_fml_temp_buffer,FML_O_SYMBOL,(char *)sql_ikkd_res_status_prf.arr,0);
	i_ferr[20]=Ferror32;
	i_err[21]=Fadd32(*ptr_fml_temp_buffer,FML_ACTIVE,(char *)&sql_ikkd_pan_cpy,0);
	i_ferr[21]=Ferror32;
	i_err[22]=Fadd32(*ptr_fml_temp_buffer,FML_MATCH_ACCOUNT_NO,(char *)sql_ikkd_uid_no.arr,0);
	i_ferr[22]=Ferror32;
	i_err[23]=Fadd32(*ptr_fml_temp_buffer,FML_USR_ADDRSS_LN1,(char *)sql_ikkd_cor_add1.arr,0);
	i_ferr[23]=Ferror32;
	i_err[24]=Fadd32(*ptr_fml_temp_buffer,FML_USR_ADDRSS_LN2,(char *)sql_ikkd_cor_add2.arr,0);
	i_ferr[24]=Ferror32;
	i_err[25]=Fadd32(*ptr_fml_temp_buffer,FML_USR_ADDRSS_LN3,(char *)sql_ikkd_cor_add3.arr,0);
	i_ferr[25]=Ferror32;
	/*i_err[26]=Fadd32(*ptr_fml_temp_buffer,FML_UPS_LST_TRD_DT,(char *)sql_ikkd_cor_city.arr,0); **Ver 2.5**/
	i_err[26]=Fadd32(*ptr_fml_temp_buffer,FML_UPS_LST_TRD_DT,(char *)sql_ikkd_uid_city.arr,0);	/**Ver 2.5**/
	i_ferr[26]=Ferror32;
	/*i_err[27]=Fadd32(*ptr_fml_temp_buffer,FML_USR_ZIP_CD2,(char *)sql_ikkd_cor_pincd.arr,0);	**Ver 2.5**/
	i_err[27]=Fadd32(*ptr_fml_temp_buffer,FML_USR_ZIP_CD2,(char *)sql_ikkd_uid_pincd.arr,0);		/**Ver 2.5**/
	i_ferr[27]=Ferror32;
	/*i_err[28]=Fadd32(*ptr_fml_temp_buffer,FML_UWL_STCK_LST,(char *)sql_ikkd_cor_state.arr,0); **Ver 2.5*/
	i_err[28]=Fadd32(*ptr_fml_temp_buffer,FML_UWL_STCK_LST,(char *)sql_ikkd_uid_state.arr,0);		/**Ver 2.5**/
	i_ferr[28]=Ferror32;
	i_err[29]=Fadd32(*ptr_fml_temp_buffer,FML_USR_ADDRSS_CNTRY,(char *)sql_ikkd_cor_ctry.arr,0);
	i_ferr[29]=Ferror32;
	i_err[30]=Fadd32(*ptr_fml_temp_buffer,FML_ORD_ORDR_RFRNC,(char *)sql_ikkd_off_no.arr,0);
	i_ferr[30]=Ferror32;
	i_err[31]=Fadd32(*ptr_fml_temp_buffer,FML_ORD_XCHNG_CD,(char *)sql_ikkd_res_no.arr,0);
	i_ferr[31]=Ferror32;
	i_err[32]=Fadd32(*ptr_fml_temp_buffer,FML_TO_ADDR,(char *)sql_ikkd_kra_mob.arr, 0);
	i_ferr[32]=Ferror32;
	i_err[33]=Fadd32(*ptr_fml_temp_buffer,FML_USR_FAX_NMBRS,(char *)sql_ikkd_fax_no.arr,0);
	i_ferr[33]=Ferror32;
	i_err[34]=Fadd32(*ptr_fml_temp_buffer,FML_USR_EMAIL_ADDRSS,(char *)sql_ikkd_kra_email.arr,0);
	i_ferr[34]=Ferror32;
	i_err[35]=Fadd32(*ptr_fml_temp_buffer,FML_ORD_SUB_BRKR_TAG,(char *)sql_ikkd_cor_add_prf.arr,0);
	i_ferr[35]=Ferror32;
	i_err[36]=Fadd32(*ptr_fml_temp_buffer,FML_MMD_DSCRPTN,(char *)sql_ikkd_cor_add_ref.arr,0);
	i_ferr[36]=Ferror32;
	i_err[37]=Fadd32(*ptr_fml_temp_buffer,FML_TRD_DT,(char *)sql_ikkd_cor_add_dt.arr,0);
	i_ferr[37]=Ferror32;
	i_err[38]=Fadd32(*ptr_fml_temp_buffer,FML_STR_ORDER_NO,(char *)sql_ikkd_cor_add1.arr,0);
	i_ferr[38]=Ferror32;
	i_err[39]=Fadd32(*ptr_fml_temp_buffer,FML_STR_TRADE_NO,(char *)sql_ikkd_cor_add2.arr,0);
	i_ferr[39]=Ferror32;
	i_err[40]=Fadd32(*ptr_fml_temp_buffer,FML_STR_BRK_TYP,(char *)sql_ikkd_cor_add3.arr,0);
	i_ferr[40]=Ferror32;
	/*i_err[41]=Fadd32(*ptr_fml_temp_buffer,FML_MAIL_BODY,(char *)sql_ikkd_cor_city.arr,0); **Ver 2.5**/
	/*i_err[41]=Fadd32(*ptr_fml_temp_buffer,FML_MAIL_BODY,(char *)sql_ikkd_cor_city.arr,0);**Ver 2.5**Ver 2.6*/
	i_err[41]=Fadd32(*ptr_fml_temp_buffer,FML_MAIL_BODY,(char *)sql_ikkd_uid_city.arr,0);		/**Ver 2.6**/
	i_ferr[41]=Ferror32;
	/*i_err[42]=Fadd32(*ptr_fml_temp_buffer,FML_ACK_NMBR,(char *)sql_ikkd_cor_pincd.arr,0);		**Ver 2.5**/
	/*i_err[42]=Fadd32(*ptr_fml_temp_buffer,FML_ACK_NMBR,(char *)sql_ikkd_cor_pincd.arr,0);**Ver 2.5**Ver 2.6*/
	i_err[42]=Fadd32(*ptr_fml_temp_buffer,FML_ACK_NMBR,(char *)sql_ikkd_uid_pincd.arr,0);		/**Ver 2.6**/
	i_ferr[42]=Ferror32;
	/*i_err[43]=Fadd32(*ptr_fml_temp_buffer,FML_SYS_CMD,(char *)sql_ikkd_cor_state.arr,0); **Ver 2.5*/
	i_err[43]=Fadd32(*ptr_fml_temp_buffer,FML_SYS_CMD,(char *)sql_ikkd_uid_state.arr,0);	/**Ver 2.5**/
	i_ferr[43]=Ferror32;
	i_err[44]=Fadd32(*ptr_fml_temp_buffer,FML_SUBJECT,(char *)sql_ikkd_cor_ctry.arr,0);
	i_ferr[44]=Ferror32;
	i_err[45]=Fadd32(*ptr_fml_temp_buffer,FML_Q1EDITTEXT,(char *)sql_ikkd_per_add_prf.arr,0);
	i_ferr[45]=Ferror32;
	i_err[46]=Fadd32(*ptr_fml_temp_buffer,FML_Q2EDITTEXT,(char *)sql_ikkd_per_add_ref.arr,0);
	i_ferr[46]=Ferror32;
	i_err[47]=Fadd32(*ptr_fml_temp_buffer,FML_NXT_TR_DT,(char *)sql_ikkd_per_add_dt.arr,0);
	i_ferr[47]=Ferror32;
	i_err[48]=Fadd32(*ptr_fml_temp_buffer,FML_SEC_GRP,(char *)sql_ikkd_income_kra.arr,0);
	i_ferr[48]=Ferror32;
	i_err[49]=Fadd32(*ptr_fml_temp_buffer,FML_FILE_NAME,(char *)sql_ikkd_occ_kra.arr,0);
	i_ferr[49]=Ferror32;
	i_err[50]=Fadd32(*ptr_fml_temp_buffer,FML_MKT_MSG,(char *)sql_ikkd_oth_occ.arr,0);
	i_ferr[50]=Ferror32;
	i_err[51]=Fadd32(*ptr_fml_temp_buffer,FML_PARAM_CC,(char *)sql_ikkd_pol_conn.arr,0);
	i_ferr[51]=Ferror32;
	i_err[52]=Fadd32(*ptr_fml_temp_buffer,FML_VALID_FLAG,(char *)&sql_ikkd_doc_prf,0);
	i_ferr[52]=Ferror32;
	i_err[53]=Fadd32(*ptr_fml_temp_buffer,FML_MDC_NARRATION,(char *)sql_ikkd_internal_ref.arr,0);
	i_ferr[53]=Ferror32;
	i_err[54]=Fadd32(*ptr_fml_temp_buffer,FML_MDC_CRDT_NMBR,(char *)sql_ikkd_branch_code.arr,0);
	i_ferr[54]=Ferror32;
	i_err[55]=Fadd32(*ptr_fml_temp_buffer,FML_MDC_MAINCODE,(char *)sql_ikkd_mar_status.arr,0);
	i_ferr[55]=Ferror32;
	i_err[56]=Fadd32(*ptr_fml_temp_buffer,FML_SUB_MOD_FLG,(char *)&sql_ikkd_netwrth,0);
	i_ferr[56]=Ferror32;
	i_err[57]=Fadd32(*ptr_fml_temp_buffer,FML_PY_IN_DT,(char *)sql_ikkd_networth_dt.arr,0); 
	i_ferr[57]=Ferror32;
	i_err[58]=Fadd32(*ptr_fml_temp_buffer,FML_PRTC_CD,(char *)sql_ikkd_incorp_plc.arr,0);
	i_ferr[58]=Ferror32;
	i_err[59]=Fadd32(*ptr_fml_temp_buffer,FML_DLR_CD,(char *)sql_ikkd_otherinfo.arr,0);
	i_ferr[59]=Ferror32;
	i_err[60]=Fadd32(*ptr_fml_temp_buffer,FML_PHD_PRD_DT,(char *)sql_ikkd_filler1.arr,0);
	i_ferr[60]=Ferror32;
	i_err[61]=Fadd32(*ptr_fml_temp_buffer,FML_MMD_CHNG,(char *)sql_ikkd_filler2.arr,0);
	i_ferr[61]=Ferror32;
	i_err[62]=Fadd32(*ptr_fml_temp_buffer,FML_MMD_VL,(char *)sql_ikkd_filler3.arr,0);
	i_ferr[62]=Ferror32;
	i_err[71]=Fadd32(*ptr_fml_temp_buffer,FML_TRANS_TYP,(char *)c_off_isd, 0);
	i_ferr[71]=Ferror32;
	i_err[72]=Fadd32(*ptr_fml_temp_buffer,FML_INSTR_TYP,(char *)c_off_std, 0);
	i_ferr[72]=Ferror32;
	i_err[73]=Fadd32(*ptr_fml_temp_buffer,FML_GMS_STRT_DT,(char *)c_res_isd, 0);
	i_ferr[73]=Ferror32;
	i_err[74]=Fadd32(*ptr_fml_temp_buffer,FML_GMS_END_DT,(char *)c_res_std, 0);
	i_ferr[74]=Ferror32;
	i_err[75]=Fadd32(*ptr_fml_temp_buffer,FML_TRNSCTN_DT,(char *)c_mob_isd, 0);
	i_ferr[75]=Ferror32;
	i_err[76]=Fadd32(*ptr_fml_temp_buffer,FML_UWL_WTCH_NM,(char *)c_fax_isd, 0);
	i_ferr[76]=Ferror32;
	i_err[77]=Fadd32(*ptr_fml_temp_buffer,FML_UPS_STCK_CD,(char *)c_fax_std, 0);
	i_ferr[77]=Ferror32;
	i_err[78]=Fadd32(*ptr_fml_temp_buffer,FML_MRGN_FLG,(char *)&sql_ikkd_per_add_flg, 0);
	i_ferr[78]=Ferror32;
	i_err[79]=Fadd32(*ptr_fml_temp_buffer,FML_SETL_BEG_DT,(char *)c_ipv_nm, 0);
	i_ferr[79]=Ferror32;
	i_err[80]=Fadd32(*ptr_fml_temp_buffer,FML_SETL_END_DT,(char *)c_ipv_desgn, 0);
	i_ferr[80]=Ferror32;
	i_err[81]=Fadd32(*ptr_fml_temp_buffer,FML_FUND_IN_DT,(char *)sql_ikkd_ipv_desg.arr, 0);
	i_ferr[81]=Ferror32;
	i_err[82]=Fadd32(*ptr_fml_temp_buffer,FML_POINTS,(char *)&i_kyc_mode, 0);
	i_ferr[82]=Ferror32;

	for(i_loop=0;i_loop<83;i_loop++)
	{
		if(i_err[i_loop] == -1)
		{
			userlog("Error in Fadd :%d:",i_loop);
			errlog(c_ServiceName, "S32010", Fstrerror32(i_ferr[i_loop]), DEF_USR, DEF_SSSN, c_err_msg);
    	return -1;
		}
	}

	userlog("fn_upd_kra_upld_dtls completed....");
	return 0;
}

int fn_send_sms(char* mobile_no,char* message)
{

  char    c_dept_cd[20];
  char    c_app_id[20];
  int     i_ret_cd;
	int			i_err[10];
	int			i_err_msg[10];
	int			i_err_cnt;
  long    l_buff_length;
  FBFR32  *ptr_fml_Sbuf ;

  ptr_fml_Sbuf = (FBFR32*)NULL ;

  strcpy( c_dept_cd, "WEBTRADE" );
  strcpy( c_app_id, "TRDALERT" );

  userlog("c_dept_cd :%s:",c_dept_cd);
  userlog("c_app_id :%s:",c_app_id);
  userlog("mobile_no :%s:",mobile_no);
  userlog("message :%s:",message);

  l_buff_length = sizeof(c_dept_cd)               +
                  sizeof(c_app_id)                +
                  sizeof(mobile_no)               +
                  sizeof(message)                 +
                  1024;

  if((ptr_fml_Sbuf = (FBFR32*)tpalloc( "FML32",NULL,l_buff_length)) == (FBFR32*)NULL)
  {
    errlog(c_ServiceName,"S32015", TPMSG,(char *)DEF_USR,DEF_SSSN, c_err_msg);
    return -1;
  }

  INIT(i_err,10);
  INIT(i_err_msg,10);
	
	i_err[0] = Fadd32 (ptr_fml_Sbuf, FML_ORD_DP_ID, (char *)c_dept_cd, 0);
  i_err_msg[0]= Ferror32;
  i_err[1] = Fadd32 (ptr_fml_Sbuf, FML_ARD_APPLCTN_RFRNC, (char *)c_app_id, 0);
  i_err_msg[1]= Ferror32;
  i_err[2] = Fadd32 (ptr_fml_Sbuf, FML_SYS_MSG, (char *)message, 0);
  i_err_msg[2]= Ferror32;
  i_err[3] = Fadd32 (ptr_fml_Sbuf, FML_USR_MBL_NMBRS, (char *)mobile_no, 0);
  i_err_msg[3]= Ferror32;

  for(i_err_cnt=0; i_err_cnt<4; i_err_cnt++)
  {
    if(i_err[i_err_cnt] == -1)
    {
      userlog("Fget32 failed at i_err_cnt :%d:",i_err_cnt);
      errlog(c_ServiceName, "S32020", Fstrerror32(i_err_msg[i_err_cnt]), DEF_USR, DEF_SSSN, c_err_msg);
      tpfree((char *)ptr_fml_Sbuf);
      return -1;
    }
  }

	userlog("Calling SMS service for Mobile :%s:",mobile_no);

	i_ret_cd = tpacall("SVC_SND_SMSALRT",(char *)ptr_fml_Sbuf, 0,TPNOTRAN | TPNOREPLY);

  userlog("Called SMS service return code :%ld:",i_ret_cd);

  if ( i_ret_cd == -1 )
  {
    userlog("Error while calling SVC_SND_SMSALRT");
    errlog(c_ServiceName, "S32025", TPMSG, (char *)DEF_USR, DEF_SSSN, c_err_msg);
    tpfree((char *)ptr_fml_Sbuf);
    return -1;
  }

  userlog("FN_SEND_SMS completed successfully");
  tpfree((char *)ptr_fml_Sbuf);
  return 0;

}
/*********************************Added in Ver 2.0 end*******************************/

/******* Ver 2.8 *********/

int fn_aadhar_vault(char * aadhar_no,char * pan_no)
{

	int 	i_err_op[3];
	int 	i_ferr[3];
	int 	i_fml;
	char 	c_set;	
	char  c_aadhar_status;
	long 	l_recvbuff;
	varchar c_call_src[3];

	FBFR32 * ptr_fml_Sbuffer; /*Send buffer*/
  FBFR32 * ptr_fml_Rbuffer; /*Recieve buffer*/
	
	MEMSET(c_call_src);
	MEMSET(v_aadhar_ref);

	c_set = 'S';
	c_aadhar_status = 'N';
	ptr_fml_Sbuffer = NULL;
  ptr_fml_Rbuffer = NULL;

	ptr_fml_Sbuffer = (FBFR32 *) tpalloc ("FML32", NULL, MIN_FML_BUF_LEN * 50);

  if (ptr_fml_Sbuffer == NULL)
  {
		errlog(c_ServiceName, "S32030", TPMSG, (char *)DEF_USR, DEF_SSSN, c_err_msg);
    return -1;
  }

  /**Alocating recive buffer**/
  ptr_fml_Rbuffer = (FBFR32 *) tpalloc ("FML32", NULL, MIN_FML_BUF_LEN);

  if (ptr_fml_Rbuffer == NULL)
  {
    tpfree((char *)ptr_fml_Sbuffer);
		errlog(c_ServiceName, "S32035", TPMSG, (char *)DEF_USR, DEF_SSSN, c_err_msg);
    return -1;
  }


	strcpy(c_call_src.arr,"INS");
	SETNULL(c_call_src);

	userlog("In Vault function call");	
	userlog("Aadhar No :%s:",aadhar_no);

	i_err_op[0] = Fchg32 (ptr_fml_Sbuffer, FML_MDC_OPPACCCODE, 0, (char *)aadhar_no, 0);
  i_ferr[0]   = Ferror32;
  i_err_op[1] = Fchg32 (ptr_fml_Sbuffer, FML_PARAM_CC, 0, (char *)c_call_src.arr, 0);
  i_ferr[1]   = Ferror32;
  i_err_op[2] = Fchg32 (ptr_fml_Sbuffer, FML_MSG_TYP, 0, (char *)&c_set, 0);
  i_ferr[2]   = Ferror32;

  for(i_fml=0; i_fml<3; i_fml++)
 	{
  	if (i_err_op[i_fml] == -1)
    {
    	tpfree((char *)ptr_fml_Sbuffer);
			tpfree((char *)ptr_fml_Rbuffer);
			errlog(c_ServiceName, "S32040", FMLMSG, (char *)DEF_USR, DEF_SSSN, c_err_msg);
    	return -1;
    }
  }


	if((tpcall("SVC_AADHAR_VOLT",(char *)ptr_fml_Sbuffer, 0, (char **)&ptr_fml_Rbuffer, &l_recvbuff, TPNOTRAN)) == -1)
  {
  	MEMSET(c_err_msg);
		tpfree((char *)ptr_fml_Sbuffer);
    tpfree((char *)ptr_fml_Rbuffer);
    errlog(c_ServiceName, "S32045", TPMSG, (char *)DEF_USR, DEF_SSSN, c_err_msg);
    return -1;
  }

  i_err_op[0] = Fget32(ptr_fml_Rbuffer, FML_TM, 0, (char *)v_aadhar_ref.arr,0);
  i_ferr[0]   = Ferror32;

  if((i_err_op[0] == -1))
  {
		tpfree((char *)ptr_fml_Sbuffer);
    tpfree((char *)ptr_fml_Rbuffer);
    errlog(c_ServiceName, "S32050", FMLMSG, (char *)DEF_USR, DEF_SSSN, c_err_msg);
    return -1;
  }

  SETLEN(v_aadhar_ref);

	userlog("Aadhar Ref :%s:",v_aadhar_ref.arr);

	/**** Ver. 3.2 commented *****
	EXEC SQL
		SELECT IKD_AADHAR_STATUS
		INTO   :c_aadhar_status
		FROM   IKD_INFO_KRA_DTLS
		WHERE  IKD_AADHAR_KEY = :v_aadhar_ref
		AND    IKD_AADHAR_STATUS = 'S'
		AND    IKD_PAN_NO != :pan_no;
	**** Ver. 3.2 comment ends ***/
	/**** Added in Ver. 3.2 ******/
	EXEC SQL
		SELECT  /*+ index(IPD_INFO_PERSONAL_DTLS,IDX_IPD_AADHAR_KEY) */	IPD_AADHAR_STATUS /** Changes for optimisation Ver. 3.3 **/ 
		INTO		:c_aadhar_status
		FROM		IPD_INFO_PERSONAL_DTLS,
						IID_INFO_IDENTIFICATION_DTLS
		WHERE		IID_SERIAL_NO = IPD_SERIAL_NO
		AND			IPD_AADHAR_KEY = :v_aadhar_ref
		AND			IPD_AADHAR_STATUS = 'S'
		AND			IID_NO != :pan_no
		AND			IID_TYPE IN ('PAN','PAN_INV_JH','DP_HOLDER_A','DP_HOLDER_B','PAN_KARTA_HUF',
												 'PAN_CORP_PRINCIPLE_AUTHORIZED_USER', 'PAN_CORP_AUTHORIZED_USER1',
												 'PAN_CORP_AUTHORIZED_USER2', 'PART_AUTHORIZED_USER')
		AND			IPD_TYPE IN ('APPLICANT', 'INV_HOLDER_JH','DP_HOLDER_A', 'DP_HOLDER_B',
												 'HUF_KARTA_PERSON1','PART_AUTHORIZED_USER',
												 'CORP_PRINCIPLE_AUTHORIZED_USER','CORP_AUTHORIZED_USER1',
												 'CORP_AUTHORIZED_USER2')
		AND			ROWNUM = 1; 

	/*** Ver. 3.2 ends ***/

	if(SQLCODE != 0 && SQLCODE != NO_DATA_FOUND)
	{
    tpfree((char *)ptr_fml_Sbuffer);
    tpfree((char *)ptr_fml_Rbuffer);
    errlog(c_ServiceName, "S32055", SQLMSG, (char *)DEF_USR, DEF_SSSN, c_err_msg);
    return -1;
	}

	if(c_aadhar_status == 'S')
	{
		tpfree((char *)ptr_fml_Sbuffer);
    tpfree((char *)ptr_fml_Rbuffer);
		strcpy(c_err_msg,"Aadhaar already linked to other PAN");
		return -2;
	}

	tpfree((char *)ptr_fml_Sbuffer);
  tpfree((char *)ptr_fml_Rbuffer);

	return 0;

}
